#include <GUIConstants.au3>
Global $Count = 1

$InputBox = InputBox("Intelligent writer","Input sentence here..","I am a freaking idiot")
If @Error Then Exit

$SenLen = StringLen($InputBox)
$SplitSen = StringSplit($InputBox,"")

SetOn()

While 1
Sleep(20)	
	$msg = GUIGetmsg()
	If $msg = $GUI_EVENT_CLOSE Then Exit
WEnd

Func _a()
HotKeySet ( "a")	
_write()
HotKeySet ( "a" , "_a" )
EndFunc
Func _a1()
HotKeySet ( "+a")
_Write()
HotKeySet ( "+a" , "_a1" )
EndFunc
Func _b()
HotKeySet ( "b")
_Write()
HotKeySet ( "b" , "_b" )
EndFunc
Func _b1()
HotKeySet ( "+b")
_Write()
HotKeySet ( "+b" , "_b1" )
EndFunc
Func _c()
HotKeySet ( "c")
_Write()
HotKeySet ( "c" , "_c" )
EndFunc
Func _c1()
HotKeySet ( "+c")
_Write()
HotKeySet ( "+c" , "_c1" )
EndFunc
Func _d()
HotKeySet ( "d")
_Write()
HotKeySet ( "d" , "_d" )
EndFunc
Func _d1()
HotKeySet ( "+d")
_Write()
HotKeySet ( "+d" , "_d1" )
EndFunc
Func _e()
HotKeySet ( "e")
_Write()
HotKeySet ( "e" , "_e" )
EndFunc
Func _e1()
HotKeySet ( "+e")
_Write()
HotKeySet ( "+e" , "_e1" )
EndFunc
Func _f()
HotKeySet ( "f")
_Write()
HotKeySet ( "f" , "_f" )
EndFunc
Func _f1()
HotKeySet ( "+f")
_Write()
HotKeySet ( "+f" , "_f1" )
EndFunc
Func _g()
HotKeySet ( "g")
_Write()
HotKeySet ( "g" , "_g" )
EndFunc
Func _g1()
HotKeySet ( "+g")
_Write()
HotKeySet ( "+g" , "_g1" )
EndFunc
Func _h()
HotKeySet ( "h")
_Write()
HotKeySet ( "h" , "_h" )
EndFunc
Func _h1()
HotKeySet ( "+h")
_Write()
HotKeySet ( "+h" , "_h1" )
EndFunc
Func _i()
HotKeySet ( "i")
_Write()
HotKeySet ( "i" , "_i" )
EndFunc
Func _i1()
HotKeySet ( "+i")
_Write()
HotKeySet ( "+i" , "_i1" )
EndFunc
Func _j()
HotKeySet ( "j")
_Write()
HotKeySet ( "j" , "_j" )
EndFunc
Func _j1()
HotKeySet ( "+j")
_Write()
HotKeySet ( "+j" , "_j1" )
EndFunc
Func _k()
HotKeySet ( "k")
_Write()
HotKeySet ( "k" , "_k" )
EndFunc
Func _k1()
HotKeySet ( "+k")
_Write()
HotKeySet ( "+k" , "_k1" )
EndFunc
Func _l()
HotKeySet ( "l")
_Write()
HotKeySet ( "l" , "_l" )
EndFunc
Func _l1()
HotKeySet ( "+l")
_Write()
HotKeySet ( "+l" , "_l1" )
EndFunc
Func _m()
HotKeySet ( "m")
_Write()
HotKeySet ( "m" , "_m" )
EndFunc
Func _m1()
HotKeySet ( "+m")
_Write()
HotKeySet ( "+m" , "_m1" )
EndFunc
Func _n()
HotKeySet ( "n")
_Write()
HotKeySet ( "n" , "_n" )
EndFunc
Func _n1()
HotKeySet ( "+n")
_Write()
HotKeySet ( "+n" , "_n1" )
EndFunc
Func _o()
HotKeySet ( "o")
_Write()
HotKeySet ( "o" , "_o" )
EndFunc
Func _o1()
HotKeySet ( "+o")
_Write()
HotKeySet ( "+o" , "_o1" )
EndFunc
Func _p()
HotKeySet ( "p")
_Write()
HotKeySet ( "p" , "_p" )
EndFunc
Func _p1()
HotKeySet ( "+p")
_Write()
HotKeySet ( "+p" , "_p1" )
EndFunc
Func _q()
HotKeySet ( "q")
_Write()
HotKeySet ( "q" , "_q" )
EndFunc
Func _q1()
HotKeySet ( "+q")
_Write()
HotKeySet ( "+q" , "_q1" )
EndFunc
Func _r()
HotKeySet ( "r")
_Write()
HotKeySet ( "r" , "_r" )
EndFunc
Func _r1()
HotKeySet ( "+r")
_Write()
HotKeySet ( "+r" , "_r1" )
EndFunc
Func _s()
HotKeySet ( "s")
_Write()
HotKeySet ( "s" , "_s" )
EndFunc
Func _s1()
HotKeySet ( "+s")
_Write()
HotKeySet ( "+s" , "_s1" )
EndFunc
Func _t()
HotKeySet ( "t")
_Write()
HotKeySet ( "t" , "_t" )
EndFunc
Func _t1()
HotKeySet ( "+t")
_Write()
HotKeySet ( "+t" , "_t1" )
EndFunc
Func _u()
HotKeySet ( "u")
_Write()
HotKeySet ( "u" , "_u" )
EndFunc
Func _u1()
HotKeySet ( "+u")
_Write()
HotKeySet ( "+u" , "_u1" )
EndFunc
Func _v()
HotKeySet ( "v")
_Write()
HotKeySet ( "v" , "_v" )
EndFunc
Func _v1()
HotKeySet ( "+v")
_Write()
HotKeySet ( "+v" , "_v1" )
EndFunc
Func _w()
HotKeySet ( "w")
_Write()
HotKeySet ( "w" , "_w" )
EndFunc
Func _w1()
HotKeySet ( "+w")
_Write()
HotKeySet ( "+w" , "_w1" )
EndFunc
Func _x()
HotKeySet ( "x")
_Write()
HotKeySet ( "x" , "_x" )
EndFunc
Func _x1()
HotKeySet ( "+x")
_Write()
HotKeySet ( "+x" , "_x1" )
EndFunc
Func _y()
HotKeySet ( "y")
_Write()
HotKeySet ( "y" , "_y" )
EndFunc
Func _y1()
HotKeySet ( "+y")
_Write()
HotKeySet ( "+y" , "_y1" )
EndFunc
Func _z()
HotKeySet ( "z")
_Write()
HotKeySet ( "z" , "_z" )
EndFunc
Func _z1()
HotKeySet ( "+z")
_Write()
HotKeySet ( "+z" , "_z1" )
EndFunc
Func _aa()
HotKeySet ( "æ")
_Write()
HotKeySet ( "æ" , "_aa" )
EndFunc
Func _aa1()
HotKeySet ( "+æ")
_Write()
HotKeySet ( "+æ" , "_aa1" )
EndFunc
Func _bb()
HotKeySet ( "ø")
_Write()
HotKeySet ( "ø" , "_bb" )
EndFunc
Func _bb1()
HotKeySet ( "+ø")
_Write()
HotKeySet ( "+ø" , "_bb1" )
EndFunc
Func _cc()
HotKeySet ( "å")
_Write()
HotKeySet ( "å" , "_cc" )
EndFunc
Func _cc1()
HotKeySet ( "+å")
_Write()
HotKeySet ( "+å" , "_cc1" )
EndFunc
Func _Space()
HotKeySet ( "{SPACE}")
_Write()
HotKeySet ( "{SPACE}" , "_Space" )
EndFunc
Func _Enter()
HotKeySet ( "{ENTER}")
_Write()
HotKeySet ( "{ENTER}" , "_Enter" )
EndFunc
Func _Backspace()
HotKeySet ( "{BACKSPACE}")
_Write()
HotKeySet ( "{BACKSPACE}" , "_backspace" )
EndFunc
Func _Del()
HotKeySet ( "{DEL}")
_Write()
HotKeySet ( "{DEL}" , "_Del" )
EndFunc

Func _Dot()
HotKeySet ( ".")
_Write()
HotKeySet ( "." , "_Dot" )
EndFunc

Func _Comma()
HotKeySet ( ",")
_Write()
HotKeySet ( "," , "_Comma" )
EndFunc

;~ Func _Streg()
;~ HotKeySet ( "-")
;~ _Write()
;~ HotKeySet ( "-" , "_Streg" )
;~ EndFunc



Func _Write()
	If $Count-1 = $SenLen Then
		Global $Count = 0
		SetOff()
		Send(" ")
		SetOn()
		$Count = $Count + 1
	Else	
		SetOff()
		Send($SplitSen[$Count])
		SetOn()
		$Count = $Count + 1
	EndIf
EndFunc	

Func SetOff()
BlockInput(1)
HotKeySet ( "a")
HotKeySet ( "+a")
HotKeySet ( "b")
HotKeySet ( "+b")
HotKeySet ( "c")
HotKeySet ( "+c")
HotKeySet ( "d")
HotKeySet ( "+d")
HotKeySet ( "e")
HotKeySet ( "+e")
HotKeySet ( "f")
HotKeySet ( "+f")
HotKeySet ( "g")
HotKeySet ( "+g")
HotKeySet ( "h")
HotKeySet ( "+h")
HotKeySet ( "i")
HotKeySet ( "+i")
HotKeySet ( "j")
HotKeySet ( "+j")
HotKeySet ( "k")
HotKeySet ( "+k")
HotKeySet ( "l")
HotKeySet ( "+l")
HotKeySet ( "m")
HotKeySet ( "+m")
HotKeySet ( "n")
HotKeySet ( "+n")
HotKeySet ( "o")
HotKeySet ( "+o")
HotKeySet ( "p")
HotKeySet ( "+p")
HotKeySet ( "q")
HotKeySet ( "+q")
HotKeySet ( "r")
HotKeySet ( "+r")
HotKeySet ( "s")
HotKeySet ( "+s")
HotKeySet ( "t")
HotKeySet ( "+t")
HotKeySet ( "u")
HotKeySet ( "+u")
HotKeySet ( "v")
HotKeySet ( "w")
HotKeySet ( "+w")
HotKeySet ( "x")
HotKeySet ( "+x")
HotKeySet ( "y")
HotKeySet ( "+y")
HotKeySet ( "z")
HotKeySet ( "+z")
HotKeySet ( "æ")
HotKeySet ( "+æ")
HotKeySet ( "ø")
HotKeySet ( "+ø")
HotKeySet ( "å")
HotKeySet ( "+å")
HotKeySet ( "{SPACE}")
HotKeySet ( "{ENTER}")
HotKeySet ( "{BACKSPACE}")
HotKeySet ( "{DEL}")
HotKeySet ( "{BACKSPACE}")
HotKeySet ( ".")
HotKeySet ( ",")
;HotKeySet ( "-")
EndFunc

Func SetOn()
HotKeySet ( "a" , "_a")
HotKeySet ( "+a" , "_a1" )
HotKeySet ( "b" , "_b" )
HotKeySet ( "+b" , "_b1" )
HotKeySet ( "c" , "_c" )
HotKeySet ( "+c" , "_c1" )
HotKeySet ( "d" , "_d" )
HotKeySet ( "+d" , "_d1" )
HotKeySet ( "e" , "_e" )
HotKeySet ( "+e" , "_e1" )
HotKeySet ( "f" , "_f" )
HotKeySet ( "+f" , "_f1" )
HotKeySet ( "g" , "_g" )
HotKeySet ( "+g" , "_g1" )
HotKeySet ( "h" , "_h" )
HotKeySet ( "+h" , "_h1" )
HotKeySet ( "i" , "_i" )
HotKeySet ( "+i" , "_i1" )
HotKeySet ( "j" , "_j" )
HotKeySet ( "+j" , "_j1" )
HotKeySet ( "k" , "_k" )
HotKeySet ( "+k" , "_k1" )
HotKeySet ( "l" , "_l" )
HotKeySet ( "+l" , "_l1" )
HotKeySet ( "m" , "_m" )
HotKeySet ( "+m" , "_m1" )
HotKeySet ( "n" , "_n" )
HotKeySet ( "+n" , "_n1" )
HotKeySet ( "o" , "_o" )
HotKeySet ( "+o" , "_o1" )
HotKeySet ( "p" , "_p" )
HotKeySet ( "+p" , "_p1" )
HotKeySet ( "q" , "_q" )
HotKeySet ( "+q" , "_q1" )
HotKeySet ( "r" , "_r" )
HotKeySet ( "+r" , "_r1" )
HotKeySet ( "s" , "_s" )
HotKeySet ( "+s" , "_s1" )
HotKeySet ( "t" , "_t" )
HotKeySet ( "+t" , "_t1" )
HotKeySet ( "u" , "_u" )
HotKeySet ( "+u" , "_u1" )
HotKeySet ( "v" , "_v" )
HotKeySet ( "+v" , "_v1" )
HotKeySet ( "w" , "_w" )
HotKeySet ( "+w" , "_w1" )
HotKeySet ( "x" , "_x" )
HotKeySet ( "+x" , "_x1" )
HotKeySet ( "y" , "_y" )
HotKeySet ( "+y" , "_y1" )
HotKeySet ( "z" , "_z" )
HotKeySet ( "+z" , "_z1" )
HotKeySet ( "æ" , "_aa" )
HotKeySet ( "+æ" , "_aa1" )
HotKeySet ( "ø" , "_bb" )
HotKeySet ( "+ø" , "_bb1" )
HotKeySet ( "å" , "_cc" )
HotKeySet ( "+å" , "_cc1" )
HotKeySet ( "{SPACE}" , "_Space" )
HotKeySet ( "{ENTER}" , "_Enter" )
HotKeySet ( "{BACKSPACE}" , "_Backspace" )
HotKeySet ( "{DEL}" , "_Del" )
HotKeySet ( "{BACKSPACE}" , "_Backspace" )
HotKeySet ( "." , "_Dot" )
HotKeySet ( "," , "_comma" )
;HotKeySet ( "-" , "_Streg" )
BlockInput(0)
EndFunc

	