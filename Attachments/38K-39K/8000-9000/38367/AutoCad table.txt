; IAcadSummaryInfo: IAcadSummaryInfo Interface
; Property values:
;   Author = ""
;   Comments = ""
;   HyperlinkBase = ""
;   Keywords = ""
;   LastSavedBy = "Main"
;   RevisionNumber = ""
;   Subject = ""
;   Title = ""
; Methods supported:
;   AddCustomInfo (2)
;   GetCustomByIndex (3)
;   GetCustomByKey (2)
;   NumCustomInfo ()
;   RemoveCustomByIndex (1)
;   RemoveCustomByKey (1)
;   SetCustomByIndex (3)
;   SetCustomByKey (2)

addCustomSummaryInfo



Density of steel: 0.283lb/in^3 

Area  * Height = Volume 
36.23 * 0.375  = 13.58625in^3

Volume   * Density = Weight
13.58625 * 0.283   = 3.84490875 Lbs



==============================

Area * Height = Volume mm3

21519.77876* 9.525 = 0.490322235mm3

Volume * Density = Weight
0.490322235 * 7850 = 3849.02954475


xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
AutoCAD; // AutoCAD 2012 Type Library
UUID {E072BCE4-9027-4F86-BAE2-EF119FD0A0D3};
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx



==================================================================================

enum AcBoolean;
{
  acFalse = 0,
  acTrue = 1
};


==================================================================================

enum AcOnOff;
{
  acOff = 0,
  acOn = 1
};


==================================================================================

enum AcEntityName;
{
  ac3dFace = 1,
  ac3dPolyline = 2,
  ac3dSolid = 3,
  acArc = 4,
  acAttribute = 5,
  acAttributeReference = 6,
  acBlockReference = 7,
  acCircle = 8,
  acDimAligned = 9,
  acDimAngular = 10,
  acDimDiametric = 12,
  acDimOrdinate = 13,
  acDimRadial = 14,
  acDimRotated = 15,
  acEllipse = 16,
  acHatch = 17,
  acLeader = 18,
  acLine = 19,
  acMtext = 21,
  acPoint = 22,
  acPolyline = 23,
  acPolylineLight = 24,
  acPolymesh = 25,
  acRaster = 26,
  acRay = 27,
  acRegion = 28,
  acShape = 29,
  acSolid = 30,
  acSpline = 31,
  acText = 32,
  acTolerance = 33,
  acTrace = 34,
  acPViewport = 35,
  acXline = 36,
  acGroup = 37,
  acMInsertBlock = 38,
  acPolyfaceMesh = 39,
  acMLine = 40,
  acDim3PointAngular = 41,
  acExternalReference = 42,
  acTable = 43,
  acDimArcLength = 44,
  acDimRadialLarge = 45,
  acDwfUnderlay = 46,
  acDgnUnderlay = 47,
  acMLeader = 48,
  acSubDMesh = 49,
  acPdfUnderlay = 50,
  acNurbSurface = 51
};


==================================================================================

enum AcActiveSpace;
{
  acPaperSpace = 0,
  acModelSpace = 1
};


==================================================================================

enum AcKeyboardAccelerator;
{
  acPreferenceClassic = 0,
  acPreferenceCustom = 1
};


==================================================================================

enum AcPlotOrientation;
{
  acPlotOrientationPortrait = 0,
  acPlotOrientationLandscape = 1
};


==================================================================================

enum AcColor;
{
  acByBlock = 0,
  acRed = 1,
  acYellow = 2,
  acGreen = 3,
  acCyan = 4,
  acBlue = 5,
  acMagenta = 6,
  acWhite = 7,
  acByLayer = 256
};


==================================================================================

enum AcAttachmentPoint;
{
  acAttachmentPointTopLeft = 1,
  acAttachmentPointTopCenter = 2,
  acAttachmentPointTopRight = 3,
  acAttachmentPointMiddleLeft = 4,
  acAttachmentPointMiddleCenter = 5,
  acAttachmentPointMiddleRight = 6,
  acAttachmentPointBottomLeft = 7,
  acAttachmentPointBottomCenter = 8,
  acAttachmentPointBottomRight = 9
};


==================================================================================

enum AcDrawingDirection;
{
  acLeftToRight = 1,
  acRightToLeft = 2,
  acTopToBottom = 3,
  acBottomToTop = 4,
  acByStyle = 5
};


==================================================================================

enum AcLeaderType;
{
  acLineNoArrow = 0,
  acSplineNoArrow = 1,
  acLineWithArrow = 2,
  acSplineWithArrow = 3
};


==================================================================================

enum AcAttributeMode;
{
  acAttributeModeNormal = 0,
  acAttributeModeInvisible = 1,
  acAttributeModeConstant = 2,
  acAttributeModeVerify = 4,
  acAttributeModePreset = 8,
  acAttributeModeLockPosition = 16,
  acAttributeModeMultipleLine = 32
};


==================================================================================

enum AcHorizontalAlignment;
{
  acHorizontalAlignmentLeft = 0,
  acHorizontalAlignmentCenter = 1,
  acHorizontalAlignmentRight = 2,
  acHorizontalAlignmentAligned = 3,
  acHorizontalAlignmentMiddle = 4,
  acHorizontalAlignmentFit = 5
};


==================================================================================

enum AcVerticalAlignment;
{
  acVerticalAlignmentBaseline = 0,
  acVerticalAlignmentBottom = 1,
  acVerticalAlignmentMiddle = 2,
  acVerticalAlignmentTop = 3
};


==================================================================================

enum AcTextGenerationFlag;
{
  acTextFlagBackward = 2,
  acTextFlagUpsideDown = 4
};


==================================================================================

enum AcSelect;
{
  acSelectionSetWindow = 0,
  acSelectionSetCrossing = 1,
  acSelectionSetFence = 2,
  acSelectionSetPrevious = 3,
  acSelectionSetLast = 4,
  acSelectionSetAll = 5,
  acSelectionSetWindowPolygon = 6,
  acSelectionSetCrossingPolygon = 7
};


==================================================================================

enum AcPatternType;
{
  acHatchPatternTypeUserDefined = 0,
  acHatchPatternTypePreDefined = 1,
  acHatchPatternTypeCustomDefined = 2
};


==================================================================================

enum AcLoopType;
{
  acHatchLoopTypeDefault = 0,
  acHatchLoopTypeExternal = 1,
  acHatchLoopTypePolyline = 2,
  acHatchLoopTypeDerived = 4,
  acHatchLoopTypeTextbox = 8
};


==================================================================================

enum AcHatchStyle;
{
  acHatchStyleNormal = 0,
  acHatchStyleOuter = 1,
  acHatchStyleIgnore = 2
};


==================================================================================

enum AcPolylineType;
{
  acSimplePoly = 0,
  acFitCurvePoly = 1,
  acQuadSplinePoly = 2,
  acCubicSplinePoly = 3
};


==================================================================================

enum Ac3DPolylineType;
{
  acSimple3DPoly = 0,
  acQuadSpline3DPoly = 1,
  acCubicSpline3DPoly = 2
};


==================================================================================

enum AcViewportSplitType;
{
  acViewport2Horizontal = 0,
  acViewport2Vertical = 1,
  acViewport3Left = 2,
  acViewport3Right = 3,
  acViewport3Horizontal = 4,
  acViewport3Vertical = 5,
  acViewport3Above = 6,
  acViewport3Below = 7,
  acViewport4 = 8
};


==================================================================================

enum AcRegenType;
{
  acActiveViewport = 0,
  acAllViewports = 1
};


==================================================================================

enum AcBooleanType;
{
  acUnion = 0,
  acIntersection = 1,
  acSubtraction = 2
};


==================================================================================

enum AcExtendOption;
{
  acExtendNone = 0,
  acExtendThisEntity = 1,
  acExtendOtherEntity = 2,
  acExtendBoth = 3
};


==================================================================================

enum AcAngleUnits;
{
  acDegrees = 0,
  acDegreeMinuteSeconds = 1,
  acGrads = 2,
  acRadians = 3
};


==================================================================================

enum AcUnits;
{
  acDefaultUnits = -1,
  acScientific = 1,
  acDecimal = 2,
  acEngineering = 3,
  acArchitectural = 4,
  acFractional = 5
};


==================================================================================

enum AcCoordinateSystem;
{
  acWorld = 0,
  acUCS = 1,
  acDisplayDCS = 2,
  acPaperSpaceDCS = 3,
  acOCS = 4
};


==================================================================================

enum AcMeasurementUnits;
{
  acEnglish = 0,
  acMetric = 1
};


==================================================================================

enum AcXRefDemandLoad;
{
  acDemandLoadDisabled = 0,
  acDemandLoadEnabled = 1,
  acDemandLoadEnabledWithCopy = 2
};


==================================================================================

enum AcPreviewMode;
{
  acPartialPreview = 0,
  acFullPreview = 1
};


==================================================================================

enum AcPolymeshType;
{
  acSimpleMesh = 0,
  acQuadSurfaceMesh = 5,
  acCubicSurfaceMesh = 6,
  acBezierSurfaceMesh = 8
};


==================================================================================

enum AcZoomScaleType;
{
  acZoomScaledAbsolute = 0,
  acZoomScaledRelative = 1,
  acZoomScaledRelativePSpace = 2
};


==================================================================================

enum AcDragDisplayMode;
{
  acDragDoNotDisplay = 0,
  acDragDisplayOnRequest = 1,
  acDragDisplayAutomatically = 2
};


==================================================================================

enum AcARXDemandLoad;
{
  acDemanLoadDisable = 0,
  acDemandLoadOnObjectDetect = 1,
  acDemandLoadCmdInvoke = 2
};


==================================================================================

enum AcTextFontStyle;
{
  acFontRegular = 0,
  acFontItalic = 1,
  acFontBold = 2,
  acFontBoldItalic = 3
};


==================================================================================

enum AcProxyImage;
{
  acProxyNotShow = 0,
  acProxyShow = 1,
  acProxyBoundingBox = 2
};


==================================================================================

enum AcKeyboardPriority;
{
  acKeyboardRunningObjSnap = 0,
  acKeyboardEntry = 1,
  acKeyboardEntryExceptScripts = 2
};


==================================================================================

enum AcMenuGroupType;
{
  acBaseMenuGroup = 0,
  acPartialMenuGroup = 1
};


==================================================================================

enum AcMenuFileType;
{
  acMenuFileCompiled = 0,
  acMenuFileSource = 1
};


==================================================================================

enum AcMenuItemType;
{
  acMenuItem = 0,
  acMenuSeparator = 1,
  acMenuSubMenu = 2
};


==================================================================================

enum AcToolbarItemType;
{
  acToolbarButton = 0,
  acToolbarSeparator = 1,
  acToolbarControl = 2,
  acToolbarFlyout = 3
};


==================================================================================

enum AcToolbarDockStatus;
{
  acToolbarDockTop = 0,
  acToolbarDockBottom = 1,
  acToolbarDockLeft = 2,
  acToolbarDockRight = 3,
  acToolbarFloating = 4
};


==================================================================================

enum AcLineWeight;
{
  acLnWt000 = 0,
  acLnWt005 = 5,
  acLnWt009 = 9,
  acLnWt013 = 13,
  acLnWt015 = 15,
  acLnWt018 = 18,
  acLnWt020 = 20,
  acLnWt025 = 25,
  acLnWt030 = 30,
  acLnWt035 = 35,
  acLnWt040 = 40,
  acLnWt050 = 50,
  acLnWt053 = 53,
  acLnWt060 = 60,
  acLnWt070 = 70,
  acLnWt080 = 80,
  acLnWt090 = 90,
  acLnWt100 = 100,
  acLnWt106 = 106,
  acLnWt120 = 120,
  acLnWt140 = 140,
  acLnWt158 = 158,
  acLnWt200 = 200,
  acLnWt211 = 211,
  acLnWtByLayer = -1,
  acLnWtByBlock = -2,
  acLnWtByLwDefault = -3
};


==================================================================================

enum AcWindowState;
{
  acNorm = 1,
  acMin = 2,
  acMax = 3
};


==================================================================================

enum AcPlotPaperUnits;
{
  acInches = 0,
  acMillimeters = 1,
  acPixels = 2
};


==================================================================================

enum AcPlotRotation;
{
  ac0degrees = 0,
  ac90degrees = 1,
  ac180degrees = 2,
  ac270degrees = 3
};


==================================================================================

enum AcPlotType;
{
  acDisplay = 0,
  acExtents = 1,
  acLimits = 2,
  acView = 3,
  acWindow = 4,
  acLayout = 5
};


==================================================================================

enum AcPlotScale;
{
  acScaleToFit = 0,
  ac1_128in_1ft = 1,
  ac1_64in_1ft = 2,
  ac1_32in_1ft = 3,
  ac1_16in_1ft = 4,
  ac3_32in_1ft = 5,
  ac1_8in_1ft = 6,
  ac3_16in_1ft = 7,
  ac1_4in_1ft = 8,
  ac3_8in_1ft = 9,
  ac1_2in_1ft = 10,
  ac3_4in_1ft = 11,
  ac1in_1ft = 12,
  ac3in_1ft = 13,
  ac6in_1ft = 14,
  ac1ft_1ft = 15,
  ac1_1 = 16,
  ac1_2 = 17,
  ac1_4 = 18,
  ac1_5 = 19,
  ac1_8 = 20,
  ac1_10 = 21,
  ac1_16 = 22,
  ac1_20 = 23,
  ac1_30 = 24,
  ac1_40 = 25,
  ac1_50 = 26,
  ac1_100 = 27,
  ac2_1 = 28,
  ac4_1 = 29,
  ac8_1 = 30,
  ac10_1 = 31,
  ac100_1 = 32
};


==================================================================================

enum AcAlignment;
{
  acAlignmentLeft = 0,
  acAlignmentCenter = 1,
  acAlignmentRight = 2,
  acAlignmentAligned = 3,
  acAlignmentMiddle = 4,
  acAlignmentFit = 5,
  acAlignmentTopLeft = 6,
  acAlignmentTopCenter = 7,
  acAlignmentTopRight = 8,
  acAlignmentMiddleLeft = 9,
  acAlignmentMiddleCenter = 10,
  acAlignmentMiddleRight = 11,
  acAlignmentBottomLeft = 12,
  acAlignmentBottomCenter = 13,
  acAlignmentBottomRight = 14
};


==================================================================================

alias ACAD_COLOR;
 <enum> AcColor; 


==================================================================================

alias ACAD_LAYER;
 BSTR; 


==================================================================================

alias ACAD_LTYPE;
 BSTR; 


==================================================================================

alias ACAD_NULL;
 int; 


==================================================================================

alias ACAD_DISTANCE;
 double; 


==================================================================================

alias ACAD_ANGLE;
 double; 


==================================================================================

alias ACAD_LWEIGHT;
 <enum> AcLineWeight; 


==================================================================================

alias ACAD_NOUNITS;
 double; 


==================================================================================

alias ACAD_POINT;
 VARIANT; 


==================================================================================

enum AcLineSpacingStyle;
{
  acLineSpacingStyleAtLeast = 1,
  acLineSpacingStyleExactly = 2
};


==================================================================================

enum AcDimPrecision;
{
  acDimPrecisionZero = 0,
  acDimPrecisionOne = 1,
  acDimPrecisionTwo = 2,
  acDimPrecisionThree = 3,
  acDimPrecisionFour = 4,
  acDimPrecisionFive = 5,
  acDimPrecisionSix = 6,
  acDimPrecisionSeven = 7,
  acDimPrecisionEight = 8
};


==================================================================================

enum AcDimUnits;
{
  acDimScientific = 1,
  acDimDecimal = 2,
  acDimEngineering = 3,
  acDimArchitecturalStacked = 4,
  acDimFractionalStacked = 5,
  acDimArchitectural = 6,
  acDimFractional = 7,
  acDimWindowsDesktop = 8
};


==================================================================================

enum AcDimLUnits;
{
  acDimLScientific = 1,
  acDimLDecimal = 2,
  acDimLEngineering = 3,
  acDimLArchitectural = 4,
  acDimLFractional = 5,
  acDimLWindowsDesktop = 6
};


==================================================================================

enum AcDimArrowheadType;
{
  acArrowDefault = 0,
  acArrowClosedBlank = 1,
  acArrowClosed = 2,
  acArrowDot = 3,
  acArrowArchTick = 4,
  acArrowOblique = 5,
  acArrowOpen = 6,
  acArrowOrigin = 7,
  acArrowOrigin2 = 8,
  acArrowOpen90 = 9,
  acArrowOpen30 = 10,
  acArrowDotSmall = 11,
  acArrowDotBlank = 12,
  acArrowSmall = 13,
  acArrowBoxBlank = 14,
  acArrowBoxFilled = 15,
  acArrowDatumBlank = 16,
  acArrowDatumFilled = 17,
  acArrowIntegral = 18,
  acArrowNone = 19,
  acArrowUserDefined = 20
};


==================================================================================

enum AcDimCenterType;
{
  acCenterMark = 0,
  acCenterLine = 1,
  acCenterNone = 2
};


==================================================================================

enum AcDimFit;
{
  acTextAndArrows = 0,
  acArrowsOnly = 1,
  acTextOnly = 2,
  acBestFit = 3
};


==================================================================================

enum AcDimFractionType;
{
  acHorizontal = 0,
  acDiagonal = 1,
  acNotStacked = 2
};


==================================================================================

enum AcDimArcLengthSymbol;
{
  acSymInFront = 0,
  acSymAbove = 1,
  acSymNone = 2
};


==================================================================================

enum AcDimHorizontalJustification;
{
  acHorzCentered = 0,
  acFirstExtensionLine = 1,
  acSecondExtensionLine = 2,
  acOverFirstExtension = 3,
  acOverSecondExtension = 4
};


==================================================================================

enum AcDimVerticalJustification;
{
  acVertCentered = 0,
  acAbove = 1,
  acOutside = 2,
  acJIS = 3,
  acUnder = 4
};


==================================================================================

enum AcDimTextMovement;
{
  acDimLineWithText = 0,
  acMoveTextAddLeader = 1,
  acMoveTextNoLeader = 2
};


==================================================================================

enum AcDimToleranceMethod;
{
  acTolNone = 0,
  acTolSymmetrical = 1,
  acTolDeviation = 2,
  acTolLimits = 3,
  acTolBasic = 4
};


==================================================================================

enum AcDimToleranceJustify;
{
  acTolBottom = 0,
  acTolMiddle = 1,
  acTolTop = 2
};


==================================================================================

enum AcViewportScale;
{
  acVpScaleToFit = 0,
  acVpCustomScale = 1,
  acVp1_1 = 2,
  acVp1_2 = 3,
  acVp1_4 = 4,
  acVp1_5 = 5,
  acVp1_8 = 6,
  acVp1_10 = 7,
  acVp1_16 = 8,
  acVp1_20 = 9,
  acVp1_30 = 10,
  acVp1_40 = 11,
  acVp1_50 = 12,
  acVp1_100 = 13,
  acVp2_1 = 14,
  acVp4_1 = 15,
  acVp8_1 = 16,
  acVp10_1 = 17,
  acVp100_1 = 18,
  acVp1_128in_1ft = 19,
  acVp1_64in_1ft = 20,
  acVp1_32in_1ft = 21,
  acVp1_16in_1ft = 22,
  acVp3_32in_1ft = 23,
  acVp1_8in_1ft = 24,
  acVp3_16in_1ft = 25,
  acVp1_4in_1ft = 26,
  acVp3_8in_1ft = 27,
  acVp1_2in_1ft = 28,
  acVp3_4in_1ft = 29,
  acVp1in_1ft = 30,
  acVp1and1_2in_1ft = 31,
  acVp3in_1ft = 32,
  acVp6in_1ft = 33,
  acVp1ft_1ft = 34
};


==================================================================================

enum AcISOPenWidth;
{
  acPenWidth013 = 13,
  acPenWidth018 = 18,
  acPenWidth025 = 25,
  acPenWidth035 = 35,
  acPenWidth050 = 50,
  acPenWidth070 = 70,
  acPenWidth100 = 100,
  acPenWidth140 = 140,
  acPenWidth200 = 200,
  acPenWidthUnk = -1
};


==================================================================================

enum AcSaveAsType;
{
  acUnknown = -1,
  acR12_dxf = 1,
  acR13_dwg = 4,
  acR13_dxf = 5,
  acR14_dwg = 8,
  acR14_dxf = 9,
  ac2000_dwg = 12,
  ac2000_dxf = 13,
  ac2000_Template = 14,
  ac2004_dwg = 24,
  ac2004_dxf = 25,
  ac2004_Template = 26,
  ac2007_dwg = 36,
  ac2007_dxf = 37,
  ac2007_Template = 38,
  ac2010_dwg = 48,
  ac2010_dxf = 49,
  ac2010_Template = 50,
  acNative = 48,
  acR15_dwg = 12,
  acR15_dxf = 13,
  acR15_Template = 14,
  acR18_dwg = 24,
  acR18_dxf = 25,
  acR18_Template = 26
};


==================================================================================

enum AcPrinterSpoolAlert;
{
  acPrinterAlwaysAlert = 0,
  acPrinterAlertOnce = 1,
  acPrinterNeverAlertLogOnce = 2,
  acPrinterNeverAlert = 3
};


==================================================================================

enum AcPlotPolicyForNewDwgs;
{
  acPolicyNewDefault = 0,
  acPolicyNewLegacy = 1
};


==================================================================================

enum AcPlotPolicyForLegacyDwgs;
{
  acPolicyLegacyDefault = 0,
  acPolicyLegacyQuery = 1,
  acPolicyLegacyLegacy = 2
};


==================================================================================

enum AcOleQuality;
{
  acOQLineArt = 0,
  acOQText = 1,
  acOQGraphics = 2,
  acOQPhoto = 3,
  acOQHighPhoto = 4
};


==================================================================================

enum AcLoadPalette;
{
  acPaletteByDrawing = 0,
  acPaletteBySession = 1
};


==================================================================================

enum AcInsertUnits;
{
  acInsertUnitsUnitless = 0,
  acInsertUnitsInches = 1,
  acInsertUnitsFeet = 2,
  acInsertUnitsMiles = 3,
  acInsertUnitsMillimeters = 4,
  acInsertUnitsCentimeters = 5,
  acInsertUnitsMeters = 6,
  acInsertUnitsKilometers = 7,
  acInsertUnitsMicroinches = 8,
  acInsertUnitsMils = 9,
  acInsertUnitsYards = 10,
  acInsertUnitsAngstroms = 11,
  acInsertUnitsNanometers = 12,
  acInsertUnitsMicrons = 13,
  acInsertUnitsDecimeters = 14,
  acInsertUnitsDecameters = 15,
  acInsertUnitsHectometers = 16,
  acInsertUnitsGigameters = 17,
  acInsertUnitsAstronomicalUnits = 18,
  acInsertUnitsLightYears = 19,
  acInsertUnitsParsecs = 20
};


==================================================================================

enum AcAlignmentPointAcquisition;
{
  acAlignPntAcquisitionAutomatic = 0,
  acAlignPntAcquisitionShiftToAcquire = 1
};


==================================================================================

enum AcInsertUnitsAction;
{
  acInsertUnitsPrompt = 0,
  acInsertUnitsAutoAssign = 1
};


==================================================================================

enum AcPlotPolicy;
{
  acPolicyNamed = 0,
  acPolicyLegacy = 1
};


==================================================================================

enum AcDrawingAreaShortCutMenu;
{
  acNoDrawingAreaShortCutMenu = 0,
  acUseDefaultDrawingAreaShortCutMenu = 1
};


==================================================================================

enum AcDrawingAreaSCMDefault;
{
  acRepeatLastCommand = 0,
  acSCM = 1
};


==================================================================================

enum AcDrawingAreaSCMEdit;
{
  acEdRepeatLastCommand = 0,
  acEdSCM = 1
};


==================================================================================

enum AcDrawingAreaSCMCommand;
{
  acEnter = 0,
  acEnableSCMOptions = 1,
  acEnableSCM = 2
};


==================================================================================

enum AcLayerStateMask;
{
  acLsNone = 0,
  acLsOn = 1,
  acLsFrozen = 2,
  acLsLocked = 4,
  acLsPlot = 8,
  acLsNewViewport = 16,
  acLsColor = 32,
  acLsLineType = 64,
  acLsLineWeight = 128,
  acLsPlotStyle = 256,
  acLsAll = 65535
};


==================================================================================

enum AcShadePlot;
{
  acShadePlotAsDisplayed = 0,
  acShadePlotWireframe = 1,
  acShadePlotHidden = 2,
  acShadePlotRendered = 3
};


==================================================================================

enum AcHatchObjectType;
{
  acHatchObject = 0,
  acGradientObject = 1
};


==================================================================================

enum AcGradientPatternType;
{
  acPreDefinedGradient = 0,
  acUserDefinedGradient = 1
};


==================================================================================

enum AcTableDirection;
{
  acTableTopToBottom = 0,
  acTableBottomToTop = 1
};


==================================================================================

enum AcCellAlignment;
{
  acTopLeft = 1,
  acTopCenter = 2,
  acTopRight = 3,
  acMiddleLeft = 4,
  acMiddleCenter = 5,
  acMiddleRight = 6,
  acBottomLeft = 7,
  acBottomCenter = 8,
  acBottomRight = 9
};


==================================================================================

enum AcRowType;
{
  acUnknownRow = 0,
  acDataRow = 1,
  acTitleRow = 2,
  acHeaderRow = 4
};


==================================================================================

enum AcValueDataType;
{
  acUnknownDataType = 0,
  acLong = 1,
  acDouble = 2,
  acString = 4,
  acDate = 8,
  acPoint2d = 16,
  acPoint3d = 32,
  acObjectId = 64,
  acBuffer = 128,
  acResbuf = 256,
  acGeneral = 512
};


==================================================================================

enum AcValueUnitType;
{
  acUnitless = 0,
  acUnitDistance = 1,
  acUnitAngle = 2,
  acUnitArea = 4,
  acUnitVolume = 8
};


==================================================================================

enum AcParseOption;
{
  acParseOptionNone = 0,
  acSetDefaultFormat = 1,
  acPreserveMtextFormat = 2
};


==================================================================================

enum AcFormatOption;
{
  kFormatOptionNone = 0,
  acForEditing = 1,
  acForExpression = 2,
  acUseMaximumPrecision = 4,
  acIgnoreMtextFormat = 8
};


==================================================================================

enum AcGridLineType;
{
  acInvalidGridLine = 0,
  acHorzTop = 1,
  acHorzInside = 2,
  acHorzBottom = 4,
  acVertLeft = 8,
  acVertInside = 16,
  acVertRight = 32
};


==================================================================================

enum AcCellType;
{
  acUnknownCell = 0,
  acTextCell = 1,
  acBlockCell = 2
};


==================================================================================

enum AcCellEdgeMask;
{
  acTopMask = 1,
  acRightMask = 2,
  acBottomMask = 4,
  acLeftMask = 8
};


==================================================================================

enum AcRotationAngle;
{
  acDegreesUnknown = -1,
  acDegrees000 = 0,
  acDegrees090 = 1,
  acDegrees180 = 2,
  acDegrees270 = 3
};


==================================================================================

enum AcMergeCellStyleOption;
{
  acMergeCellStyleNone = 0,
  acMergeCellStyleCopyDuplicates = 1,
  acMergeCellStyleOverwriteDuplicates = 2,
  acMergeCellStyleConvertDuplicatesToOverrides = 4,
  acMergeCellStyleIgnoreNewStyles = 8
};


==================================================================================

enum AcSelectType;
{
  acTableSelectWindow = 1,
  acTableSelectCrossing = 2
};


==================================================================================

enum AcOleType;
{
  acOTLink = 1,
  acOTEmbedded = 2,
  acOTStatic = 3
};


==================================================================================

enum AcOlePlotQuality;
{
  acOPQMonochrome = 0,
  acOPQLowGraphics = 1,
  acOPQHighGraphics = 2
};


==================================================================================

enum AcTableStyleOverrides;
{
  acTitleSuppressed = 1,
  acHeaderSuppressed = 2,
  acFlowDirection = 3,
  acHorzCellMargin = 4,
  acVertCellMargin = 5,
  acTitleRowColor = 6,
  acHeaderRowColor = 7,
  acDataRowColor = 8,
  acTitleRowFillNone = 9,
  acHeaderRowFillNone = 10,
  acDataRowFillNone = 11,
  acTitleRowFillColor = 12,
  acHeaderRowFillColor = 13,
  acDataRowFillColor = 14,
  acTitleRowAlignment = 15,
  acHeaderRowAlignment = 16,
  acDataRowAlignment = 17,
  acTitleRowTextStyle = 18,
  acHeaderRowTextStyle = 19,
  acDataRowTextStyle = 20,
  acTitleRowTextHeight = 21,
  acHeaderRowTextHeight = 22,
  acDataRowTextHeight = 23,
  acTitleRowDataType = 24,
  acHeaderRowDataType = 25,
  acDataRowDataType = 26,
  acTitleHorzTopColor = 40,
  acTitleHorzInsideColor = 41,
  acTitleHorzBottomColor = 42,
  acTitleVertLeftColor = 43,
  acTitleVertInsideColor = 44,
  acTitleVertRightColor = 45,
  acHeaderHorzTopColor = 46,
  acHeaderHorzInsideColor = 47,
  acHeaderHorzBottomColor = 48,
  acHeaderVertLeftColor = 49,
  acHeaderVertInsideColor = 50,
  acHeaderVertRightColor = 51,
  acDataHorzTopColor = 52,
  acDataHorzInsideColor = 53,
  acDataHorzBottomColor = 54,
  acDataVertLeftColor = 55,
  acDataVertInsideColor = 56,
  acDataVertRightColor = 57,
  acTitleHorzTopLineWeight = 70,
  acTitleHorzInsideLineWeight = 71,
  acTitleHorzBottomLineWeight = 72,
  acTitleVertLeftLineWeight = 73,
  acTitleVertInsideLineWeight = 74,
  acTitleVertRightLineWeight = 75,
  acHeaderHorzTopLineWeight = 76,
  acHeaderHorzInsideLineWeight = 77,
  acHeaderHorzBottomLineWeight = 78,
  acHeaderVertLeftLineWeight = 79,
  acHeaderVertInsideLineWeight = 80,
  acHeaderVertRightLineWeight = 81,
  acDataHorzTopLineWeight = 82,
  acDataHorzInsideLineWeight = 83,
  acDataHorzBottomLineWeight = 84,
  acDataVertLeftLineWeight = 85,
  acDataVertInsideLineWeight = 86,
  acDataVertRightLineWeight = 87,
  acTitleHorzTopVisibility = 100,
  acTitleHorzInsideVisibility = 101,
  acTitleHorzBottomVisibility = 102,
  acTitleVertLeftVisibility = 103,
  acTitleVertInsideVisibility = 104,
  acTitleVertRightVisibility = 105,
  acHeaderHorzTopVisibility = 106,
  acHeaderHorzInsideVisibility = 107,
  acHeaderHorzBottomVisibility = 108,
  acHeaderVertLeftVisibility = 109,
  acHeaderVertInsideVisibility = 110,
  acHeaderVertRightVisibility = 111,
  acDataHorzTopVisibility = 112,
  acDataHorzInsideVisibility = 113,
  acDataHorzBottomVisibility = 114,
  acDataVertLeftVisibility = 115,
  acDataVertInsideVisibility = 116,
  acDataVertRightVisibility = 117,
  acCellAlign = 130,
  acCellBackgroundFillNone = 131,
  acCellBackgroundColor = 132,
  acCellContentColor = 133,
  acCellTextStyle = 134,
  acCellTextHeight = 135,
  acCellTopGridColor = 136,
  acCellRightGridColor = 137,
  acCellBottomGridColor = 138,
  acCellLeftGridColor = 139,
  acCellTopGridLineWeight = 140,
  acCellRightGridLineWeight = 141,
  acCellBottomGridLineWeight = 142,
  acCellLeftGridLineWeight = 143,
  acCellTopVisibility = 144,
  acCellRightVisibility = 145,
  acCellBottomVisibility = 146,
  acCellLeftVisibility = 147,
  acCellDataType = 148
};


==================================================================================

enum AcMLineJustification;
{
  acTop = 0,
  acZero = 1,
  acBottom = 2
};


==================================================================================

enum AcBlockScaling;
{
  acAny = 0,
  acUniform = 1
};


==================================================================================

enum AcDynamicBlockReferencePropertyUnitsType;
{
  acNoUnits = 0,
  acAngular = 1,
  acDistance = 2,
  acArea = 3
};


==================================================================================

enum AcSectionState;
{
  acSectionStatePlane = 1,
  acSectionStateBoundary = 2,
  acSectionStateVolume = 4
};


==================================================================================

enum AcSectionSubItem;
{
  acSectionSubItemkNone = 0,
  acSectionSubItemSectionLine = 1,
  acSectionSubItemSectionLineTop = 2,
  acSectionSubItemSectionLineBottom = 4,
  acSectionSubItemBackLine = 8,
  acSectionSubItemBackLineTop = 16,
  acSectionSubItemBackLineBottom = 32,
  acSectionSubItemVerticalLineTop = 64,
  acSectionSubItemVerticalLineBottom = 128
};


==================================================================================

enum AcSectionType;
{
  acSectionTypeLiveSection = 1,
  acSectionType2dSection = 2,
  acSectionType3dSection = 4
};


==================================================================================

enum AcSectionGeneration;
{
  acSectionGenerationSourceAllObjects = 1,
  acSectionGenerationSourceSelectedObjects = 2,
  acSectionGenerationDestinationNewBlock = 16,
  acSectionGenerationDestinationReplaceBlock = 32,
  acSectionGenerationDestinationFile = 64
};


==================================================================================

enum AcHelixConstrainType;
{
  acTurnHeight = 0,
  acTurns = 1,
  acHeight = 2
};


==================================================================================

enum AcShadowDisplayType;
{
  acCastsAndReceivesShadows = 0,
  acCastsShadows = 1,
  acReceivesShadows = 2,
  acIgnoreShadows = 3
};


==================================================================================

enum AcLoftedSurfaceNormalType;
{
  acRuled = 0,
  acSmooth = 1,
  acFirstNormal = 2,
  acLastNormal = 3,
  acEndsNormal = 4,
  acAllNormal = 5,
  acUseDraftAngles = 6
};


==================================================================================

enum AcHelixTwistType;
{
  acCCW = 0,
  acCW = 1
};


==================================================================================

enum AcUnderlayLayerOverrideType;
{
  acNoOverrides = 0,
  acApplied = 1
};


==================================================================================

enum AcTableFlowDirection;
{
  acTableFlowRight = 1,
  acTableFlowDownOrUp = 2,
  acTableFlowLeft = 4
};


==================================================================================

enum AcCellMargin;
{
  acCellMarginTop = 1,
  acCellMarginLeft = 2,
  acCellMarginBottom = 4,
  acCellMarginRight = 8,
  acCellMarginHorzSpacing = 16,
  acCellMarginVertSpacing = 32
};


==================================================================================

enum AcCellContentLayout;
{
  acCellContentLayoutFlow = 1,
  acCellContentLayoutStackedHorizontal = 2,
  acCellContentLayoutStackedVertical = 4
};


==================================================================================

enum AcCellProperty;
{
  acInvalidCellProperty = 0,
  acLock = 1,
  acDataType = 2,
  acDataFormat = 4,
  acRotation = 8,
  acScale = 16,
  acAlignmentProperty = 32,
  acContentColor = 64,
  acBackgroundColor = 128,
  acTextStyle = 256,
  acTextHeight = 512,
  acMarginLeft = 1024,
  acMarginTop = 2048,
  acMarginRight = 4096,
  acMarginBottom = 8192,
  acEnableBackgroundColor = 16384,
  acAutoScale = 32768,
  acMergeAll = 0,
  acFlowDirBtoT = 0,
  acContentLayout = 0,
  acDataTypeAndFormat = 6,
  acContentProperties = 33662,
  acBitProperties = 49152,
  acAllCellProperties = 65535
};


==================================================================================

enum AcGridLineStyle;
{
  acGridLineStyleSingle = 1,
  acGridLineStyleDouble = 2
};


==================================================================================

enum AcDataLinkUpdateDirection;
{
  acUpdateDataFromSource = 1,
  acUpdateSourceFromData = 2
};


==================================================================================

enum AcDataLinkUpdateOption;
{
  acUpdateOptionNone = 0,
  acUpdateOptionOverwriteContentModifiedAfterUpdate = 0,
  acUpdateOptionOverwriteFormatModifiedAfterUpdate = 0,
  acUpdateOptionUpdateFullSourceRange = 0,
  acUpdateOptionIncludeXrefs = 0
};


==================================================================================

enum AcCellContentType;
{
  acCellContentTypeUnknown = 0,
  acCellContentTypeValue = 1,
  acCellContentTypeField = 2,
  acCellContentTypeBlock = 4
};


==================================================================================

enum AcCellState;
{
  acCellStateNone = 0,
  acCellStateContentLocked = 1,
  acCellStateContentReadOnly = 2,
  acCellStateFormatLocked = 4,
  acCellStateFormatReadOnly = 8,
  acCellStateLinked = 16,
  acCellStateContentModified = 32,
  acCellStateFormatModified = 64
};


==================================================================================

enum AcCellOption;
{
  kCellOptionNone = 0,
  kInheritCellFormat = 1
};


==================================================================================

enum AcTextAttachmentType;
{
  acAttachmentTopOfTop = 0,
  acAttachmentMiddleOfTop = 1,
  acAttachmentBottomOfTop = 2,
  acAttachmentBottomOfTopLine = 3,
  acAttachmentMiddle = 4,
  acAttachmentMiddleOfBottom = 5,
  acAttachmentBottomOfBottom = 6,
  acAttachmentBottomLine = 7,
  acAttachmentAllLine = 8
};


==================================================================================

enum AcMLeaderType;
{
  acStraightLeader = 1,
  acSplineLeader = 2,
  acInVisibleLeader = 0
};


==================================================================================

enum AcMLeaderContentType;
{
  acNoneContent = 0,
  acBlockContent = 1,
  acMTextContent = 2
};


==================================================================================

enum AcTextAlignmentType;
{
  acLeftAlignment = 0,
  acCenterAlignment = 1,
  acRightAlignment = 2
};


==================================================================================

enum AcTextAngleType;
{
  acInsertAngle = 0,
  acHorizontalAngle = 1,
  acAlwaysRightReadingAngle = 2
};


==================================================================================

enum AcBlockConnectionType;
{
  acConnectExtents = 0,
  acConnectBase = 1
};


==================================================================================

enum AcPredefBlockType;
{
  acBlockImperial = 0,
  acBlockSlot = 1,
  acBlockCircle = 2,
  acBlockBox = 3,
  acBlockHexagon = 4,
  acBlockTriangle = 5,
  acBlockUserDefined = 6
};


==================================================================================

enum AcDrawLeaderOrderType;
{
  acDrawLeaderHeadFirst = 0,
  acDrawLeaderTailFirst = 1
};


==================================================================================

enum AcDrawMLeaderOrderType;
{
  acDrawContentFirst = 0,
  acDrawLeaderFirst = 1
};


==================================================================================

enum AcSegmentAngleType;
{
  acDegreesAny = 0,
  acDegrees15 = 1,
  acDegrees30 = 2,
  acDegrees45 = 3,
  acDegrees60 = 4,
  acDegrees90 = 6,
  acDegreesHorz = 12
};


==================================================================================

enum AcTextAttachmentDirection;
{
  acAttachmentHorizontal = 0,
  acAttachmentVertical = 1
};


==================================================================================

enum AcVerticalTextAttachmentType;
{
  acAttachmentCenter = 0,
  acAttachmentLinedCenter = 1
};


==================================================================================

enum AcMeshCreaseType;
{
  acNoneCrease = 0,
  acAlwaysCrease = 1,
  acCreaseByLevel = 2
};


==================================================================================

IDispatch IAcadObject;
IID = {425F38BA-456A-4937-8825-BEA06D12DAA2}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Handle(
            [out,retval] BSTR* Handle
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectName(
            [out,retval] BSTR* ObjectName
         );

    3. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetXData(
            [in] BSTR AppName, 
            [out] VARIANT* XDataType, 
            [out] VARIANT* XDataValue
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetXData(
            [in] VARIANT XDataType, 
            [in] VARIANT XDataValue
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Delete(
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectID(
            [out,retval] <alias> LONG_PTR* ObjectID
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] idispatch* ApplicationObject
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Database(
            [out,retval] <IDispatch> IAcadDatabase** pDatabase
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HasExtensionDictionary(
            [out,retval] bool* bHasDictionary
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetExtensionDictionary(
            [out,retval] <IDispatch> IAcadDictionary** pExtDictionary
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OwnerID(
            [out,retval] <alias> LONG_PTR* OwnerID
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Document(
            [out,retval] idispatch* pDocument
         );

    13. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Erase(
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectID32(
            [out,retval] int* ObjectID
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OwnerID32(
            [out,retval] int* OwnerID
         );


==================================================================================

alias LONG_PTR;
 int64; 


==================================================================================

IDispatch IAcadDatabase;
IID = {1086243D-9230-49F6-B7DE-FF082A683F50}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ModelSpace(
            [out,retval] <IDispatch> IAcadModelSpace** pMSpace
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PaperSpace(
            [out,retval] <IDispatch> IAcadPaperSpace** pPSpace
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Blocks(
            [out,retval] <IDispatch> IAcadBlocks** pBlocks
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CopyObjects(
            [in] VARIANT Objects, 
            [in,optional] VARIANT Owner, 
            [in,out,optional] VARIANT* IdPairs, 
            [out,retval] VARIANT* pNewObjects
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Groups(
            [out,retval] <IDispatch> IAcadGroups** pGroups
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimStyles(
            [out,retval] <IDispatch> IAcadDimStyles** pDimStyles
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Layers(
            [out,retval] <IDispatch> IAcadLayers** pLayers
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Linetypes(
            [out,retval] <IDispatch> IAcadLineTypes** pLinetypes
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Dictionaries(
            [out,retval] <IDispatch> IAcadDictionaries** pDictionaries
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RegisteredApplications(
            [out,retval] <IDispatch> IAcadRegisteredApplications** pRegApps
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextStyles(
            [out,retval] <IDispatch> IAcadTextStyles** pTextStyles
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UserCoordinateSystems(
            [out,retval] <IDispatch> IAcadUCSs** pUCSs
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Views(
            [out,retval] <IDispatch> IAcadViews** pViews
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Viewports(
            [out,retval] <IDispatch> IAcadViewports** pViewports
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ElevationModelSpace(
            [out,retval] double* Elevation
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ElevationModelSpace(
            [in] double Elevation
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ElevationPaperSpace(
            [out,retval] double* Elevation
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ElevationPaperSpace(
            [in] double Elevation
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Limits(
            [out,retval] VARIANT* Limits
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Limits(
            [in] VARIANT Limits
         );

    21. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT HandleToObject(
            [in] BSTR Handle, 
            [out,retval] idispatch* pObj
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ObjectIdToObject(
            [in] <alias> LONG_PTR ObjectID, 
            [out,retval] idispatch* pObj
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Layouts(
            [out,retval] <IDispatch> IAcadLayouts** pLayouts
         );

    24. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotConfigurations(
            [out,retval] <IDispatch> IAcadPlotConfigurations** pPlotConfigs
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Preferences(
            [out,retval] <IDispatch> IAcadDatabasePreferences** pPref
         );

    26. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FileDependencies(
            [out,retval] <IDispatch> IAcadFileDependencies** pFDM
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SummaryInfo(
            [out,retval] <IDispatch> IAcadSummaryInfo** pSummaryInfo
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SectionManager(
            [out,retval] <IDispatch> IAcadSectionManager** pSecMgr
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Materials(
            [out,retval] <IDispatch> IAcadMaterials** pMaterials
         );

    30. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ObjectIdToObject32(
            [in] int ObjectID, 
            [out,retval] idispatch* pObj
         );


==================================================================================

IDispatch IAcadModelSpace;
IID = {134A4D6B-1DC2-4539-A7F0-E5EBC1004423}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}


==================================================================================

IDispatch IAcadBlock;
IID = {D22E36B7-AD82-4F43-A60D-5824FD842E9F}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadEntity** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pVal
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Origin(
            [out,retval] VARIANT* Origin
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Origin(
            [in] VARIANT Origin
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddCustomObject(
            [in] BSTR ClassName, 
            [out,retval] idispatch* pObject
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add3DFace(
            [in] VARIANT Point1, 
            [in] VARIANT Point2, 
            [in] VARIANT point3, 
            [in] VARIANT Point4, 
            [out,retval] <IDispatch> IAcad3DFace** pFace3d
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add3DMesh(
            [in] int M, 
            [in] int N, 
            [in] VARIANT PointsMatrix, 
            [out,retval] <IDispatch> IAcadPolygonMesh** pMesh3d
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add3DPoly(
            [in] VARIANT PointsArray, 
            [out,retval] <IDispatch> IAcad3DPolyline** pPoly3d
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddArc(
            [in] VARIANT Center, 
            [in] double Radius, 
            [in] double StartAngle, 
            [in] double EndAngle, 
            [out,retval] <IDispatch> IAcadArc** pArc
         );

    13. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddAttribute(
            [in] double Height, 
            [in] <enum> AcAttributeMode Mode, 
            [in] BSTR Prompt, 
            [in] VARIANT InsertionPoint, 
            [in] BSTR Tag, 
            [in] BSTR Value, 
            [out,retval] <IDispatch> IAcadAttribute** pAttr
         );

    14. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddBox(
            [in] VARIANT Origin, 
            [in] double Length, 
            [in] double Width, 
            [in] double Height, 
            [out,retval] <IDispatch> IAcad3DSolid** pBox
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddCircle(
            [in] VARIANT Center, 
            [in] double Radius, 
            [out,retval] <IDispatch> IAcadCircle** pCircle
         );

    16. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddCone(
            [in] VARIANT Center, 
            [in] double BaseRadius, 
            [in] double Height, 
            [out,retval] <IDispatch> IAcad3DSolid** pCone
         );

    17. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddCylinder(
            [in] VARIANT Center, 
            [in] double Radius, 
            [in] double Height, 
            [out,retval] <IDispatch> IAcad3DSolid** pCyl
         );

    18. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddDimAligned(
            [in] VARIANT ExtLine1Point, 
            [in] VARIANT ExtLine2Point, 
            [in] VARIANT TextPosition, 
            [out,retval] <IDispatch> IAcadDimAligned** pDim
         );

    19. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddDimAngular(
            [in] VARIANT AngleVertex, 
            [in] VARIANT FirstEndPoint, 
            [in] VARIANT SecondEndPoint, 
            [in] VARIANT TextPoint, 
            [out,retval] <IDispatch> IAcadDimAngular** pDim
         );

    20. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddDimDiametric(
            [in] VARIANT ChordPoint, 
            [in] VARIANT FarChordPoint, 
            [in] double LeaderLength, 
            [out,retval] <IDispatch> IAcadDimDiametric** pDim
         );

    21. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddDimRotated(
            [in] VARIANT ExtLine1Point, 
            [in] VARIANT ExtLine2Point, 
            [in] VARIANT DimLineLocation, 
            [in] double RotationAngle, 
            [out,retval] <IDispatch> IAcadDimRotated** pDim
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddDimOrdinate(
            [in] VARIANT DefinitionPoint, 
            [in] VARIANT LeaderEndPoint, 
            [in] int UseXAxis, 
            [out,retval] <IDispatch> IAcadDimOrdinate** pDim
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddDimRadial(
            [in] VARIANT Center, 
            [in] VARIANT ChordPoint, 
            [in] double LeaderLength, 
            [out,retval] <IDispatch> IAcadDimRadial** pDim
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddEllipse(
            [in] VARIANT Center, 
            [in] VARIANT MajorAxis, 
            [in] double RadiusRatio, 
            [out,retval] <IDispatch> IAcadEllipse** pEllipse
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddEllipticalCone(
            [in] VARIANT Center, 
            [in] double MajorRadius, 
            [in] double MinorRadius, 
            [in] double Height, 
            [out,retval] <IDispatch> IAcad3DSolid** pEllipCone
         );

    26. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddEllipticalCylinder(
            [in] VARIANT Center, 
            [in] double MajorRadius, 
            [in] double MinorRadius, 
            [in] double Height, 
            [out,retval] <IDispatch> IAcad3DSolid** pEllipCyl
         );

    27. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddExtrudedSolid(
            [in] <IDispatch> IAcadRegion* Profile, 
            [in] double Height, 
            [in] double TaperAngle, 
            [out,retval] <IDispatch> IAcad3DSolid** pExtrSolid
         );

    28. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddExtrudedSolidAlongPath(
            [in] <IDispatch> IAcadRegion* Profile, 
            [in] idispatch Path, 
            [out,retval] <IDispatch> IAcad3DSolid** pExtrSolid
         );

    29. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddLeader(
            [in] VARIANT PointsArray, 
            [in] <IDispatch> IAcadEntity* Annotation, 
            [in] <enum> AcLeaderType Type, 
            [out,retval] <IDispatch> IAcadLeader** pLeader
         );

    30. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddMText(
            [in] VARIANT InsertionPoint, 
            [in] double Width, 
            [in] BSTR Text, 
            [out,retval] <IDispatch> IAcadMText** pMtext
         );

    31. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddPoint(
            [in] VARIANT Point, 
            [out,retval] <IDispatch> IAcadPoint** pPoint
         );

    32. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddLightWeightPolyline(
            [in] VARIANT VerticesList, 
            [out,retval] <IDispatch> IAcadLWPolyline** pLWPolyline
         );

    33. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddPolyline(
            [in] VARIANT VerticesList, 
            [out,retval] <IDispatch> IAcadPolyline** pPolyline
         );

    34. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddRay(
            [in] VARIANT Point1, 
            [in] VARIANT Point2, 
            [out,retval] <IDispatch> IAcadRay** pRay
         );

    35. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddRegion(
            [in] VARIANT ObjectList, 
            [out,retval] VARIANT* pRegions
         );

    36. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddRevolvedSolid(
            [in] <IDispatch> IAcadRegion* Profile, 
            [in] VARIANT AxisPoint, 
            [in] VARIANT AxisDir, 
            [in] double Angle, 
            [out,retval] <IDispatch> IAcad3DSolid** pRevolSolid
         );

    37. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddShape(
            [in] BSTR Name, 
            [in] VARIANT InsertionPoint, 
            [in] double ScaleFactor, 
            [in] double RotationAngle, 
            [out,retval] <IDispatch> IAcadShape** pShape
         );

    38. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddSolid(
            [in] VARIANT Point1, 
            [in] VARIANT Point2, 
            [in] VARIANT point3, 
            [in] VARIANT Point4, 
            [out,retval] <IDispatch> IAcadSolid** pSolid
         );

    39. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddSphere(
            [in] VARIANT Center, 
            [in] double Radius, 
            [out,retval] <IDispatch> IAcad3DSolid** pSphere
         );

    40. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddSpline(
            [in] VARIANT PointsArray, 
            [in] VARIANT StartTangent, 
            [in] VARIANT EndTangent, 
            [out,retval] <IDispatch> IAcadSpline** pSpline
         );

    41. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddText(
            [in] BSTR TextString, 
            [in] VARIANT InsertionPoint, 
            [in] double Height, 
            [out,retval] <IDispatch> IAcadText** pText
         );

    42. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddTolerance(
            [in] BSTR Text, 
            [in] VARIANT InsertionPoint, 
            [in] VARIANT Direction, 
            [out,retval] <IDispatch> IAcadTolerance** pTolerance
         );

    43. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddTorus(
            [in] VARIANT Center, 
            [in] double TorusRadius, 
            [in] double TubeRadius, 
            [out,retval] <IDispatch> IAcad3DSolid** pTorus
         );

    44. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddTrace(
            [in] VARIANT PointsArray, 
            [out,retval] <IDispatch> IAcadTrace** pTrace
         );

    45. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddWedge(
            [in] VARIANT Center, 
            [in] double Length, 
            [in] double Width, 
            [in] double Height, 
            [out,retval] <IDispatch> IAcad3DSolid** pWedge
         );

    46. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddXline(
            [in] VARIANT Point1, 
            [in] VARIANT Point2, 
            [out,retval] <IDispatch> IAcadXline** pXline
         );

    47. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT InsertBlock(
            [in] VARIANT InsertionPoint, 
            [in] BSTR Name, 
            [in] double Xscale, 
            [in] double Yscale, 
            [in] double Zscale, 
            [in] double Rotation, 
            [in,optional] VARIANT Password, 
            [out,retval] <IDispatch> IAcadBlockReference** pBlkRef
         );

    48. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddHatch(
            [in] int PatternType, 
            [in] BSTR PatternName, 
            [in] bool Associativity, 
            [in,optional] VARIANT HatchObjectType, 
            [out,retval] <IDispatch> IAcadHatch** pHatch
         );

    49. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddRaster(
            [in] BSTR imageFileName, 
            [in] VARIANT InsertionPoint, 
            [in] double ScaleFactor, 
            [in] double RotationAngle, 
            [out,retval] <IDispatch> IAcadRasterImage** pRaster
         );

    50. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddLine(
            [in] VARIANT StartPoint, 
            [in] VARIANT EndPoint, 
            [out,retval] <IDispatch> IAcadLine** pLine
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsLayout(
            [out,retval] bool* bIsLayout
         );

    52. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Layout(
            [out,retval] <IDispatch> IAcadLayout** pLayout
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsXRef(
            [out,retval] bool* pIsXRref
         );

    54. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddMInsertBlock(
            [in] VARIANT InsertionPoint, 
            [in] BSTR Name, 
            [in] double Xscale, 
            [in] double Yscale, 
            [in] double Zscale, 
            [in] double Rotation, 
            [in] int NumRows, 
            [in] int NumColumns, 
            [in] int RowSpacing, 
            [in] int ColumnSpacing, 
            [in,optional] VARIANT Password, 
            [out,retval] <IDispatch> IAcadMInsertBlock** pMInsertBlk
         );

    55. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddPolyfaceMesh(
            [in] VARIANT VertexList, 
            [in] VARIANT FaceList, 
            [out,retval] <IDispatch> IAcadPolyfaceMesh** pPFMesh
         );

    56. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddMLine(
            [in] VARIANT VertexList, 
            [out,retval] <IDispatch> IAcadMLine** pMLine
         );

    57. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddDim3PointAngular(
            [in] VARIANT AngleVertex, 
            [in] VARIANT FirstEndPoint, 
            [in] VARIANT SecondEndPoint, 
            [in] VARIANT TextPoint, 
            [out,retval] <IDispatch> IAcadDim3PointAngular** pDim
         );

    58. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT XRefDatabase(
            [out,retval] <IDispatch> IAcadDatabase** pDatabase
         );

    59. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AttachExternalReference(
            [in] BSTR PathName, 
            [in] BSTR Name, 
            [in] VARIANT InsertionPoint, 
            [in] double Xscale, 
            [in] double Yscale, 
            [in] double Zscale, 
            [in] double Rotation, 
            [in] bool bOverlay, 
            [in,optional] VARIANT Password, 
            [out,retval] <IDispatch> IAcadExternalReference** pXRef
         );

    60. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Unload(
         );

    61. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Reload(
         );

    62. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Bind(
            [in] bool bPrefixName
         );

    63. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Detach(
         );

    64. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddTable(
            [in] VARIANT InsertionPoint, 
            [in] int NumRows, 
            [in] int NumColumns, 
            [in] double RowHeight, 
            [in] double ColWidth, 
            [out,retval] <IDispatch> IAcadTable** pTable
         );

    65. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Path(
            [out,retval] BSTR* bstrName
         );

    66. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Path(
            [in] BSTR bstrName
         );

    67. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Comments(
            [out,retval] BSTR* bstrName
         );

    68. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Comments(
            [in] BSTR bstrName
         );

    69. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Units(
            [out,retval] int* pIU
         );

    70. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Units(
            [in] <enum> AcInsertUnits pIU
         );

    71. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Explodable(
            [out,retval] bool* bExplodable
         );

    72. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Explodable(
            [in] bool bExplodable
         );

    73. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BlockScaling(
            [out,retval] int* pBS
         );

    74. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BlockScaling(
            [in] <enum> AcBlockScaling pBS
         );

    75. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsDynamicBlock(
            [out,retval] bool* pDynamicBlock
         );

    76. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddDimArc(
            [in] VARIANT ArcCenter, 
            [in] VARIANT FirstEndPoint, 
            [in] VARIANT SecondEndPoint, 
            [in] VARIANT ArcPoint, 
            [out,retval] <IDispatch> IAcadDimArcLength** pDim
         );

    77. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddDimRadialLarge(
            [in] VARIANT Center, 
            [in] VARIANT ChordPoint, 
            [in] VARIANT OverrideCenter, 
            [in] VARIANT JogPoint, 
            [in] double JogAngle, 
            [out,retval] <IDispatch> IAcadDimRadialLarge** pDim
         );

    78. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddSection(
            [in] VARIANT FromPoint, 
            [in] VARIANT ToPoint, 
            [in] VARIANT planeVector, 
            [out,retval] <IDispatch> IAcadSection** ppSecPlane
         );

    79. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddMLeader(
            [in] VARIANT PointsArray, 
            [out] int* leaderLineIndex, 
            [out,retval] <IDispatch> IAcadMLeader** pMLeader
         );


==================================================================================

IDispatch IAcadEntity;
IID = {3F403358-8F13-495C-8BFF-12328A1F3823}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TrueColor(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TrueColor(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Layer(
            [out,retval] BSTR* Layer
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Layer(
            [in] BSTR Layer
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Linetype(
            [out,retval] BSTR* Linetype
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Linetype(
            [in] BSTR Linetype
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinetypeScale(
            [out,retval] <alias> ACAD_NOUNITS* ltScale
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinetypeScale(
            [in] <alias> ACAD_NOUNITS ltScale
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Visible(
            [out,retval] bool* bVisible
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Visible(
            [in] bool bVisible
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ArrayPolar(
            [in] int NumberOfObjects, 
            [in] double AngleToFill, 
            [in] VARIANT CenterPoint, 
            [out,retval] VARIANT* pArrayObjs
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ArrayRectangular(
            [in] int NumberOfRows, 
            [in] int NumberOfColumns, 
            [in] int NumberOfLevels, 
            [in] double DistBetweenRows, 
            [in] double DistBetweenCols, 
            [in] double DistBetweenLevels, 
            [out,retval] VARIANT* pArrayObjs
         );

    13. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Highlight(
            [in] bool HighlightFlag
         );

    14. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Copy(
            [out,retval] idispatch* pCopyObj
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Move(
            [in] VARIANT FromPoint, 
            [in] VARIANT ToPoint
         );

    16. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Rotate(
            [in] VARIANT BasePoint, 
            [in] double RotationAngle
         );

    17. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Rotate3D(
            [in] VARIANT Point1, 
            [in] VARIANT Point2, 
            [in] double RotationAngle
         );

    18. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Mirror(
            [in] VARIANT Point1, 
            [in] VARIANT Point2, 
            [out,retval] idispatch* pMirrorObj
         );

    19. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Mirror3D(
            [in] VARIANT Point1, 
            [in] VARIANT Point2, 
            [in] VARIANT point3, 
            [out,retval] idispatch* pMirrorObj
         );

    20. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ScaleEntity(
            [in] VARIANT BasePoint, 
            [in] double ScaleFactor
         );

    21. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT TransformBy(
            [in] VARIANT TransformationMatrix
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Update(
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBoundingBox(
            [out] VARIANT* MinPoint, 
            [out] VARIANT* MaxPoint
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT IntersectWith(
            [in] idispatch IntersectObject, 
            [in] <enum> AcExtendOption option, 
            [out,retval] VARIANT* intPoints
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotStyleName(
            [out,retval] BSTR* plotStyle
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotStyleName(
            [in] BSTR plotStyle
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Lineweight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Lineweight(
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Hyperlinks(
            [out,retval] <IDispatch> IAcadHyperlinks** Hyperlinks
         );

    30. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Material(
            [out,retval] BSTR* Material
         );

    31. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Material(
            [in] BSTR Material
         );

    32. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityName(
            [out,retval] BSTR* EntityName
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityType(
            [out,retval] int* entType
         );

    34. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT color(
            [out,retval] <alias> ACAD_COLOR* color
         );

    35. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT color(
            [in] <alias> ACAD_COLOR color
         );


==================================================================================

IDispatch IAcadAcCmColor;
IID = {027DD570-25AD-41D9-8758-1DD5FBB36A13}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityColor(
            [in] int 
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityColor(
            [out,retval] int* eColor
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ColorName(
            [out,retval] BSTR* Name
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BookName(
            [out,retval] BSTR* Name
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetNames(
            [in] BSTR ColorName, 
            [in] BSTR BookName
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Delete(
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Red(
            [out,retval] int* Red
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Blue(
            [out,retval] int* Blue
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Green(
            [out,retval] int* Green
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetRGB(
            [in] int Red, 
            [in] int Green, 
            [in] int Blue
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ColorMethod(
            [in] <enum> AcColorMethod Blue
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ColorMethod(
            [out,retval] int* Flags
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ColorIndex(
            [out,retval] int* color
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ColorIndex(
            [in] <enum> AcColor color
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetColorBookColor(
            [in] BSTR BookName, 
            [in] BSTR ColorName
         );


==================================================================================

enum AcColorMethod;
{
  acColorMethodByLayer = 192,
  acColorMethodByBlock = 193,
  acColorMethodByRGB = 194,
  acColorMethodByACI = 195,
  acColorMethodForeground = 197
};


==================================================================================

IDispatch IAcadHyperlinks;
IID = {AD0379AD-1D0F-43A8-8BF7-CA8E73ED3943}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] int Index, 
            [out,retval] <IDispatch> IAcadHyperlink** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] idispatch* ApplicationObject
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [in,optional] VARIANT Description, 
            [in,optional] VARIANT NamedLocation, 
            [out,retval] <IDispatch> IAcadHyperlink** pHyperlink
         );


==================================================================================

IDispatch IAcadHyperlink;
IID = {84C08E60-F267-4C3B-867D-D35A3DED92CE}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT URL(
            [in] BSTR 
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT URL(
            [out,retval] BSTR* URLPath
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT URLDescription(
            [in] BSTR URLPath
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT URLDescription(
            [out,retval] BSTR* Description
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] idispatch* ApplicationObject
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Delete(
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT URLNamedLocation(
            [in] BSTR ApplicationObject
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT URLNamedLocation(
            [out,retval] BSTR* Location
         );


==================================================================================

IDispatch IAcad3DFace;
IID = {A85DDF97-91EA-4296-AD6B-E44DF6FE9B54}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* corners
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT corners
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VisibilityEdge1(
            [out,retval] bool* visibility
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VisibilityEdge1(
            [in] bool visibility
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VisibilityEdge2(
            [out,retval] bool* visibility
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VisibilityEdge2(
            [in] bool visibility
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VisibilityEdge3(
            [out,retval] bool* visibility
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VisibilityEdge3(
            [in] bool visibility
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VisibilityEdge4(
            [out,retval] bool* visibility
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VisibilityEdge4(
            [in] bool visibility
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetInvisibleEdge(
            [in] int Index, 
            [out,retval] bool* bVisible
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetInvisibleEdge(
            [in] int Index, 
            [in] bool State
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );


==================================================================================

IDispatch IAcadPolygonMesh;
IID = {FD58EA44-8301-48B1-8ECE-BD01D9037490}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* Coordinates
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT Coordinates
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MClose(
            [out,retval] bool* bClose
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MClose(
            [in] bool bClose
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NClose(
            [out,retval] bool* bClose
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT NClose(
            [in] bool bClose
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MDensity(
            [out,retval] int* density
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MDensity(
            [in] int density
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NDensity(
            [out,retval] int* density
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT NDensity(
            [in] int density
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MVertexCount(
            [out,retval] int* Count
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NVertexCount(
            [out,retval] int* Count
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Type(
            [out,retval] int* Type
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Type(
            [in] <enum> AcPolymeshType Type
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AppendVertex(
            [in] VARIANT vertex
         );

    16. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Explode(
            [out,retval] VARIANT* pArrayObjs
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );


==================================================================================

IDispatch IAcad3DPolyline;
IID = {DF9905A8-E36A-40DA-B8AB-4466B142F25F}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* Coordinates
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT Coordinates
         );

    3. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AppendVertex(
            [in] VARIANT vertex
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Explode(
            [out,retval] VARIANT* pArrayObjs
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Type(
            [out,retval] int* Type
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Type(
            [in] <enum> Ac3DPolylineType Type
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Closed(
            [out,retval] bool* fClose
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Closed(
            [in] bool fClose
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Length(
            [out,retval] double* Length
         );


==================================================================================

IDispatch IAcadArc;
IID = {799D2A2A-D907-4CC8-AAA0-262425883D71}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartPoint(
            [out,retval] VARIANT* StartPoint
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Center(
            [out,retval] VARIANT* CenterPoint
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Center(
            [in] VARIANT CenterPoint
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndPoint(
            [out,retval] VARIANT* EndPoint
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Radius(
            [out,retval] double* Radius
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Radius(
            [in] double Radius
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartAngle(
            [out,retval] <alias> ACAD_ANGLE* Angle
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StartAngle(
            [in] <alias> ACAD_ANGLE Angle
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndAngle(
            [out,retval] <alias> ACAD_ANGLE* Angle
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndAngle(
            [in] <alias> ACAD_ANGLE Angle
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TotalAngle(
            [out,retval] <alias> ACAD_ANGLE* TotalAngle
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArcLength(
            [out,retval] <alias> ACAD_DISTANCE* ArcLength
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Offset(
            [in] double Distance, 
            [out,retval] VARIANT* pOffsetCurves
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Area(
            [out,retval] double* Area
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );


==================================================================================

IDispatch IAcadAttribute;
IID = {0C3831A4-F455-49A9-8D03-62EB0B07474C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FieldLength(
            [out,retval] int* fieldLen
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FieldLength(
            [in] int fieldLen
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TagString(
            [out,retval] BSTR* Tag
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TagString(
            [in] BSTR Tag
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PromptString(
            [out,retval] BSTR* bstrPrompt
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PromptString(
            [in] BSTR bstrPrompt
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextString(
            [out,retval] BSTR* bstrText
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextString(
            [in] BSTR bstrText
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* Name
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleName(
            [in] BSTR Name
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Alignment(
            [out,retval] int* align
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Alignment(
            [in] <enum> AcAlignment align
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorizontalAlignment(
            [out,retval] int* horizAlign
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorizontalAlignment(
            [in] <enum> AcHorizontalAlignment horizAlign
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VerticalAlignment(
            [out,retval] int* vertiAlign
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VerticalAlignment(
            [in] <enum> AcVerticalAlignment vertiAlign
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* scalFactor
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] <alias> ACAD_NOUNITS scalFactor
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [out,retval] <alias> ACAD_ANGLE* obliAngle
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [in] <alias> ACAD_ANGLE obliAngle
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextAlignmentPoint(
            [out,retval] VARIANT* alignPoint
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextAlignmentPoint(
            [in] VARIANT alignPoint
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* insPoint
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT insPoint
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextGenerationFlag(
            [out,retval] int* textGenFlag
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextGenerationFlag(
            [in] int textGenFlag
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Mode(
            [out,retval] int* Mode
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Mode(
            [in] int Mode
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UpsideDown(
            [out,retval] bool* bUpsideDown
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UpsideDown(
            [in] bool bUpsideDown
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Backward(
            [out,retval] bool* bBackward
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Backward(
            [in] bool bBackward
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Invisible(
            [out,retval] bool* bInvisible
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Invisible(
            [in] bool bInvisible
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Constant(
            [out,retval] bool* bConstant
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Constant(
            [in] bool bConstant
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Verify(
            [out,retval] bool* bVerify
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Verify(
            [in] bool bVerify
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Preset(
            [out,retval] bool* bPreset
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Preset(
            [in] bool bPreset
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LockPosition(
            [out,retval] bool* bLockPosition
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LockPosition(
            [in] bool bLockPosition
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MTextAttribute(
            [out,retval] bool* bMTextAttribute
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MTextAttribute(
            [in] bool bMTextAttribute
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MTextAttributeContent(
            [out,retval] BSTR* content
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MTextAttributeContent(
            [in] BSTR content
         );

    55. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT UpdateMTextAttribute(
         );

    56. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MTextBoundaryWidth(
            [out,retval] double* boundaryWidth
         );

    57. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MTextBoundaryWidth(
             double boundaryWidth
         );

    58. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MTextDrawingDirection(
            [out,retval] int* drawDir
         );

    59. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MTextDrawingDirection(
            [in] <enum> AcDrawingDirection drawDir
         );


==================================================================================

IDispatch IAcad3DSolid;
IID = {E95E1FD4-24A7-4ABD-A8DF-BF13F2BEA2CD}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Centroid(
            [out,retval] VARIANT* Centroid
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MomentOfInertia(
            [out,retval] VARIANT* momentInertia
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrincipalDirections(
            [out,retval] VARIANT* prinDir
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrincipalMoments(
            [out,retval] VARIANT* prinMoments
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ProductOfInertia(
            [out,retval] VARIANT* prodInertia
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RadiiOfGyration(
            [out,retval] VARIANT* radiiGyration
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Volume(
            [out,retval] double* Volume
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Boolean(
            [in] <enum> AcBooleanType Operation, 
            [in] <IDispatch> IAcad3DSolid* SolidObject
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CheckInterference(
            [in] <IDispatch> IAcad3DSolid* Object, 
            [in] bool CreateInterferenceSolid, 
            [out,retval] <IDispatch> IAcad3DSolid** pIntSolid
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SectionSolid(
            [in] VARIANT Point1, 
            [in] VARIANT Point2, 
            [in] VARIANT point3, 
            [out,retval] <IDispatch> IAcadRegion** pRegion
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SliceSolid(
            [in] VARIANT Point1, 
            [in] VARIANT Point2, 
            [in] VARIANT point3, 
            [in] bool Negative, 
            [out,retval] <IDispatch> IAcad3DSolid** pNegSideSolid
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SolidType(
            [out,retval] BSTR* SolidType
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Position(
            [out,retval] VARIANT* Position
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Position(
            [in] VARIANT Position
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT History(
            [out,retval] bool* bHistory
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT History(
            [in] bool bHistory
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowHistory(
            [out,retval] bool* Position
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowHistory(
            [in] bool Position
         );


==================================================================================

IDispatch IAcadRegion;
IID = {11FD0EAC-54FA-4F61-91A7-8AB2EE902037}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Area(
            [out,retval] double* Area
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Centroid(
            [out,retval] VARIANT* Centroid
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MomentOfInertia(
            [out,retval] VARIANT* momentInertia
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Perimeter(
            [out,retval] double* Perimeter
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrincipalDirections(
            [out,retval] VARIANT* prinDir
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrincipalMoments(
            [out,retval] VARIANT* prinMoments
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ProductOfInertia(
            [out,retval] double* prodInertia
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RadiiOfGyration(
            [out,retval] VARIANT* radiiGyration
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Boolean(
            [in] <enum> AcBooleanType Operation, 
            [in] <IDispatch> IAcadRegion* Object
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Explode(
            [out,retval] VARIANT* pArrayObjs
         );


==================================================================================

IDispatch IAcadCircle;
IID = {4E50E531-0B12-46E4-A226-57966DB5D005}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Center(
            [out,retval] VARIANT* CenterPoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Center(
            [in] VARIANT CenterPoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Radius(
            [out,retval] double* Radius
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Radius(
            [in] double Radius
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Diameter(
            [out,retval] double* Diameter
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Diameter(
            [in] double Diameter
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Circumference(
            [out,retval] double* Circumference
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Circumference(
            [in] double Circumference
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Area(
            [out,retval] double* Area
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Area(
            [in] double Area
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Offset(
            [in] double Distance, 
            [out,retval] VARIANT* pOffsetCurves
         );


==================================================================================

IDispatch IAcadDimAligned;
IID = {528DF772-D0A1-4D34-95A2-E643E39A6537}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Point(
            [out,retval] VARIANT* xLine1Point
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Point(
            [in] VARIANT xLine1Point
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Point(
            [out,retval] VARIANT* xLine2Point
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Point(
            [in] VARIANT xLine2Point
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnits(
            [out,retval] bool* bAlternate
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnits(
            [in] bool bAlternate
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [out,retval] int* precision
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [in] <enum> AcDimPrecision precision
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [out,retval] <alias> ACAD_NOUNITS* scale
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [in] <alias> ACAD_NOUNITS scale
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [out,retval] double* Distance
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [in] double Distance
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [out,retval] int* Distance
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [in] <enum> AcDimPrecision Distance
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [out,retval] int* Units
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [in] <enum> AcDimUnits Units
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [out,retval] BSTR* prefix
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [in] BSTR prefix
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [out,retval] BSTR* suffix
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [in] BSTR suffix
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* color
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR color
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [out,retval] <alias> ACAD_COLOR* color
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [in] <alias> ACAD_COLOR color
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [out,retval] int* Prec
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [in] <enum> AcDimPrecision Prec
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineExtend(
            [out,retval] double* extend
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineExtend(
            [in] double extend
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [out,retval] double* extend
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [in] double extend
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fit(
            [out,retval] int* fittype
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fit(
            [in] <enum> AcDimFit fittype
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FractionFormat(
            [out,retval] int* Type
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FractionFormat(
            [in] <enum> AcDimFractionType Type
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [out,retval] int* Type
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [in] <enum> AcDimHorizontalJustification Type
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* Type
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [in] <alias> ACAD_NOUNITS Type
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnitsFormat(
            [out,retval] int* format
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnitsFormat(
            [in] <enum> AcDimLUnits format
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* lweight
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [in] <alias> ACAD_LWEIGHT lweight
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RoundDistance(
            [out,retval] double* Distance
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RoundDistance(
            [in] double Distance
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [out,retval] bool* bSuppress
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [in] bool bSuppress
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [out,retval] bool* bSuppress
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [in] bool bSuppress
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [out,retval] bool* bSuppress
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [in] bool bSuppress
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [out,retval] bool* bSuppress
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [in] bool bSuppress
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLineInside(
            [out,retval] bool* bInside
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLineInside(
            [in] bool bInside
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [out,retval] bool* bInside
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [in] bool bInside
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInside(
            [out,retval] bool* bInside
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInside(
            [in] bool bInside
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForceLineInside(
            [out,retval] bool* bInside
         );

    60. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForceLineInside(
            [in] bool bInside
         );

    61. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [out,retval] bool* bInside
         );

    62. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [in] bool bInside
         );

    63. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [out,retval] double* Offset
         );

    64. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [in] double Offset
         );

    65. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    66. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [in] bool bVal
         );

    67. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    68. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [in] bool bVal
         );

    69. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    70. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [in] bool bVal
         );

    71. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [out,retval] bool* bVal
         );

    72. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [in] bool bVal
         );

    73. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    74. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [in] bool bVal
         );

    75. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    76. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [in] bool bVal
         );

    77. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    78. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    79. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    80. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [in] bool bVal
         );

    81. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [out,retval] bool* bVal
         );

    82. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [in] bool bVal
         );

    83. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [out,retval] bool* bVal
         );

    84. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [in] bool bVal
         );

    85. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    86. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    87. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    88. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [in] bool bVal
         );

    89. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* weight
         );

    90. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [in] <alias> ACAD_LWEIGHT weight
         );

    91. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    92. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    93. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [out,retval] int* Type
         );

    94. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [in] <enum> AcDimArrowheadType Type
         );

    95. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [out,retval] int* Type
         );

    96. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [in] <enum> AcDimArrowheadType Type
         );

    97. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Measurement(
            [out,retval] double* bVal
         );

    98. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [out,retval] BSTR* BlockName
         );

    99. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [in] BSTR BlockName
         );

    100. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [out,retval] BSTR* BlockName
         );

    101. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [in] BSTR BlockName
         );

    102. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [out,retval] BSTR* Linetype
         );

    103. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [in] BSTR Linetype
         );

    104. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [out,retval] BSTR* Linetype
         );

    105. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [in] BSTR Linetype
         );

    106. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [out,retval] BSTR* Linetype
         );

    107. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [in] BSTR Linetype
         );

    108. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [out,retval] bool* bFixedLen
         );

    109. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [in] bool bFixedLen
         );

    110. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [out,retval] double* FixedLen
         );

    111. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [in] double FixedLen
         );

    112. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrForm(
            [out,retval] bool* bIsDynamic
         );

    113. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrForm(
            [in] bool bIsDynamic
         );

    114. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrReference(
            [out,retval] bool* bIsReference
         );

    115. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrReference(
            [in] bool bIsReference
         );

    116. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrName(
            [out,retval] BSTR* bstrName
         );

    117. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrName(
            [in] BSTR bstrName
         );

    118. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [out,retval] BSTR* bstrExpression
         );

    119. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [in] BSTR bstrExpression
         );

    120. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrValue(
            [out,retval] BSTR* Value
         );

    121. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrValue(
            [in] BSTR Value
         );

    122. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [out,retval] BSTR* bstrDescription
         );

    123. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [in] BSTR bstrDescription
         );

    124. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SubUnitsSuffix(
            [out,retval] BSTR* suffix
         );

    125. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SubUnitsSuffix(
            [in] BSTR suffix
         );

    126. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SubUnitsFactor(
            [out,retval] double* factor
         );

    127. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SubUnitsFactor(
            [in] double factor
         );

    128. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSubUnitsSuffix(
            [out,retval] BSTR* suffix
         );

    129. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSubUnitsSuffix(
            [in] BSTR suffix
         );

    130. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSubUnitsFactor(
            [out,retval] double* factor
         );

    131. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSubUnitsFactor(
            [in] double factor
         );


==================================================================================

IDispatch IAcadDimension;
IID = {70A7C241-F067-4BBA-8B62-4A69B9A08845}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextPosition(
            [out,retval] VARIANT* textPos
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextPosition(
            [in] VARIANT textPos
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextRotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextRotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextOverride(
            [out,retval] BSTR* bstrText
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextOverride(
            [in] BSTR bstrText
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* bstrName
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleName(
            [in] BSTR bstrName
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextColor(
            [out,retval] <alias> ACAD_COLOR* color
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextColor(
            [in] <alias> ACAD_COLOR color
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DecimalSeparator(
            [out,retval] BSTR* character
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DecimalSeparator(
            [in] BSTR character
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextGap(
            [out,retval] double* Offset
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextGap(
            [in] double Offset
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextPrefix(
            [out,retval] BSTR* prefix
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextPrefix(
            [in] BSTR prefix
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextSuffix(
            [out,retval] BSTR* suffix
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextSuffix(
            [in] BSTR suffix
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* factor
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] <alias> ACAD_NOUNITS factor
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VerticalTextPosition(
            [out,retval] int* Type
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VerticalTextPosition(
            [in] <enum> AcDimVerticalJustification Type
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TolerancePrecision(
            [out,retval] int* precision
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TolerancePrecision(
            [in] <enum> AcDimPrecision precision
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceHeightScale(
            [out,retval] <alias> ACAD_NOUNITS* scale
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceHeightScale(
            [in] <alias> ACAD_NOUNITS scale
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceLowerLimit(
            [out,retval] double* lower
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceLowerLimit(
            [in] double lower
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextMovement(
            [out,retval] int* Move
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextMovement(
            [in] <enum> AcDimTextMovement Move
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceDisplay(
            [out,retval] int* method
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceDisplay(
            [in] <enum> AcDimToleranceMethod method
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceJustification(
            [out,retval] int* method
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceJustification(
            [in] <enum> AcDimToleranceJustify method
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceUpperLimit(
            [out,retval] double* upper
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceUpperLimit(
            [in] double upper
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextStyle(
            [out,retval] BSTR* style
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextStyle(
            [in] BSTR style
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextHeight(
            [out,retval] double* Height
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextHeight(
            [in] double Height
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressLeadingZeros(
            [in] bool bVal
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressTrailingZeros(
            [in] bool bVal
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressLeadingZeros(
            [in] bool bVal
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressTrailingZeros(
            [in] bool bVal
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextFill(
            [out,retval] bool* bVal
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextFill(
            [in] bool bVal
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextFillColor(
            [out,retval] <alias> ACAD_COLOR* color
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextFillColor(
            [in] <alias> ACAD_COLOR color
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimTxtDirection(
            [out,retval] bool* bVal
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimTxtDirection(
            [in] bool bVal
         );


==================================================================================

IDispatch IAcadDimAngular;
IID = {D7187777-A662-47E5-8749-70B9B436DEF0}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1StartPoint(
            [out,retval] VARIANT* xLine1Point
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1StartPoint(
            [in] VARIANT xLine1Point
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1EndPoint(
            [out,retval] VARIANT* xLine1Point
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1EndPoint(
            [in] VARIANT xLine1Point
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2StartPoint(
            [out,retval] VARIANT* xLine2Point
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2StartPoint(
            [in] VARIANT xLine2Point
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2EndPoint(
            [out,retval] VARIANT* xLine2Point
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2EndPoint(
            [in] VARIANT xLine2Point
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AngleFormat(
            [out,retval] int* format
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AngleFormat(
            [in] <enum> AcAngleUnits format
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [out,retval] double* extend
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [in] double extend
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fit(
            [out,retval] int* fittype
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fit(
            [in] <enum> AcDimFit fittype
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [out,retval] int* Type
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [in] <enum> AcDimHorizontalJustification Type
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* lweight
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [in] <alias> ACAD_LWEIGHT lweight
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [out,retval] bool* bSuppress
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [in] bool bSuppress
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [out,retval] bool* bSuppress
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [in] bool bSuppress
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [out,retval] bool* bSuppress
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [in] bool bSuppress
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [out,retval] bool* bSuppress
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [in] bool bSuppress
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLineInside(
            [out,retval] bool* bInside
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLineInside(
            [in] bool bInside
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [out,retval] bool* bInside
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [in] bool bInside
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInside(
            [out,retval] bool* bInside
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInside(
            [in] bool bInside
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForceLineInside(
            [out,retval] bool* bInside
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForceLineInside(
            [in] bool bInside
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [out,retval] bool* bInside
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [in] bool bInside
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextPrecision(
            [out,retval] int* precision
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextPrecision(
            [in] <enum> AcDimPrecision precision
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [out,retval] double* Offset
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [in] double Offset
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* weight
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [in] <alias> ACAD_LWEIGHT weight
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [out,retval] int* Type
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [in] <enum> AcDimArrowheadType Type
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [out,retval] int* Type
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [in] <enum> AcDimArrowheadType Type
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Measurement(
            [out,retval] <alias> ACAD_ANGLE* bVal
         );

    54. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [out,retval] BSTR* BlockName
         );

    55. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [in] BSTR BlockName
         );

    56. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [out,retval] BSTR* BlockName
         );

    57. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [in] BSTR BlockName
         );

    58. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [out,retval] BSTR* Linetype
         );

    59. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [in] BSTR Linetype
         );

    60. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [out,retval] BSTR* Linetype
         );

    61. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [in] BSTR Linetype
         );

    62. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [out,retval] BSTR* Linetype
         );

    63. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [in] BSTR Linetype
         );

    64. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [out,retval] bool* bFixedLen
         );

    65. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [in] bool bFixedLen
         );

    66. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [out,retval] double* FixedLen
         );

    67. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [in] double FixedLen
         );

    68. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrForm(
            [out,retval] bool* bIsDynamic
         );

    69. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrForm(
            [in] bool bIsDynamic
         );

    70. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrReference(
            [out,retval] bool* bIsReference
         );

    71. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrReference(
            [in] bool bIsReference
         );

    72. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrName(
            [out,retval] BSTR* bstrName
         );

    73. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrName(
            [in] BSTR bstrName
         );

    74. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [out,retval] BSTR* bstrExpression
         );

    75. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [in] BSTR bstrExpression
         );

    76. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrValue(
            [out,retval] BSTR* Value
         );

    77. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrValue(
            [in] BSTR Value
         );

    78. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [out,retval] BSTR* bstrDescription
         );

    79. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [in] BSTR bstrDescription
         );


==================================================================================

IDispatch IAcadDimDiametric;
IID = {9C32E747-9CB2-4216-B6B1-761020385257}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLength(
            [in] double 
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnits(
            [out,retval] bool* bAlternate
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnits(
            [in] bool bAlternate
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [out,retval] int* precision
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [in] <enum> AcDimPrecision precision
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [out,retval] <alias> ACAD_NOUNITS* scale
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [in] <alias> ACAD_NOUNITS scale
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [out,retval] double* Distance
         );

    9. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [in] double Distance
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [out,retval] int* Distance
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [in] <enum> AcDimPrecision Distance
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [out,retval] int* Units
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [in] <enum> AcDimUnits Units
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [out,retval] BSTR* prefix
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [in] BSTR prefix
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [out,retval] BSTR* prefix
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [in] BSTR prefix
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [out,retval] int* Prec
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [in] <enum> AcDimPrecision Prec
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FractionFormat(
            [out,retval] int* Type
         );

    23. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FractionFormat(
            [in] <enum> AcDimFractionType Type
         );

    24. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fit(
            [out,retval] int* fittype
         );

    25. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fit(
            [in] <enum> AcDimFit fittype
         );

    26. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* Type
         );

    27. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [in] <alias> ACAD_NOUNITS Type
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnitsFormat(
            [out,retval] int* format
         );

    29. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnitsFormat(
            [in] <enum> AcDimLUnits format
         );

    30. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RoundDistance(
            [out,retval] double* Distance
         );

    31. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RoundDistance(
            [in] double Distance
         );

    32. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [out,retval] bool* bSuppress
         );

    33. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [in] bool bSuppress
         );

    34. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [out,retval] bool* bSuppress
         );

    35. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [in] bool bSuppress
         );

    36. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [out,retval] bool* bInside
         );

    37. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [in] bool bInside
         );

    38. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInside(
            [out,retval] bool* bInside
         );

    39. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInside(
            [in] bool bInside
         );

    40. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForceLineInside(
            [out,retval] bool* bInside
         );

    41. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForceLineInside(
            [in] bool bInside
         );

    42. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [out,retval] bool* bInside
         );

    43. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [in] bool bInside
         );

    44. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CenterType(
            [out,retval] int* Type
         );

    45. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CenterType(
            [in] <enum> AcDimCenterType Type
         );

    46. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CenterMarkSize(
            [out,retval] double* Type
         );

    47. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CenterMarkSize(
            [in] double Type
         );

    48. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    49. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [in] bool bVal
         );

    50. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    51. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [in] bool bVal
         );

    52. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    53. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [in] bool bVal
         );

    54. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [out,retval] bool* bVal
         );

    55. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [in] bool bVal
         );

    56. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    57. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [in] bool bVal
         );

    58. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    59. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [in] bool bVal
         );

    60. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    61. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    62. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    63. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [in] bool bVal
         );

    64. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [out,retval] bool* bVal
         );

    65. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [in] bool bVal
         );

    66. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [out,retval] bool* bVal
         );

    67. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [in] bool bVal
         );

    68. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    69. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    70. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    71. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [in] bool bVal
         );

    72. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* weight
         );

    73. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [in] <alias> ACAD_LWEIGHT weight
         );

    74. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    75. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    76. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [out,retval] int* Type
         );

    77. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [in] <enum> AcDimArrowheadType Type
         );

    78. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [out,retval] int* Type
         );

    79. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [in] <enum> AcDimArrowheadType Type
         );

    80. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Measurement(
            [out,retval] double* bVal
         );

    81. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [out,retval] BSTR* BlockName
         );

    82. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [in] BSTR BlockName
         );

    83. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [out,retval] BSTR* BlockName
         );

    84. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [in] BSTR BlockName
         );

    85. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [out,retval] BSTR* Linetype
         );

    86. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [in] BSTR Linetype
         );

    87. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrForm(
            [out,retval] bool* bIsDynamic
         );

    88. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrForm(
            [in] bool bIsDynamic
         );

    89. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrReference(
            [out,retval] bool* bIsReference
         );

    90. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrReference(
            [in] bool bIsReference
         );

    91. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrName(
            [out,retval] BSTR* bstrName
         );

    92. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrName(
            [in] BSTR bstrName
         );

    93. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [out,retval] BSTR* bstrExpression
         );

    94. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [in] BSTR bstrExpression
         );

    95. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrValue(
            [out,retval] BSTR* Value
         );

    96. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrValue(
            [in] BSTR Value
         );

    97. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [out,retval] BSTR* bstrDescription
         );

    98. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [in] BSTR bstrDescription
         );


==================================================================================

IDispatch IAcadDimRotated;
IID = {7E690BA9-20E9-4A12-B375-2B519D0A1590}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnits(
            [out,retval] bool* bAlternate
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnits(
            [in] bool bAlternate
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [out,retval] int* precision
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [in] <enum> AcDimPrecision precision
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [out,retval] <alias> ACAD_NOUNITS* scale
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [in] <alias> ACAD_NOUNITS scale
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [out,retval] double* Distance
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [in] double Distance
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [out,retval] int* Distance
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [in] <enum> AcDimPrecision Distance
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [out,retval] int* Units
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [in] <enum> AcDimUnits Units
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [out,retval] BSTR* prefix
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [in] BSTR prefix
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [out,retval] BSTR* prefix
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [in] BSTR prefix
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [out,retval] int* Prec
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [in] <enum> AcDimPrecision Prec
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineExtend(
            [out,retval] double* extend
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineExtend(
            [in] double extend
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [out,retval] double* extend
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [in] double extend
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fit(
            [out,retval] int* fittype
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fit(
            [in] <enum> AcDimFit fittype
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FractionFormat(
            [out,retval] int* Type
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FractionFormat(
            [in] <enum> AcDimFractionType Type
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [out,retval] int* Type
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [in] <enum> AcDimHorizontalJustification Type
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* Type
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [in] <alias> ACAD_NOUNITS Type
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnitsFormat(
            [out,retval] int* format
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnitsFormat(
            [in] <enum> AcDimLUnits format
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* lweight
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [in] <alias> ACAD_LWEIGHT lweight
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RoundDistance(
            [out,retval] double* Distance
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RoundDistance(
            [in] double Distance
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [out,retval] bool* bSuppress
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [in] bool bSuppress
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [out,retval] bool* bSuppress
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [in] bool bSuppress
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [out,retval] bool* bSuppress
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [in] bool bSuppress
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [out,retval] bool* bSuppress
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [in] bool bSuppress
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLineInside(
            [out,retval] bool* bInside
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLineInside(
            [in] bool bInside
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [out,retval] bool* bInside
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [in] bool bInside
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInside(
            [out,retval] bool* bInside
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInside(
            [in] bool bInside
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForceLineInside(
            [out,retval] bool* bInside
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForceLineInside(
            [in] bool bInside
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [out,retval] bool* bInside
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [in] bool bInside
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [out,retval] double* Offset
         );

    60. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [in] double Offset
         );

    61. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    62. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [in] bool bVal
         );

    63. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    64. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [in] bool bVal
         );

    65. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    66. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [in] bool bVal
         );

    67. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [out,retval] bool* bVal
         );

    68. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [in] bool bVal
         );

    69. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    70. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [in] bool bVal
         );

    71. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    72. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [in] bool bVal
         );

    73. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    74. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    75. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    76. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [in] bool bVal
         );

    77. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [out,retval] bool* bVal
         );

    78. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [in] bool bVal
         );

    79. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [out,retval] bool* bVal
         );

    80. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [in] bool bVal
         );

    81. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    82. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    83. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    84. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [in] bool bVal
         );

    85. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* weight
         );

    86. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [in] <alias> ACAD_LWEIGHT weight
         );

    87. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    88. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    89. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [out,retval] int* Type
         );

    90. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [in] <enum> AcDimArrowheadType Type
         );

    91. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [out,retval] int* Type
         );

    92. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [in] <enum> AcDimArrowheadType Type
         );

    93. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Measurement(
            [out,retval] double* bVal
         );

    94. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [out,retval] BSTR* BlockName
         );

    95. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [in] BSTR BlockName
         );

    96. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [out,retval] BSTR* BlockName
         );

    97. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [in] BSTR BlockName
         );

    98. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [out,retval] BSTR* Linetype
         );

    99. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [in] BSTR Linetype
         );

    100. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [out,retval] BSTR* Linetype
         );

    101. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [in] BSTR Linetype
         );

    102. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [out,retval] BSTR* Linetype
         );

    103. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [in] BSTR Linetype
         );

    104. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [out,retval] bool* bFixedLen
         );

    105. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [in] bool bFixedLen
         );

    106. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [out,retval] double* FixedLen
         );

    107. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [in] double FixedLen
         );

    108. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrForm(
            [out,retval] bool* bIsDynamic
         );

    109. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrForm(
            [in] bool bIsDynamic
         );

    110. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrReference(
            [out,retval] bool* bIsReference
         );

    111. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrReference(
            [in] bool bIsReference
         );

    112. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrName(
            [out,retval] BSTR* bstrName
         );

    113. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrName(
            [in] BSTR bstrName
         );

    114. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [out,retval] BSTR* bstrExpression
         );

    115. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [in] BSTR bstrExpression
         );

    116. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrValue(
            [out,retval] BSTR* Value
         );

    117. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrValue(
            [in] BSTR Value
         );

    118. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [out,retval] BSTR* bstrDescription
         );

    119. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [in] BSTR bstrDescription
         );

    120. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SubUnitsSuffix(
            [out,retval] BSTR* suffix
         );

    121. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SubUnitsSuffix(
            [in] BSTR suffix
         );

    122. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SubUnitsFactor(
            [out,retval] double* factor
         );

    123. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SubUnitsFactor(
            [in] double factor
         );

    124. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSubUnitsSuffix(
            [out,retval] BSTR* suffix
         );

    125. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSubUnitsSuffix(
            [in] BSTR suffix
         );

    126. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSubUnitsFactor(
            [out,retval] double* factor
         );

    127. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSubUnitsFactor(
            [in] double factor
         );


==================================================================================

IDispatch IAcadDimOrdinate;
IID = {9F56A92F-889B-46D5-B279-71E35D705525}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnits(
            [out,retval] bool* bAlternate
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnits(
            [in] bool bAlternate
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [out,retval] int* precision
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [in] <enum> AcDimPrecision precision
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [out,retval] <alias> ACAD_NOUNITS* scale
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [in] <alias> ACAD_NOUNITS scale
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [out,retval] double* Distance
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [in] double Distance
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [out,retval] int* Distance
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [in] <enum> AcDimPrecision Distance
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [out,retval] int* Units
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [in] <enum> AcDimUnits Units
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [out,retval] BSTR* prefix
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [in] BSTR prefix
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [out,retval] BSTR* prefix
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [in] BSTR prefix
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [out,retval] int* Prec
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [in] <enum> AcDimPrecision Prec
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FractionFormat(
            [out,retval] int* Type
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FractionFormat(
            [in] <enum> AcDimFractionType Type
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* Type
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [in] <alias> ACAD_NOUNITS Type
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnitsFormat(
            [out,retval] int* format
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnitsFormat(
            [in] <enum> AcDimLUnits format
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* lweight
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [in] <alias> ACAD_LWEIGHT lweight
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RoundDistance(
            [out,retval] double* Distance
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RoundDistance(
            [in] double Distance
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [out,retval] double* Offset
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [in] double Offset
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [in] bool bVal
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [in] bool bVal
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [in] bool bVal
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [out,retval] bool* bVal
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [in] bool bVal
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [in] bool bVal
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [in] bool bVal
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [in] bool bVal
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [out,retval] bool* bVal
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [in] bool bVal
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [out,retval] bool* bVal
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [in] bool bVal
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [in] bool bVal
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Measurement(
            [out,retval] double* bVal
         );

    60. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [out,retval] bool* bFixedLen
         );

    61. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [in] bool bFixedLen
         );

    62. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [out,retval] double* FixedLen
         );

    63. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [in] double FixedLen
         );

    64. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SubUnitsSuffix(
            [out,retval] BSTR* suffix
         );

    65. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SubUnitsSuffix(
            [in] BSTR suffix
         );

    66. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SubUnitsFactor(
            [out,retval] double* factor
         );

    67. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SubUnitsFactor(
            [in] double factor
         );

    68. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSubUnitsSuffix(
            [out,retval] BSTR* suffix
         );

    69. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSubUnitsSuffix(
            [in] BSTR suffix
         );

    70. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSubUnitsFactor(
            [out,retval] double* factor
         );

    71. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSubUnitsFactor(
            [in] double factor
         );


==================================================================================

IDispatch IAcadDimRadial;
IID = {67809A55-363A-417B-92D3-81978612B159}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLength(
            [in] double 
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnits(
            [out,retval] bool* bAlternate
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnits(
            [in] bool bAlternate
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [out,retval] int* precision
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [in] <enum> AcDimPrecision precision
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [out,retval] <alias> ACAD_NOUNITS* scale
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [in] <alias> ACAD_NOUNITS scale
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [out,retval] double* Distance
         );

    9. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [in] double Distance
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [out,retval] int* Distance
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [in] <enum> AcDimPrecision Distance
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [out,retval] int* Units
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [in] <enum> AcDimUnits Units
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [out,retval] BSTR* prefix
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [in] BSTR prefix
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [out,retval] BSTR* prefix
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [in] BSTR prefix
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CenterType(
            [out,retval] int* Type
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CenterType(
            [in] <enum> AcDimCenterType Type
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CenterMarkSize(
            [out,retval] double* Type
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CenterMarkSize(
            [in] double Type
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    23. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    24. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [out,retval] int* Prec
         );

    25. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [in] <enum> AcDimPrecision Prec
         );

    26. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FractionFormat(
            [out,retval] int* Type
         );

    27. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FractionFormat(
            [in] <enum> AcDimFractionType Type
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fit(
            [out,retval] int* fittype
         );

    29. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fit(
            [in] <enum> AcDimFit fittype
         );

    30. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* Type
         );

    31. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [in] <alias> ACAD_NOUNITS Type
         );

    32. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnitsFormat(
            [out,retval] int* format
         );

    33. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnitsFormat(
            [in] <enum> AcDimLUnits format
         );

    34. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RoundDistance(
            [out,retval] double* Distance
         );

    35. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RoundDistance(
            [in] double Distance
         );

    36. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLineSuppress(
            [out,retval] bool* bSuppress
         );

    37. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLineSuppress(
            [in] bool bSuppress
         );

    38. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [out,retval] bool* bInside
         );

    39. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [in] bool bInside
         );

    40. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInside(
            [out,retval] bool* bInside
         );

    41. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInside(
            [in] bool bInside
         );

    42. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForceLineInside(
            [out,retval] bool* bInside
         );

    43. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForceLineInside(
            [in] bool bInside
         );

    44. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [out,retval] bool* bInside
         );

    45. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [in] bool bInside
         );

    46. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    47. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [in] bool bVal
         );

    48. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    49. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [in] bool bVal
         );

    50. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    51. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [in] bool bVal
         );

    52. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [out,retval] bool* bVal
         );

    53. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [in] bool bVal
         );

    54. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    55. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [in] bool bVal
         );

    56. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    57. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [in] bool bVal
         );

    58. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    59. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    60. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    61. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [in] bool bVal
         );

    62. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [out,retval] bool* bVal
         );

    63. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [in] bool bVal
         );

    64. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [out,retval] bool* bVal
         );

    65. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [in] bool bVal
         );

    66. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    67. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    68. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    69. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [in] bool bVal
         );

    70. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* weight
         );

    71. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [in] <alias> ACAD_LWEIGHT weight
         );

    72. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    73. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    74. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadType(
            [out,retval] int* Type
         );

    75. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadType(
            [in] <enum> AcDimArrowheadType Type
         );

    76. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Measurement(
            [out,retval] double* bVal
         );

    77. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [out,retval] BSTR* BlockName
         );

    78. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [in] BSTR BlockName
         );

    79. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [out,retval] BSTR* Linetype
         );

    80. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [in] BSTR Linetype
         );

    81. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrForm(
            [out,retval] bool* bIsDynamic
         );

    82. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrForm(
            [in] bool bIsDynamic
         );

    83. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrReference(
            [out,retval] bool* bIsReference
         );

    84. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrReference(
            [in] bool bIsReference
         );

    85. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrName(
            [out,retval] BSTR* bstrName
         );

    86. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrName(
            [in] BSTR bstrName
         );

    87. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [out,retval] BSTR* bstrExpression
         );

    88. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [in] BSTR bstrExpression
         );

    89. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrValue(
            [out,retval] BSTR* Value
         );

    90. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrValue(
            [in] BSTR Value
         );

    91. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [out,retval] BSTR* bstrDescription
         );

    92. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [in] BSTR bstrDescription
         );


==================================================================================

IDispatch IAcadEllipse;
IID = {8485202E-57E3-44B1-9615-2AB224D395B8}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartPoint(
            [out,retval] VARIANT* StartPoint
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Center(
            [out,retval] VARIANT* Center
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Center(
            [in] VARIANT Center
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndPoint(
            [out,retval] VARIANT* EndPoint
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MajorRadius(
            [out,retval] double* MajorRadius
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MajorRadius(
            [in] double MajorRadius
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MinorRadius(
            [out,retval] double* MinorRadius
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MinorRadius(
            [in] double MinorRadius
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RadiusRatio(
            [out,retval] double* RadiusRatio
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RadiusRatio(
            [in] double RadiusRatio
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartAngle(
            [out,retval] <alias> ACAD_ANGLE* StartAngle
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StartAngle(
            [in] <alias> ACAD_ANGLE StartAngle
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndAngle(
            [out,retval] <alias> ACAD_ANGLE* EndAngle
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndAngle(
            [in] <alias> ACAD_ANGLE EndAngle
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartParameter(
            [out,retval] double* StartParameter
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StartParameter(
            [in] double StartParameter
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndParameter(
            [out,retval] double* EndParameter
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndParameter(
            [in] double EndParameter
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MajorAxis(
            [out,retval] VARIANT* MajorAxis
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MajorAxis(
            [in] VARIANT MajorAxis
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MinorAxis(
            [out,retval] VARIANT* MinorAxis
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    23. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    24. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Area(
            [out,retval] double* Area
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Offset(
            [in] double Distance, 
            [out,retval] VARIANT* pOffsetCurves
         );


==================================================================================

IDispatch IAcadLeader;
IID = {11D050D2-848B-4EC8-993F-2CE089667D7C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* Coordinates
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT Coordinates
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* bstrName
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleName(
            [in] BSTR bstrName
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Type(
            [out,retval] int* Type
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Type(
            [in] <enum> AcLeaderType Type
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Evaluate(
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Annotation(
            [out,retval] <IDispatch> IAcadEntity** pVal
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Annotation(
            [in] <IDispatch> IAcadEntity* pVal
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadType(
            [out,retval] int* Type
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadType(
            [in] <enum> AcDimArrowheadType Type
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* weight
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [in] <alias> ACAD_LWEIGHT weight
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* factor
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] <alias> ACAD_NOUNITS factor
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VerticalTextPosition(
            [out,retval] int* Type
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VerticalTextPosition(
            [in] <enum> AcDimVerticalJustification Type
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextGap(
            [out,retval] double* Offset
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextGap(
            [in] double Offset
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [out,retval] BSTR* BlockName
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [in] BSTR BlockName
         );


==================================================================================

IDispatch IAcadMText;
IID = {8830DA6E-58B1-45D2-971E-B4BE046C0F75}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextString(
            [out,retval] BSTR* bstrText
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextString(
            [in] BSTR bstrText
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* bstrName
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleName(
            [in] BSTR bstrName
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AttachmentPoint(
            [out,retval] int* attPoint
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AttachmentPoint(
            [in] <enum> AcAttachmentPoint attPoint
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DrawingDirection(
            [out,retval] int* drawDir
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DrawingDirection(
            [in] <enum> AcDrawingDirection drawDir
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] double* Width
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] double Width
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* insPoint
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT insPoint
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LineSpacingFactor(
            [out,retval] double* factor
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LineSpacingFactor(
            [in] double factor
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LineSpacingStyle(
            [out,retval] int* style
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LineSpacingStyle(
            [in] <enum> AcLineSpacingStyle style
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LineSpacingDistance(
            [out,retval] double* Value
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LineSpacingDistance(
            [in] double Value
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundFill(
            [out,retval] bool* bUseBackgroundFill
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundFill(
            [in] bool bUseBackgroundFill
         );

    27. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT FieldCode(
            [out,retval] BSTR* bstrText
         );


==================================================================================

IDispatch IAcadPoint;
IID = {6AD09D7A-A925-45D9-99D1-6E0E25301734}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* Coordinates
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT Coordinates
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );


==================================================================================

IDispatch IAcadLWPolyline;
IID = {134E226C-5024-4EFC-BB7D-131CD75AF0C9}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* Coordinates
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT Coordinates
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddVertex(
            [in] int Index, 
            [in] VARIANT vertex
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Explode(
            [out,retval] VARIANT* pArrayObjs
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBulge(
            [in] int Index, 
            [out,retval] double* bulge
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBulge(
            [in] int Index, 
            [in] double bulge
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetWidth(
            [in] int Index, 
            [out] double* StartWidth, 
            [out] double* EndWidth
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetWidth(
            [in] int Index, 
            [in] double StartWidth, 
            [in] double EndWidth
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ConstantWidth(
            [out,retval] double* Width
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ConstantWidth(
            [in] double Width
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Offset(
            [in] double Distance, 
            [out,retval] VARIANT* pOffsetCurves
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Elevation(
            [out,retval] double* Elevation
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Elevation(
            [in] double Elevation
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Area(
            [out,retval] double* Area
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Closed(
            [out,retval] bool* fClose
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Closed(
            [in] bool fClose
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinetypeGeneration(
            [out,retval] bool* bLinetypeGen
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinetypeGeneration(
            [in] bool bLinetypeGen
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Length(
            [out,retval] double* Length
         );


==================================================================================

IDispatch IAcadPolyline;
IID = {D5E5DEA6-B3A5-4FD7-A507-5A7F18BEBD10}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* Coordinates
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT Coordinates
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AppendVertex(
            [in] VARIANT vertex
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Explode(
            [out,retval] VARIANT* pArrayObjs
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBulge(
            [in] int Index, 
            [out,retval] double* bulge
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBulge(
            [in] int Index, 
            [in] double bulge
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetWidth(
            [in] int Index, 
            [out] double* StartWidth, 
             double* EndWidth
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetWidth(
            [in] int Index, 
            [in] double StartWidth, 
             double EndWidth
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ConstantWidth(
            [out,retval] double* Width
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ConstantWidth(
            [in] double Width
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Offset(
            [in] double Distance, 
            [out,retval] VARIANT* pOffsetCurves
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Elevation(
            [out,retval] double* Elevation
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Elevation(
            [in] double Elevation
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Type(
            [out,retval] int* Type
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Type(
            [in] <enum> AcPolylineType Type
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Closed(
            [out,retval] bool* fClose
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Closed(
            [in] bool fClose
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinetypeGeneration(
            [out,retval] bool* bLinetypeGen
         );

    23. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinetypeGeneration(
            [in] bool bLinetypeGen
         );

    24. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Area(
            [out,retval] double* Area
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Length(
            [out,retval] double* Length
         );


==================================================================================

IDispatch IAcadRay;
IID = {B8F2DD54-0AFB-4001-8E90-EF7CAEAF8514}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BasePoint(
            [out,retval] VARIANT* BasePoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BasePoint(
            [in] VARIANT BasePoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SecondPoint(
            [out,retval] VARIANT* SecondPoint
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SecondPoint(
            [in] VARIANT SecondPoint
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DirectionVector(
            [out,retval] VARIANT* dirVector
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DirectionVector(
            [in] VARIANT dirVector
         );


==================================================================================

IDispatch IAcadShape;
IID = {E2197D25-7B8A-46B6-AD9E-78902BF70F02}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* insPoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT insPoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* scalFactor
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] <alias> ACAD_NOUNITS scalFactor
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [out,retval] <alias> ACAD_ANGLE* obliAngle
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [in] <alias> ACAD_ANGLE obliAngle
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );


==================================================================================

IDispatch IAcadSolid;
IID = {40B4259C-CD6F-48F5-A65D-44920171695C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* corners
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT corners
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );


==================================================================================

IDispatch IAcadSpline;
IID = {48F16A9E-62A2-4F18-B567-23E7FFA700DF}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumberOfControlPoints(
            [out,retval] int* numCtrlPoints
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ControlPoints(
            [out,retval] VARIANT* controlPoint
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ControlPoints(
            [in] VARIANT controlPoint
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumberOfFitPoints(
            [out,retval] int* numFitPoints
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FitPoints(
            [out,retval] VARIANT* fitPoint
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FitPoints(
            [in] VARIANT fitPoint
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Degree(
            [out,retval] int* Degree
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Closed(
            [out,retval] bool* fClose
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsPlanar(
            [out,retval] bool* fPlanar
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsRational(
            [out,retval] bool* fRational
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsPeriodic(
            [out,retval] bool* fPeriodic
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartTangent(
            [out,retval] VARIANT* StartTangent
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StartTangent(
            [in] VARIANT StartTangent
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndTangent(
            [out,retval] VARIANT* EndTangent
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndTangent(
            [in] VARIANT EndTangent
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FitTolerance(
            [out,retval] double* fitTol
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FitTolerance(
            [in] double fitTol
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Area(
            [out,retval] double* Area
         );

    19. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetControlPoint(
            [in] int Index, 
            [in] VARIANT controlPoint
         );

    20. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetControlPoint(
            [in] int Index, 
            [out,retval] VARIANT* controlPoint
         );

    21. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFitPoint(
            [in] int Index, 
            [in] VARIANT fitPoint
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFitPoint(
            [in] int Index, 
            [out,retval] VARIANT* fitPoint
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetWeight(
            [in] int Index, 
            [in] double weight
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetWeight(
            [in] int Index, 
            [out,retval] double* weight
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddFitPoint(
            [in] int Index, 
            [in] VARIANT fitPoint
         );

    26. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DeleteFitPoint(
            [in] int Index
         );

    27. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ElevateOrder(
            [in] int Order
         );

    28. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Offset(
            [in] double Distance, 
            [out,retval] VARIANT* pOffsetCurves
         );

    29. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT PurgeFitData(
         );

    30. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Reverse(
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Knots(
            [out,retval] VARIANT* KnotValues
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Knots(
            [in] VARIANT KnotValues
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Weights(
            [out,retval] VARIANT* WeightValues
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Weights(
            [in] VARIANT WeightValues
         );


==================================================================================

IDispatch IAcadText;
IID = {06D87DCB-C57E-4EB1-870D-00CE26961B8E}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextString(
            [out,retval] BSTR* bstrText
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextString(
            [in] BSTR bstrText
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* bstrName
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleName(
            [in] BSTR bstrName
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Alignment(
            [out,retval] int* align
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Alignment(
            [in] <enum> AcAlignment align
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorizontalAlignment(
            [out,retval] int* horizAlign
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorizontalAlignment(
            [in] <enum> AcHorizontalAlignment horizAlign
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VerticalAlignment(
            [out,retval] int* vertiAlign
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VerticalAlignment(
            [in] <enum> AcVerticalAlignment vertiAlign
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* scalFactor
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] <alias> ACAD_NOUNITS scalFactor
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [out,retval] <alias> ACAD_ANGLE* obliAngle
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [in] <alias> ACAD_ANGLE obliAngle
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextAlignmentPoint(
            [out,retval] VARIANT* alignPoint
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextAlignmentPoint(
            [in] VARIANT alignPoint
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* insPoint
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT insPoint
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextGenerationFlag(
            [out,retval] int* textGenFlag
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextGenerationFlag(
            [in] int textGenFlag
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UpsideDown(
            [out,retval] bool* UpsideDown
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UpsideDown(
            [in] bool UpsideDown
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Backward(
            [out,retval] bool* Backward
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Backward(
            [in] bool Backward
         );

    33. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT FieldCode(
            [out,retval] BSTR* bstrText
         );


==================================================================================

IDispatch IAcadTolerance;
IID = {FBD0E340-BFBB-494E-8B8E-FCE51B03CAB2}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DirectionVector(
            [out,retval] VARIANT* dirVector
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DirectionVector(
            [in] VARIANT dirVector
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* insPoint
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT insPoint
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* bstrName
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleName(
            [in] BSTR bstrName
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextColor(
            [out,retval] <alias> ACAD_COLOR* color
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextColor(
            [in] <alias> ACAD_COLOR color
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextString(
            [out,retval] BSTR* bstrText
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextString(
            [in] BSTR bstrText
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextStyle(
            [out,retval] BSTR* style
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextStyle(
            [in] BSTR style
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextHeight(
            [out,retval] double* Height
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextHeight(
            [in] double Height
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* factor
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] <alias> ACAD_NOUNITS factor
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );


==================================================================================

IDispatch IAcadTrace;
IID = {534D33FB-13BF-46E8-B3F1-B8AFA21E4156}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* corners
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT corners
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );


==================================================================================

IDispatch IAcadXline;
IID = {103A15FD-2195-4701-B6FF-A0F3355DB25C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BasePoint(
            [out,retval] VARIANT* BasePoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BasePoint(
            [in] VARIANT BasePoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SecondPoint(
            [out,retval] VARIANT* SecondPoint
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SecondPoint(
            [in] VARIANT SecondPoint
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DirectionVector(
            [out,retval] VARIANT* dirVector
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DirectionVector(
            [in] VARIANT dirVector
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Offset(
            [in] double Distance, 
            [out,retval] VARIANT* pOffsetCurves
         );


==================================================================================

IDispatch IAcadBlockReference;
IID = {6D162051-7D3B-43E4-9955-99E780DD2607}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* insPoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT insPoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT XScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* ScaleFactor
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT XScaleFactor(
            [in] <alias> ACAD_NOUNITS ScaleFactor
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT YScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* ScaleFactor
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT YScaleFactor(
            [in] <alias> ACAD_NOUNITS ScaleFactor
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ZScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* ScaleFactor
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ZScaleFactor(
            [in] <alias> ACAD_NOUNITS ScaleFactor
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Explode(
            [out,retval] VARIANT* pArrayObjs
         );

    16. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAttributes(
            [out,retval] VARIANT* pAttrObjs
         );

    17. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetConstantAttributes(
            [out,retval] VARIANT* pAttrObjs
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HasAttributes(
            [out,retval] bool* bHas
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EffectiveName(
            [out,retval] BSTR* EffectiveName
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsDynamicBlock(
            [out,retval] bool* pDynamicBlock
         );

    21. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetDynamicBlockProperties(
            [out,retval] VARIANT* dynamicPropertyArray
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ResetBlock(
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ConvertToAnonymousBlock(
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ConvertToStaticBlock(
            [in] BSTR newBlockName
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT XEffectiveScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* ScaleFactor
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT XEffectiveScaleFactor(
            [in] <alias> ACAD_NOUNITS ScaleFactor
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT YEffectiveScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* ScaleFactor
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT YEffectiveScaleFactor(
            [in] <alias> ACAD_NOUNITS ScaleFactor
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ZEffectiveScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* ScaleFactor
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ZEffectiveScaleFactor(
            [in] <alias> ACAD_NOUNITS ScaleFactor
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsUnits(
            [out,retval] BSTR* Units
         );

    32. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsUnitsFactor(
            [out,retval] double* factor
         );


==================================================================================

IDispatch IAcadHatch;
IID = {0CB3D5D2-CBB4-4A3E-B572-808154FC9BAE}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumberOfLoops(
            [out,retval] int* numLoops
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PatternType(
            [out,retval] int* PatternType
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PatternName(
            [out,retval] BSTR* bstrName
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PatternAngle(
            [out,retval] <alias> ACAD_ANGLE* PatternAngle
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PatternAngle(
            [in] <alias> ACAD_ANGLE PatternAngle
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PatternScale(
            [out,retval] <alias> ACAD_NOUNITS* PatternScale
         );

    9. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PatternScale(
            [in] <alias> ACAD_NOUNITS PatternScale
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PatternSpace(
            [out,retval] double* PatternSpace
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PatternSpace(
            [in] double PatternSpace
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ISOPenWidth(
            [out,retval] int* penWidth
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ISOPenWidth(
            [in] <enum> AcISOPenWidth penWidth
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PatternDouble(
            [out,retval] bool* bDouble
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PatternDouble(
            [in] bool bDouble
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Elevation(
            [out,retval] double* Elevation
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Elevation(
            [in] double Elevation
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AssociativeHatch(
            [out,retval] bool* fAssoc
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AssociativeHatch(
            [in] bool fAssoc
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HatchStyle(
            [out,retval] int* HatchStyle
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HatchStyle(
            [in] <enum> AcHatchStyle HatchStyle
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetPattern(
            [in] int PatternType, 
            [in] BSTR PatternName
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AppendOuterLoop(
            [in] VARIANT ObjectArray
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AppendInnerLoop(
            [in] VARIANT ObjectArray
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT InsertLoopAt(
            [in] int Index, 
            [in] <enum> AcLoopType LoopType, 
            [in] VARIANT ObjectArray
         );

    26. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetLoopAt(
            [in] int Index, 
            [out] VARIANT* ObjectArray
         );

    27. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Evaluate(
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GradientColor1(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    29. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GradientColor1(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    30. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GradientColor2(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    31. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GradientColor2(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    32. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GradientAngle(
            [out,retval] <alias> ACAD_ANGLE* GradientAngle
         );

    33. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GradientAngle(
            [in] <alias> ACAD_ANGLE GradientAngle
         );

    34. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GradientCentered(
            [out,retval] bool* fCentered
         );

    35. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GradientCentered(
            [in] bool fCentered
         );

    36. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GradientName(
            [out,retval] BSTR* bstrName
         );

    37. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GradientName(
            [in] BSTR bstrName
         );

    38. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HatchObjectType(
            [out,retval] int* hatchType
         );

    39. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HatchObjectType(
            [in] <enum> AcHatchObjectType hatchType
         );

    40. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Area(
            [out,retval] double* Area
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Origin(
            [out,retval] VARIANT* Origin
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Origin(
            [in] VARIANT Origin
         );


==================================================================================

IDispatch IAcadRasterImage;
IID = {B82704FD-2E41-48FF-8523-5888B46B1D26}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Brightness(
            [out,retval] int* Brightness
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Brightness(
            [in] int Brightness
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Contrast(
            [out,retval] int* Contrast
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Contrast(
            [in] int Contrast
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fade(
            [out,retval] int* Fade
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fade(
            [in] int Fade
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Origin(
            [out,retval] VARIANT* Origin
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Origin(
            [in] VARIANT Origin
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ImageWidth(
            [out,retval] double* Width
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ImageWidth(
            [in] double Width
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ImageHeight(
            [out,retval] double* Height
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ImageHeight(
            [in] double Height
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* Name
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR Name
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ImageFile(
            [in] BSTR Name
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ImageFile(
            [out,retval] BSTR* imageFileName
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ImageVisibility(
            [out,retval] bool* fVisible
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ImageVisibility(
            [in] bool fVisible
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ClippingEnabled(
            [out,retval] bool* kClip
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ClippingEnabled(
            [in] bool kClip
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Transparency(
            [out,retval] bool* bTransp
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Transparency(
            [in] bool bTransp
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ClipBoundary(
            [in] VARIANT boundry
         );

    26. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* pixelHeight
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] double* pixelWidth
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowRotation(
            [out,retval] bool* bShow
         );

    29. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowRotation(
            [in] bool bShow
         );

    30. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* ScaleFactor
         );

    31. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] <alias> ACAD_NOUNITS ScaleFactor
         );


==================================================================================

IDispatch IAcadLine;
IID = {DF524ECB-D59E-464B-89B6-D32822282778}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartPoint(
            [out,retval] VARIANT* StartPoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StartPoint(
            [in] VARIANT StartPoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndPoint(
            [out,retval] VARIANT* EndPoint
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndPoint(
            [in] VARIANT EndPoint
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Offset(
            [in] double Distance, 
            [out,retval] VARIANT* pOffsetCurves
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Delta(
            [out,retval] VARIANT* Delta
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Length(
            [out,retval] double* Length
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Angle(
            [out,retval] <alias> ACAD_ANGLE* Angle
         );


==================================================================================

IDispatch IAcadLayout;
IID = {C6F55F5A-33AF-4B5F-9949-86C6AEEF1834}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Block(
            [out,retval] <IDispatch> IAcadBlock** pBlock
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TabOrder(
            [out,retval] int* pOrder
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TabOrder(
            [in] int pOrder
         );


==================================================================================

IDispatch IAcadPlotConfiguration;
IID = {C0FFEC74-ADD8-46C7-A6D6-E2B1D3FA12AC}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* pName
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR pName
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ConfigName(
            [out,retval] BSTR* pName
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ConfigName(
            [in] BSTR pName
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CanonicalMediaName(
            [out,retval] BSTR* pName
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CanonicalMediaName(
            [in] BSTR pName
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PaperUnits(
            [out,retval] int* pPaperUnits
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PaperUnits(
            [in] <enum> AcPlotPaperUnits pPaperUnits
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotViewportBorders(
            [out,retval] bool* pViewportBorders
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotViewportBorders(
            [in] bool pViewportBorders
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowPlotStyles(
            [out,retval] bool* pStyles
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowPlotStyles(
            [in] bool pStyles
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotRotation(
            [out,retval] int* pRotation
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotRotation(
            [in] <enum> AcPlotRotation pRotation
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CenterPlot(
            [out,retval] bool* pCentered
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CenterPlot(
            [in] bool pCentered
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotHidden(
            [out,retval] bool* pHidden
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotHidden(
            [in] bool pHidden
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotType(
            [out,retval] int* pType
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotType(
            [in] <enum> AcPlotType pType
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ViewToPlot(
            [out,retval] BSTR* pName
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ViewToPlot(
            [in] BSTR pName
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UseStandardScale(
            [out,retval] bool* pUseStdScale
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UseStandardScale(
            [in] bool pUseStdScale
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StandardScale(
            [out,retval] int* pStdScale
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StandardScale(
            [in] <enum> AcPlotScale pStdScale
         );

    27. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCustomScale(
            [out] double* Numerator, 
            [out] double* Denominator
         );

    28. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCustomScale(
            [in] double Numerator, 
            [in] double Denominator
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleLineweights(
            [out,retval] bool* pScale
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleLineweights(
            [in] bool pScale
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotWithLineweights(
            [out,retval] bool* pPlot
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotWithLineweights(
            [in] bool pPlot
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotViewportsFirst(
            [out,retval] bool* pViewportsFirst
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotViewportsFirst(
            [in] bool pViewportsFirst
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleSheet(
            [out,retval] BSTR* pName
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleSheet(
            [in] BSTR pName
         );

    37. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetPaperMargins(
            [out] VARIANT* LowerLeft, 
            [out] VARIANT* UpperRight
         );

    38. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetPaperSize(
            [out] double* Width, 
            [out] double* Height
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotOrigin(
            [out,retval] VARIANT* pOrigin
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotOrigin(
            [in] VARIANT pOrigin
         );

    41. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetWindowToPlot(
            [out] VARIANT* LowerLeft, 
            [out] VARIANT* UpperRight
         );

    42. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetWindowToPlot(
            [in] VARIANT LowerLeft, 
            [in] VARIANT UpperRight
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotWithPlotStyles(
            [out,retval] bool* pStyles
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotWithPlotStyles(
            [in] bool pStyles
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ModelType(
            [out,retval] bool* pType
         );

    46. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CopyFrom(
            [in] <IDispatch> IAcadPlotConfiguration* pPlotConfig
         );

    47. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCanonicalMediaNames(
            [out,retval] VARIANT* pNames
         );

    48. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetPlotDeviceNames(
            [out,retval] VARIANT* pNames
         );

    49. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetPlotStyleTableNames(
            [out,retval] VARIANT* pNames
         );

    50. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RefreshPlotDeviceInfo(
         );

    51. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetLocaleMediaName(
            [in] BSTR Name, 
            [out,retval] BSTR* pLocalName
         );


==================================================================================

IDispatch IAcadMInsertBlock;
IID = {0D86F5A2-1749-4E36-9623-73D009A852C2}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Columns(
            [in] int 
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Columns(
            [out,retval] int* NumColumns
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ColumnSpacing(
            [in] double NumColumns
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ColumnSpacing(
            [out,retval] double* Spacing
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rows(
            [in] int Spacing
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rows(
            [out,retval] int* NumRows
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RowSpacing(
            [in] double NumRows
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RowSpacing(
            [out,retval] double* Spacing
         );


==================================================================================

IDispatch IAcadPolyfaceMesh;
IID = {C8139715-3C0E-4C5A-80BE-33E093700775}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT 
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* Vertices
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumberOfVertices(
            [out,retval] int* NumVertices
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumberOfFaces(
            [out,retval] int* NumFaces
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Faces(
            [in] VARIANT NumFaces
         );


==================================================================================

IDispatch IAcadMLine;
IID = {665BACBB-D863-4C2A-A8E3-F9C5C03CDC08}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* Name
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* Vertices
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT Vertices
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Justification(
            [out,retval] int* Justification
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Justification(
            [in] <enum> AcMLineJustification Justification
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MLineScale(
            [out,retval] double* scale
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MLineScale(
            [in] double scale
         );


==================================================================================

IDispatch IAcadDim3PointAngular;
IID = {F96FAC80-084D-4DAF-84B5-F14F1F6605BA}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1EndPoint(
            [out,retval] VARIANT* xLine1Point
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1EndPoint(
            [in] VARIANT xLine1Point
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2EndPoint(
            [out,retval] VARIANT* xLine2Point
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2EndPoint(
            [in] VARIANT xLine2Point
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AngleVertex(
            [out,retval] VARIANT* AngleVertex
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AngleVertex(
            [in] VARIANT AngleVertex
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextPrecision(
            [out,retval] int* AngleVertex
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextPrecision(
            [in] <enum> AcDimPrecision AngleVertex
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AngleFormat(
            [out,retval] int* format
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AngleFormat(
            [in] <enum> AcAngleUnits format
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [out,retval] double* extend
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [in] double extend
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fit(
            [out,retval] int* fittype
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fit(
            [in] <enum> AcDimFit fittype
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [out,retval] int* Type
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [in] <enum> AcDimHorizontalJustification Type
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* lweight
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [in] <alias> ACAD_LWEIGHT lweight
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [out,retval] bool* bSuppress
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [in] bool bSuppress
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [out,retval] bool* bSuppress
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [in] bool bSuppress
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [out,retval] bool* bSuppress
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [in] bool bSuppress
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [out,retval] bool* bSuppress
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [in] bool bSuppress
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLineInside(
            [out,retval] bool* bInside
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLineInside(
            [in] bool bInside
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [out,retval] bool* bInside
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [in] bool bInside
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInside(
            [out,retval] bool* bInside
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInside(
            [in] bool bInside
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForceLineInside(
            [out,retval] bool* bInside
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForceLineInside(
            [in] bool bInside
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [out,retval] bool* bInside
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [in] bool bInside
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [out,retval] double* Offset
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [in] double Offset
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* weight
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [in] <alias> ACAD_LWEIGHT weight
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [out,retval] int* Type
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [in] <enum> AcDimArrowheadType Type
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [out,retval] int* Type
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [in] <enum> AcDimArrowheadType Type
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Measurement(
            [out,retval] <alias> ACAD_ANGLE* bVal
         );

    52. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [out,retval] BSTR* BlockName
         );

    53. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [in] BSTR BlockName
         );

    54. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [out,retval] BSTR* BlockName
         );

    55. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [in] BSTR BlockName
         );

    56. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [out,retval] BSTR* Linetype
         );

    57. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [in] BSTR Linetype
         );

    58. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [out,retval] BSTR* Linetype
         );

    59. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [in] BSTR Linetype
         );

    60. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [out,retval] BSTR* Linetype
         );

    61. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [in] BSTR Linetype
         );

    62. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [out,retval] bool* bFixedLen
         );

    63. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [in] bool bFixedLen
         );

    64. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [out,retval] double* FixedLen
         );

    65. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [in] double FixedLen
         );

    66. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrForm(
            [out,retval] bool* bIsDynamic
         );

    67. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrForm(
            [in] bool bIsDynamic
         );

    68. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrReference(
            [out,retval] bool* bIsReference
         );

    69. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrReference(
            [in] bool bIsReference
         );

    70. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrName(
            [out,retval] BSTR* bstrName
         );

    71. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrName(
            [in] BSTR bstrName
         );

    72. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [out,retval] BSTR* bstrExpression
         );

    73. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrExpression(
            [in] BSTR bstrExpression
         );

    74. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrValue(
            [out,retval] BSTR* Value
         );

    75. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrValue(
            [in] BSTR Value
         );

    76. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [out,retval] BSTR* bstrDescription
         );

    77. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimConstrDesc(
            [in] BSTR bstrDescription
         );


==================================================================================

IDispatch IAcadExternalReference;
IID = {374AF9E8-2B30-4F34-9BE0-0E60DFF1ECF5}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Path(
            [out,retval] BSTR* bstrName
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Path(
            [in] BSTR bstrName
         );


==================================================================================

IDispatch IAcadTable;
IID = {12CC3C8D-AE9E-4DFE-B985-C551858458AA}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* bstrName
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleName(
            [in] BSTR bstrName
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rows(
            [out,retval] int* pRows
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rows(
            [in] int pRows
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Columns(
            [out,retval] int* pColumns
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Columns(
            [in] int pColumns
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FlowDirection(
            [out,retval] int* pFlow
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FlowDirection(
            [in] <enum> AcTableDirection pFlow
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] double* pWidth
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] double pWidth
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* pHeight
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double pHeight
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VertCellMargin(
            [out,retval] double* pGap
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VertCellMargin(
            [in] double pGap
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorzCellMargin(
            [out,retval] double* pGap
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorzCellMargin(
            [in] double pGap
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* insPoint
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT insPoint
         );

    19. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetColumnWidth(
            [in] int col, 
            [out,retval] double* pWidth
         );

    20. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetColumnWidth(
            [in] int col, 
            [in] double Width
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ColumnWidth(
            [in] double Width
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetRowHeight(
            [in] int row, 
            [out,retval] double* pHeight
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetRowHeight(
            [in] int row, 
            [in] double Height
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RowHeight(
            [in] double Height
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetMinimumColumnWidth(
            [in] int col, 
            [out,retval] double* pWidth
         );

    26. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetMinimumRowHeight(
            [in] int row, 
            [out,retval] double* pHeight
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MinimumTableWidth(
            [out,retval] double* pWidth
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MinimumTableHeight(
            [out,retval] double* pHeight
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Direction(
            [out,retval] VARIANT* DirectionVector
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Direction(
            [in] VARIANT DirectionVector
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TitleSuppressed(
            [out,retval] bool* bValue
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TitleSuppressed(
            [in] bool bValue
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HeaderSuppressed(
            [out,retval] bool* bValue
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HeaderSuppressed(
            [in] bool bValue
         );

    35. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAlignment(
            [in] <enum> AcRowType rowType, 
            [out,retval] int* pCellAlignment
         );

    36. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetAlignment(
            [in] int rowTypes, 
            [in] <enum> AcCellAlignment cellAlignment
         );

    37. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBackgroundColorNone(
            [in] <enum> AcRowType rowType, 
            [out,retval] bool* bValue
         );

    38. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBackgroundColorNone(
            [in] int rowTypes, 
            [in] bool* bValue
         );

    39. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBackgroundColor(
            [in] <enum> AcRowType rowType, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    40. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBackgroundColor(
            [in] int rowTypes, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    41. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetContentColor(
            [in] <enum> AcRowType rowType, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    42. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetContentColor(
            [in] int rowTypes, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    43. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextStyle(
            [in] <enum> AcRowType rowType, 
            [out,retval] BSTR* bstrName
         );

    44. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextStyle(
            [in] int rowTypes, 
            [in] BSTR bstrName
         );

    45. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextHeight(
            [in] <enum> AcRowType rowType, 
            [out,retval] double* pTextHeight
         );

    46. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextHeight(
            [in] int rowTypes, 
            [in] double TextHeight
         );

    47. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridLineWeight(
            [in] <enum> AcGridLineType gridLineType, 
            [in] <enum> AcRowType rowType, 
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    48. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridLineWeight(
            [in] int gridLineTypes, 
            [in] int rowTypes, 
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    49. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridColor(
            [in] <enum> AcGridLineType gridLineType, 
            [in] <enum> AcRowType rowType, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    50. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridColor(
            [in] int gridLineTypes, 
            [in] int rowTypes, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    51. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridVisibility(
            [in] <enum> AcGridLineType gridLineType, 
            [in] <enum> AcRowType rowType, 
            [out,retval] bool* bValue
         );

    52. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridVisibility(
            [in] int gridLineTypes, 
            [in] int rowTypes, 
            [in] bool bValue
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TableStyleOverrides(
            [out,retval] VARIANT* pIntArray
         );

    54. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ClearTableStyleOverrides(
            [in] int flag
         );

    55. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellType(
            [in] int row, 
            [in] int col, 
            [out,retval] int* pCellType
         );

    56. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellType(
            [in] int row, 
            [in] int col, 
            [in] <enum> AcCellType CellType
         );

    57. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellExtents(
            [in] int row, 
            [in] int col, 
            [in] bool bOuterCell, 
            [out,retval] VARIANT* pPts
         );

    58. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAttachmentPoint(
            [in] int row, 
            [in] int col, 
            [out,retval] VARIANT* pAttachmentPoint
         );

    59. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellAlignment(
            [in] int row, 
            [in] int col, 
            [out,retval] int* pCellAlignment
         );

    60. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellAlignment(
            [in] int row, 
            [in] int col, 
            [in] <enum> AcCellAlignment cellAlignment
         );

    61. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellBackgroundColorNone(
            [in] int row, 
            [in] int col, 
            [out,retval] bool* bValue
         );

    62. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellBackgroundColorNone(
            [in] int row, 
            [in] int col, 
            [in] bool* bValue
         );

    63. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellBackgroundColor(
            [in] int row, 
            [in] int col, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    64. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellBackgroundColor(
            [in] int row, 
            [in] int col, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    65. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellContentColor(
            [in] int row, 
            [in] int col, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    66. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellContentColor(
            [in] int row, 
            [in] int col, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    67. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellStyleOverrides(
            [in] int row, 
            [in] int col, 
            [out,retval] VARIANT* pIntArray
         );

    68. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DeleteCellContent(
            [in] int row, 
            [in] int col
         );

    69. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetRowType(
            [in] int row, 
            [out,retval] int* pRowType
         );

    70. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetText(
            [in] int row, 
            [in] int col, 
            [out,retval] BSTR* pStr
         );

    71. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetText(
            [in] int row, 
            [in] int col, 
            [in] BSTR pStr
         );

    72. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellTextStyle(
            [in] int row, 
            [in] int col, 
            [out,retval] BSTR* bstrName
         );

    73. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellTextStyle(
            [in] int row, 
            [in] int col, 
            [in] BSTR bstrName
         );

    74. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellTextHeight(
            [in] int row, 
            [in] int col, 
            [out,retval] double* pTextHeight
         );

    75. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellTextHeight(
            [in] int row, 
            [in] int col, 
            [in] double TextHeight
         );

    76. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextRotation(
            [in] int row, 
            [in] int col, 
            [out,retval] int* TextRotation
         );

    77. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextRotation(
            [in] int row, 
            [in] int col, 
            [in] <enum> AcRotationAngle TextRotation
         );

    78. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAutoScale(
            [in] int row, 
            [in] int col, 
            [out,retval] bool* bValue
         );

    79. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetAutoScale(
            [in] int row, 
            [in] int col, 
            [in] bool* bValue
         );

    80. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockTableRecordId(
            [in] int row, 
            [in] int col, 
            [out,retval] <alias> LONG_PTR* blkId
         );

    81. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockTableRecordId(
            [in] int row, 
            [in] int col, 
            [in] <alias> LONG_PTR blkId, 
            [in] bool bAutoFit
         );

    82. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockScale(
            [in] int row, 
            [in] int col, 
            [out,retval] double* blkScale
         );

    83. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockScale(
            [in] int row, 
            [in] int col, 
            [in] double blkScale
         );

    84. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockRotation(
            [in] int row, 
            [in] int col, 
            [out,retval] double* blkRotation
         );

    85. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockRotation(
            [in] int row, 
            [in] int col, 
            [in] double blkRotation
         );

    86. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockAttributeValue(
            [in] int row, 
            [in] int col, 
            [in] <alias> LONG_PTR attdefId, 
            [out,retval] BSTR* bstrValue
         );

    87. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockAttributeValue(
            [in] int row, 
            [in] int col, 
            [in] <alias> LONG_PTR attdefId, 
            [in] BSTR bstrValue
         );

    88. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellGridLineWeight(
            [in] int row, 
            [in] int col, 
            [in] <enum> AcCellEdgeMask edge, 
            [out,retval] <alias> ACAD_LWEIGHT* plineweight
         );

    89. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellGridLineWeight(
            [in] int row, 
            [in] int col, 
            [in] int edges, 
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    90. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellGridColor(
            [in] int row, 
            [in] int col, 
            [in] <enum> AcCellEdgeMask edge, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    91. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellGridColor(
            [in] int row, 
            [in] int col, 
            [in] int edges, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    92. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellGridVisibility(
            [in] int row, 
            [in] int col, 
            [in] <enum> AcCellEdgeMask edge, 
            [out,retval] bool* bValue
         );

    93. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellGridVisibility(
            [in] int row, 
            [in] int col, 
            [in] int edges, 
            [in] bool bValue
         );

    94. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT InsertColumns(
            [in] int col, 
            [in] double Width, 
            [in] int cols
         );

    95. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DeleteColumns(
            [in] int col, 
            [in] int cols
         );

    96. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT InsertRows(
            [in] int row, 
            [in] double Height, 
            [in] int Rows
         );

    97. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DeleteRows(
            [in] int row, 
            [in] int Rows
         );

    98. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT MergeCells(
            [in] int minRow, 
            [in] int maxRow, 
            [in] int minCol, 
            [in] int maxCol
         );

    99. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT UnmergeCells(
            [in] int minRow, 
            [in] int maxRow, 
            [in] int minCol, 
            [in] int maxCol
         );

    100. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT IsMergedCell(
            [in] int row, 
            [in] int col, 
            [out] int* minRow, 
            [out] int* maxRow, 
            [out] int* minCol, 
            [out] int* maxCol, 
            [out,retval] bool* pbValue
         );

    101. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFieldId(
            [in] int row, 
            [in] int col, 
            [out,retval] <alias> LONG_PTR* fieldId
         );

    102. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFieldId(
            [in] int row, 
            [in] int col, 
            [in] <alias> LONG_PTR fieldId
         );

    103. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GenerateLayout(
         );

    104. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RecomputeTableBlock(
            [in] bool bForceUpdate
         );

    105. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT HitTest(
            [in] VARIANT wpt, 
            [in] VARIANT wviewVec, 
            [out] int* resultRowIndex, 
            [out] int* resultColumnIndex, 
            [out,retval] bool* bReturn
         );

    106. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Select(
            [in] VARIANT wpt, 
            [in] VARIANT wvwVec, 
            [in] VARIANT wvwxVec, 
            [in] double wxaper, 
            [in] double wyaper, 
            [in] bool allowOutside, 
            [out] int* resultRowIndex, 
            [out] int* resultColumnIndex
         );

    107. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SelectSubRegion(
            [in] VARIANT wpt1, 
            [in] VARIANT wpt2, 
            [in] VARIANT wvwVec, 
            [in] VARIANT wvwxVec, 
            [in] <enum> AcSelectType seltype, 
            [in] bool bIncludeCurrentSelection, 
            [out] int* rowMin, 
            [out] int* rowMax, 
            [out] int* colMin, 
            [out] int* colMax
         );

    108. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ReselectSubRegion(
         );

    109. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetSubSelection(
            [out] int* rowMin, 
            [out] int* rowMax, 
            [out] int* colMin, 
            [out] int* colMax
         );

    110. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetSubSelection(
            [in] int rowMin, 
            [in] int rowMax, 
            [in] int colMin, 
            [in] int colMax
         );

    111. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ClearSubSelection(
         );

    112. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HasSubSelection(
            [out,retval] bool* pbValue
         );

    113. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RegenerateTableSuppressed(
            [out,retval] bool* bValue
         );

    114. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RegenerateTableSuppressed(
            [in] bool bValue
         );

    115. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetDataType(
            [in] <enum> AcRowType rowType, 
            [out] int* pDataType, 
            [out] int* pUnitType
         );

    116. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetDataType(
            [in] int rowTypes, 
            [in] <enum> AcValueDataType dataType, 
            [in] <enum> AcValueUnitType unitType
         );

    117. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFormat(
            [in] <enum> AcRowType rowType, 
            [out,retval] BSTR* pFormat
         );

    118. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFormat(
            [in] int rowTypes, 
             BSTR pFormat
         );

    119. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT FormatValue(
            [in] int row, 
            [in] int col, 
             <enum> AcFormatOption nOption, 
             BSTR* pVal
         );

    120. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellDataType(
            [in] int row, 
            [in] int col, 
            [out] int* pDataType, 
            [out] int* pUnitType
         );

    121. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellDataType(
            [in] int row, 
            [in] int col, 
             <enum> AcValueDataType dataType, 
             <enum> AcValueUnitType unitType
         );

    122. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellFormat(
            [in] int row, 
            [in] int col, 
            [out,retval] BSTR* pFormat
         );

    123. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellFormat(
            [in] int row, 
            [in] int col, 
             BSTR pFormat
         );

    124. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellValue(
            [in] int row, 
            [in] int col, 
            [out,retval] VARIANT* pVal
         );

    125. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellValue(
            [in] int row, 
            [in] int col, 
             VARIANT val
         );

    126. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellValueFromText(
            [in] int row, 
            [in] int col, 
            [in] BSTR val, 
            [in] <enum> AcParseOption nOption
         );

    127. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ResetCellValue(
            [in] int row, 
            [in] int col
         );

    128. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockTableRecordId32(
            [in] int row, 
            [in] int col, 
            [out,retval] int* blkId
         );

    129. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockTableRecordId32(
            [in] int row, 
            [in] int col, 
            [in] int blkId, 
            [in] bool bAutoFit
         );

    130. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockAttributeValue32(
            [in] int row, 
            [in] int col, 
            [in] int attdefId, 
            [out,retval] BSTR* bstrValue
         );

    131. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockAttributeValue32(
            [in] int row, 
            [in] int col, 
            [in] int attdefId, 
            [in] BSTR bstrValue
         );

    132. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFieldId32(
            [in] int row, 
            [in] int col, 
            [out,retval] int* fieldId
         );

    133. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFieldId32(
            [in] int row, 
            [in] int col, 
            [in] int fieldId
         );

    134. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT IsEmpty(
            [in] int nRow, 
            [in] int nCol, 
            [out,retval] bool* bValue
         );

    135. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CreateContent(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nIndex, 
            [out,retval] int* pInt
         );

    136. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT MoveContent(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nFromIndex, 
            [in] int nToIndex
         );

    137. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DeleteContent(
            [in] int nRow, 
            [in] int nCol
         );

    138. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetValue(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] VARIANT* pAcValue
         );

    139. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetValue(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] VARIANT acValue
         );

    140. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetValueFromText(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] BSTR szText, 
            [in] <enum> AcParseOption nOption
         );

    141. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetDataFormat(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] BSTR* pValue
         );

    142. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetDataFormat(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] BSTR szFormat
         );

    143. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextString(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] BSTR* pTextString
         );

    144. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextString(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] BSTR Text
         );

    145. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFieldId2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] <alias> LONG_PTR* pAcDbObjectId
         );

    146. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFieldId2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] <alias> LONG_PTR acDbObjectId, 
            [in] <enum> AcCellOption nflag
         );

    147. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockTableRecordId2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] <alias> LONG_PTR* pAcDbObjectId
         );

    148. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockTableRecordId2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] <alias> LONG_PTR blkId, 
            [in] bool autoFit
         );

    149. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockAttributeValue2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] <alias> LONG_PTR blkId, 
            [out,retval] BSTR* Value
         );

    150. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockAttributeValue2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] <alias> LONG_PTR blkId, 
            [in] BSTR Value
         );

    151. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCustomData(
            [in] int nRow, 
            [in] int nCol, 
            [in] BSTR szKey, 
            [out] VARIANT* pData
         );

    152. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCustomData(
            [in] int nRow, 
            [in] int nCol, 
            [in] BSTR szKey, 
            [in] VARIANT data
         );

    153. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellStyle(
            [in] int nRow, 
            [in] int nCol, 
            [out,retval] BSTR* pCellStyle
         );

    154. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellStyle(
            [in] int nRow, 
            [in] int nCol, 
            [in] BSTR szCellStyle
         );

    155. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetContentColor2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    156. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetContentColor2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    157. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetDataType2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out] int* pDataType, 
            [out] int* pUnitType
         );

    158. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetDataType2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] <enum> AcValueDataType dataType, 
            [in] <enum> AcValueUnitType unitType
         );

    159. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextStyle2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] BSTR* pbstrStyleName
         );

    160. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextStyle2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] BSTR bstrStyleName
         );

    161. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextHeight2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] double* pHeight
         );

    162. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextHeight2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] double Height
         );

    163. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetRotation(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] double* pValue
         );

    164. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetRotation(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] double Value
         );

    165. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAutoScale2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] bool* bAutoScale
         );

    166. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetAutoScale2(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] bool bAutoFit
         );

    167. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetScale(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] double* pScale
         );

    168. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetScale(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] double scale
         );

    169. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveAllOverrides(
            [in] int nRow, 
            [in] int nCol
         );

    170. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridLineWeight2(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [out,retval] <alias> ACAD_LWEIGHT* plineweight
         );

    171. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridLineWeight2(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    172. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridLinetype(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [out,retval] <alias> LONG_PTR* pacDbObjId
         );

    173. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridLinetype(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [in] <alias> LONG_PTR idLinetype
         );

    174. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridColor2(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    175. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridColor2(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    176. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridVisibility2(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [out,retval] bool* bVisible
         );

    177. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridVisibility2(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [in] bool bVisible
         );

    178. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridDoubleLineSpacing(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [out,retval] double* pValue
         );

    179. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridDoubleLineSpacing(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [in] double fSpacing
         );

    180. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EnableBreak(
            [in] bool fSpacing
         );

    181. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBreakHeight(
            [in] int nIndex, 
            [out,retval] double* pHeight
         );

    182. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBreakHeight(
            [in] int nIndex, 
            [in] double Height
         );

    183. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetContentType(
            [in] int nRow, 
            [in] int nCol, 
            [out,retval] int* pType
         );

    184. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetMargin(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcCellMargin nMargin, 
            [out,retval] double* pValue
         );

    185. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetMargin(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcCellMargin nMargins, 
            [in] double fMargin
         );

    186. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetContentLayout(
            [in] int row, 
            [in] int col, 
            [out,retval] int* pLayout
         );

    187. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetContentLayout(
            [in] int row, 
            [in] int col, 
            [in] <enum> AcCellContentLayout nLayout
         );

    188. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetOverride(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] int* pValue
         );

    189. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetOverride(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] <enum> AcCellProperty nProp
         );

    190. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridLineStyle(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [out,retval] int* pStyle
         );

    191. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridLineStyle(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineTypes, 
            [in] <enum> AcGridLineStyle nLineStyle
         );

    192. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT InsertRowsAndInherit(
            [in] int nIndex, 
            [in] int nInheritFrom, 
            [in] int nNumRows
         );

    193. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT InsertColumnsAndInherit(
            [in] int col, 
            [in] int nInheritFrom, 
            [in] int nNumCols
         );

    194. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetHasFormula(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] bool* bValue
         );

    195. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFormula(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] BSTR* pszFormula
         );

    196. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFormula(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] BSTR pszFormula
         );

    197. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT IsContentEditable(
            [in] int nRow, 
            [in] int nCol, 
            [out,retval] bool* bValue
         );

    198. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT IsFormatEditable(
            [in] int nRow, 
            [in] int nCol, 
            [out,retval] bool* bValue
         );

    199. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellState(
            [in] int nRow, 
            [in] int nCol, 
            [out,retval] int* pCellState
         );

    200. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellState(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcCellState nLock
         );

    201. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT EnableMergeAll(
            [in] int nRow, 
            [in] int nCol, 
            [in] bool bEnable
         );

    202. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT IsMergeAllEnabled(
            [in] int nRow, 
            [in] int nCol, 
            [out,retval] bool* bValue
         );

    203. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BreaksEnabled(
            [out,retval] bool* bEnabled
         );

    204. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BreaksEnabled(
            [in] bool bEnabled
         );

    205. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RepeatTopLabels(
            [out,retval] bool* bEnabled
         );

    206. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RepeatTopLabels(
            [in] bool bEnabled
         );

    207. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RepeatBottomLabels(
            [out,retval] bool* bEnabled
         );

    208. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RepeatBottomLabels(
            [in] bool bEnabled
         );

    209. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TableBreakFlowDirection(
            [out,retval] int* pDir
         );

    210. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TableBreakFlowDirection(
            [in] <enum> AcTableFlowDirection pDir
         );

    211. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AllowManualPositions(
            [out,retval] bool* bEnabled
         );

    212. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AllowManualPositions(
            [in] bool bEnabled
         );

    213. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AllowManualHeights(
            [out,retval] bool* bEnabled
         );

    214. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AllowManualHeights(
            [in] bool bEnabled
         );

    215. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TableBreakHeight(
            [out,retval] double* pHeight
         );

    216. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TableBreakHeight(
            [in] double pHeight
         );

    217. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BreakSpacing(
            [out,retval] double* pSpacing
         );

    218. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BreakSpacing(
            [in] double pSpacing
         );

    219. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetColumnName(
            [in] int nIndex, 
            [out,retval] BSTR* Name
         );

    220. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetColumnName(
            [in] int nIndex, 
            [in] BSTR Name
         );

    221. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetToolTip(
            [in] int nRow, 
            [in] int nCol, 
            [in] BSTR tip
         );

    222. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFieldId232(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] int* pAcDbObjectId
         );

    223. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFieldId232(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] int acDbObjectId, 
            [in] <enum> AcCellOption nflag
         );

    224. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockTableRecordId232(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [out,retval] int* pAcDbObjectId
         );

    225. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockTableRecordId232(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] int blkId, 
            [in] bool autoFit
         );

    226. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockAttributeValue232(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] int blkId, 
            [out,retval] BSTR* Value
         );

    227. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockAttributeValue232(
            [in] int nRow, 
            [in] int nCol, 
            [in] int nContent, 
            [in] int blkId, 
            [in] BSTR Value
         );

    228. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridLinetype32(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [out,retval] int* pacDbObjId
         );

    229. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridLinetype32(
            [in] int nRow, 
            [in] int nCol, 
            [in] <enum> AcGridLineType nGridLineType, 
            [in] int idLinetype
         );


==================================================================================

IDispatch IAcadDimArcLength;
IID = {71F92DD9-E2A9-4358-A501-E13CC89E4B64}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnits(
            [out,retval] bool* bAlternate
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnits(
            [in] bool bAlternate
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [out,retval] int* precision
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [in] <enum> AcDimPrecision precision
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [out,retval] <alias> ACAD_NOUNITS* scale
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [in] <alias> ACAD_NOUNITS scale
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [out,retval] double* Distance
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [in] double Distance
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [out,retval] int* Distance
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [in] <enum> AcDimPrecision Distance
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [out,retval] int* Units
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [in] <enum> AcDimUnits Units
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [out,retval] BSTR* prefix
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [in] BSTR prefix
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [out,retval] BSTR* prefix
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [in] BSTR prefix
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [out,retval] int* Prec
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [in] <enum> AcDimPrecision Prec
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineExtend(
            [out,retval] double* extend
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineExtend(
            [in] double extend
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [out,retval] double* extend
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineExtend(
            [in] double extend
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fit(
            [out,retval] int* fittype
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fit(
            [in] <enum> AcDimFit fittype
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FractionFormat(
            [out,retval] int* Type
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FractionFormat(
            [in] <enum> AcDimFractionType Type
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [out,retval] int* Type
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorizontalTextPosition(
            [in] <enum> AcDimHorizontalJustification Type
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* Type
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [in] <alias> ACAD_NOUNITS Type
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnitsFormat(
            [out,retval] int* format
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnitsFormat(
            [in] <enum> AcDimLUnits format
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* lweight
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineWeight(
            [in] <alias> ACAD_LWEIGHT lweight
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RoundDistance(
            [out,retval] double* Distance
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RoundDistance(
            [in] double Distance
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [out,retval] bool* bSuppress
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine1Suppress(
            [in] bool bSuppress
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [out,retval] bool* bSuppress
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLine2Suppress(
            [in] bool bSuppress
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [out,retval] bool* bSuppress
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Suppress(
            [in] bool bSuppress
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [out,retval] bool* bSuppress
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Suppress(
            [in] bool bSuppress
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLineInside(
            [out,retval] bool* bInside
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLineInside(
            [in] bool bInside
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [out,retval] bool* bInside
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [in] bool bInside
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInside(
            [out,retval] bool* bInside
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInside(
            [in] bool bInside
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForceLineInside(
            [out,retval] bool* bInside
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForceLineInside(
            [in] bool bInside
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [out,retval] bool* bInside
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [in] bool bInside
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [out,retval] double* Offset
         );

    60. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtensionLineOffset(
            [in] double Offset
         );

    61. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    62. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [in] bool bVal
         );

    63. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    64. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [in] bool bVal
         );

    65. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    66. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [in] bool bVal
         );

    67. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [out,retval] bool* bVal
         );

    68. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [in] bool bVal
         );

    69. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    70. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [in] bool bVal
         );

    71. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    72. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [in] bool bVal
         );

    73. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    74. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    75. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    76. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [in] bool bVal
         );

    77. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [out,retval] bool* bVal
         );

    78. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [in] bool bVal
         );

    79. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [out,retval] bool* bVal
         );

    80. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [in] bool bVal
         );

    81. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    82. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    83. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    84. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [in] bool bVal
         );

    85. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* weight
         );

    86. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [in] <alias> ACAD_LWEIGHT weight
         );

    87. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    88. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    89. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [out,retval] int* Type
         );

    90. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Type(
            [in] <enum> AcDimArrowheadType Type
         );

    91. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [out,retval] int* Type
         );

    92. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Type(
            [in] <enum> AcDimArrowheadType Type
         );

    93. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Measurement(
            [out,retval] double* bVal
         );

    94. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [out,retval] BSTR* BlockName
         );

    95. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead1Block(
            [in] BSTR BlockName
         );

    96. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [out,retval] BSTR* BlockName
         );

    97. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Arrowhead2Block(
            [in] BSTR BlockName
         );

    98. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArcPoint(
            [out,retval] VARIANT* pVal
         );

    99. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArcPoint(
            [in] VARIANT pVal
         );

    100. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Point(
            [out,retval] VARIANT* pVal
         );

    101. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Point(
            [in] VARIANT pVal
         );

    102. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Point(
            [out,retval] VARIANT* pVal
         );

    103. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Point(
            [in] VARIANT pVal
         );

    104. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CenterPoint(
            [out,retval] VARIANT* pVal
         );

    105. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CenterPoint(
            [in] VARIANT pVal
         );

    106. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Leader1Point(
            [out,retval] VARIANT* pVal
         );

    107. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Leader1Point(
            [in] VARIANT pVal
         );

    108. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Leader2Point(
            [out,retval] VARIANT* pVal
         );

    109. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Leader2Point(
            [in] VARIANT pVal
         );

    110. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsPartial(
            [out,retval] bool* pVal
         );

    111. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IsPartial(
            [in] bool pVal
         );

    112. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArcStartParam(
            [out,retval] double* pVal
         );

    113. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArcStartParam(
            [in] double pVal
         );

    114. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArcEndParam(
            [out,retval] double* pVal
         );

    115. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArcEndParam(
            [in] double pVal
         );

    116. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HasLeader(
            [out,retval] bool* pVal
         );

    117. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HasLeader(
            [in] bool pVal
         );

    118. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SymbolPosition(
            [out,retval] int* Position
         );

    119. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SymbolPosition(
            [in] <enum> AcDimArcLengthSymbol Position
         );

    120. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [out,retval] BSTR* Linetype
         );

    121. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [in] BSTR Linetype
         );

    122. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [out,retval] BSTR* Linetype
         );

    123. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine1Linetype(
            [in] BSTR Linetype
         );

    124. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [out,retval] BSTR* Linetype
         );

    125. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLine2Linetype(
            [in] BSTR Linetype
         );

    126. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [out,retval] bool* bFixedLen
         );

    127. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLenSuppress(
            [in] bool bFixedLen
         );

    128. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [out,retval] double* FixedLen
         );

    129. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ExtLineFixedLen(
            [in] double FixedLen
         );

    130. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SubUnitsSuffix(
            [out,retval] BSTR* suffix
         );

    131. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SubUnitsSuffix(
            [in] BSTR suffix
         );

    132. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SubUnitsFactor(
            [out,retval] double* factor
         );

    133. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SubUnitsFactor(
            [in] double factor
         );

    134. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSubUnitsSuffix(
            [out,retval] BSTR* suffix
         );

    135. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSubUnitsSuffix(
            [in] BSTR suffix
         );

    136. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSubUnitsFactor(
            [out,retval] double* factor
         );

    137. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSubUnitsFactor(
            [in] double factor
         );


==================================================================================

IDispatch IAcadDimRadialLarge;
IID = {7388AF9F-EC79-4C46-AD86-B59D46424A48}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnits(
            [out,retval] bool* bAlternate
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnits(
            [in] bool bAlternate
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [out,retval] int* precision
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsPrecision(
            [in] <enum> AcDimPrecision precision
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [out,retval] <alias> ACAD_NOUNITS* scale
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsScale(
            [in] <alias> ACAD_NOUNITS scale
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [out,retval] double* Distance
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltRoundDistance(
            [in] double Distance
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [out,retval] int* Distance
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTolerancePrecision(
            [in] <enum> AcDimPrecision Distance
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [out,retval] int* Units
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltUnitsFormat(
            [in] <enum> AcDimUnits Units
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [out,retval] BSTR* prefix
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextPrefix(
            [in] BSTR prefix
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [out,retval] BSTR* prefix
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTextSuffix(
            [in] BSTR prefix
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CenterType(
            [out,retval] int* Type
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CenterType(
            [in] <enum> AcDimCenterType Type
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CenterMarkSize(
            [out,retval] double* Type
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CenterMarkSize(
            [in] double Type
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [out,retval] <alias> ACAD_COLOR* Type
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineColor(
            [in] <alias> ACAD_COLOR Type
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [out,retval] int* Prec
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrimaryUnitsPrecision(
            [in] <enum> AcDimPrecision Prec
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FractionFormat(
            [out,retval] int* Type
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FractionFormat(
            [in] <enum> AcDimFractionType Type
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fit(
            [out,retval] int* fittype
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fit(
            [in] <enum> AcDimFit fittype
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* Type
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinearScaleFactor(
            [in] <alias> ACAD_NOUNITS Type
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnitsFormat(
            [out,retval] int* format
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnitsFormat(
            [in] <enum> AcDimLUnits format
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RoundDistance(
            [out,retval] double* Distance
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RoundDistance(
            [in] double Distance
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimLineSuppress(
            [out,retval] bool* bSuppress
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimLineSuppress(
            [in] bool bSuppress
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [out,retval] bool* bInside
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInsideAlign(
            [in] bool bInside
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextInside(
            [out,retval] bool* bInside
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextInside(
            [in] bool bInside
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForceLineInside(
            [out,retval] bool* bInside
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForceLineInside(
            [in] bool bInside
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [out,retval] bool* bInside
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextOutsideAlign(
            [in] bool bInside
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressLeadingZeros(
            [in] bool bVal
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressTrailingZeros(
            [in] bool bVal
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroFeet(
            [in] bool bVal
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [out,retval] bool* bVal
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltSuppressZeroInches(
            [in] bool bVal
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [out,retval] bool* bVal
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressLeadingZeros(
            [in] bool bVal
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [out,retval] bool* bVal
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressTrailingZeros(
            [in] bool bVal
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    60. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltToleranceSuppressZeroInches(
            [in] bool bVal
         );

    61. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [out,retval] bool* bVal
         );

    62. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroFeet(
            [in] bool bVal
         );

    63. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [out,retval] bool* bVal
         );

    64. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SuppressZeroInches(
            [in] bool bVal
         );

    65. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [out,retval] bool* bVal
         );

    66. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroFeet(
            [in] bool bVal
         );

    67. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [out,retval] bool* bVal
         );

    68. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToleranceSuppressZeroInches(
            [in] bool bVal
         );

    69. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* weight
         );

    70. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLineWeight(
            [in] <alias> ACAD_LWEIGHT weight
         );

    71. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    72. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    73. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadType(
            [out,retval] int* Type
         );

    74. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadType(
            [in] <enum> AcDimArrowheadType Type
         );

    75. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Measurement(
            [out,retval] double* bVal
         );

    76. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [out,retval] BSTR* BlockName
         );

    77. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [in] BSTR BlockName
         );

    78. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OverrideCenter(
            [out,retval] VARIANT* overrideCenterPos
         );

    79. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT OverrideCenter(
            [in] VARIANT overrideCenterPos
         );

    80. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT JogLocation(
            [out,retval] VARIANT* jogPos
         );

    81. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT JogLocation(
            [in] VARIANT jogPos
         );

    82. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT JogAngle(
            [out,retval] <alias> ACAD_ANGLE* JogAngle
         );

    83. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT JogAngle(
            [in] <alias> ACAD_ANGLE JogAngle
         );

    84. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Center(
            [out,retval] VARIANT* pVar
         );

    85. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Center(
            [in] VARIANT pVar
         );

    86. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ChordPoint(
            [out,retval] VARIANT* pVal
         );

    87. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ChordPoint(
            [in] VARIANT pVal
         );

    88. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [out,retval] BSTR* Linetype
         );

    89. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DimensionLinetype(
            [in] BSTR Linetype
         );


==================================================================================

IDispatch IAcadSection;
IID = {96FEBB41-F125-4CC1-8F09-1DBB514CD21C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* pbstrName
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR pbstrName
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT State(
            [out,retval] int* pVal
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT State(
            [in] <enum> AcSectionState pVal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ViewingDirection(
            [out,retval] VARIANT* pVal
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ViewingDirection(
            [in] VARIANT pVal
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VerticalDirection(
            [out,retval] VARIANT* pVal
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VerticalDirection(
            [in] VARIANT pVal
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* pVal
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LiveSectionEnabled(
            [out,retval] bool* pVal
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LiveSectionEnabled(
            [in] bool pVal
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IndicatorTransparency(
            [out,retval] int* pVal
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IndicatorTransparency(
            [in] int pVal
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IndicatorFillColor(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IndicatorFillColor(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Elevation(
            [out,retval] double* pVal
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Elevation(
            [in] double pVal
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TopHeight(
            [out,retval] double* pVal
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TopHeight(
            [in] double pVal
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BottomHeight(
            [out,retval] double* pVal
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BottomHeight(
            [in] double pVal
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumVertices(
            [out,retval] int* pVal
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Vertices(
            [out,retval] VARIANT* pVal
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Vertices(
            [in] VARIANT pVal
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );

    27. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddVertex(
            [in] int nIndex, 
            [in] VARIANT val
         );

    28. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveVertex(
            [in] int nIndex
         );

    29. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT HitTest(
            [in] VARIANT varPtHit, 
            [out] bool* pHit, 
            [out] int* pSegmentIndex, 
            [out] VARIANT* pPtOnSegment, 
            [out] int* pSubItem
         );

    30. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CreateJog(
            [in] VARIANT varPt
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Settings(
            [out,retval] <IDispatch> IAcadSectionSettings** pUnk
         );

    32. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GenerateSectionGeometry(
            [in] <IDispatch> IAcadEntity* pEntity, 
            [out] VARIANT* pIntersectionBoundaryObjs, 
            [out] VARIANT* pIntersectionFillObjs, 
            [out] VARIANT* pBackgroudnObjs, 
            [out] VARIANT* pForegroudObjs, 
            [out] VARIANT* pCurveTangencyObjs
         );


==================================================================================

IDispatch IAcadSectionSettings;
IID = {7D35B280-745B-419B-845F-244F6C784D77}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CurrentSectionType(
            [out,retval] int* pVal
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CurrentSectionType(
            [in] <enum> AcSectionType pVal
         );

    3. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetSectionTypeSettings(
            [in] <enum> AcSectionType secType, 
            [out,retval] <IDispatch> IAcadSectionTypeSettings** pUnk
         );


==================================================================================

IDispatch IAcadSectionTypeSettings;
IID = {B3B0361E-6D90-4C66-AD49-BA597FAA24B3}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GenerationOptions(
            [out,retval] int* pVal
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GenerationOptions(
            [in] <enum> AcSectionGeneration pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SourceObjects(
            [out,retval] VARIANT* pVal
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SourceObjects(
            [in] VARIANT pVal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DestinationBlock(
            [out,retval] VARIANT* pVal
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DestinationBlock(
            [in] VARIANT pVal
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DestinationFile(
            [out,retval] BSTR* pVal
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DestinationFile(
            [in] BSTR pVal
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionBoundaryColor(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionBoundaryColor(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionBoundaryLayer(
            [out,retval] BSTR* Layer
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionBoundaryLayer(
            [in] BSTR Layer
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionBoundaryLinetype(
            [out,retval] BSTR* Linetype
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionBoundaryLinetype(
            [in] BSTR Linetype
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionBoundaryLinetypeScale(
            [out,retval] <alias> ACAD_NOUNITS* ltScale
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionBoundaryLinetypeScale(
            [in] <alias> ACAD_NOUNITS ltScale
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionBoundaryPlotStyleName(
            [out,retval] BSTR* plotStyle
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionBoundaryPlotStyleName(
            [in] BSTR plotStyle
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionBoundaryLineweight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionBoundaryLineweight(
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionBoundaryDivisionLines(
            [out,retval] bool* pVal
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionBoundaryDivisionLines(
            [in] bool pVal
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillVisible(
            [out,retval] bool* pVal
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillVisible(
            [in] bool pVal
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillHatchPatternType(
            [out,retval] int* pVal
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillHatchPatternType(
            [in] <enum> AcPatternType pVal
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillHatchPatternName(
            [out,retval] BSTR* pVal
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillHatchPatternName(
            [in] BSTR pVal
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillHatchAngle(
            [out,retval] <alias> ACAD_ANGLE* pVal
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillHatchAngle(
            [in] <alias> ACAD_ANGLE pVal
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillHatchScale(
            [out,retval] <alias> ACAD_NOUNITS* pVal
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillHatchScale(
            [in] <alias> ACAD_NOUNITS pVal
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillHatchSpacing(
            [out,retval] double* pVal
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillHatchSpacing(
            [in] double pVal
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillColor(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillColor(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillLayer(
            [out,retval] BSTR* Layer
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillLayer(
            [in] BSTR Layer
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillLinetype(
            [out,retval] BSTR* Linetype
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillLinetype(
            [in] BSTR Linetype
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillLinetypeScale(
            [out,retval] <alias> ACAD_NOUNITS* ltScale
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillLinetypeScale(
            [in] <alias> ACAD_NOUNITS ltScale
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillPlotStyleName(
            [out,retval] BSTR* plotStyle
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillPlotStyleName(
            [in] BSTR plotStyle
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillLineweight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillLineweight(
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionFillFaceTransparency(
            [out,retval] int* pVal
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionFillFaceTransparency(
            [in] int pVal
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundLinesVisible(
            [out,retval] bool* pVal
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundLinesVisible(
            [in] bool pVal
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundLinesHiddenLine(
            [out,retval] bool* pVal
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundLinesHiddenLine(
            [in] bool pVal
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundLinesColor(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundLinesColor(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundLinesLayer(
            [out,retval] BSTR* Layer
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundLinesLayer(
            [in] BSTR Layer
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundLinesLinetype(
            [out,retval] BSTR* Linetype
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundLinesLinetype(
            [in] BSTR Linetype
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundLinesLinetypeScale(
            [out,retval] <alias> ACAD_NOUNITS* ltScale
         );

    60. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundLinesLinetypeScale(
            [in] <alias> ACAD_NOUNITS ltScale
         );

    61. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundLinesPlotStyleName(
            [out,retval] BSTR* plotStyle
         );

    62. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundLinesPlotStyleName(
            [in] BSTR plotStyle
         );

    63. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundLinesLineweight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    64. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundLinesLineweight(
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    65. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesVisible(
            [out,retval] bool* pVal
         );

    66. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesVisible(
            [in] bool pVal
         );

    67. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesHiddenLine(
            [out,retval] bool* pVal
         );

    68. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesHiddenLine(
            [in] bool pVal
         );

    69. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesColor(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    70. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesColor(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    71. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesLayer(
            [out,retval] BSTR* Layer
         );

    72. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesLayer(
            [in] BSTR Layer
         );

    73. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesLinetype(
            [out,retval] BSTR* Linetype
         );

    74. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesLinetype(
            [in] BSTR Linetype
         );

    75. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesLinetypeScale(
            [out,retval] <alias> ACAD_NOUNITS* ltScale
         );

    76. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesLinetypeScale(
            [in] <alias> ACAD_NOUNITS ltScale
         );

    77. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesPlotStyleName(
            [out,retval] BSTR* plotStyle
         );

    78. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesPlotStyleName(
            [in] BSTR plotStyle
         );

    79. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesLineweight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    80. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesLineweight(
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    81. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesFaceTransparency(
            [out,retval] int* pVal
         );

    82. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesFaceTransparency(
            [in] int pVal
         );

    83. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ForegroundLinesEdgeTransparency(
            [out,retval] int* pVal
         );

    84. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ForegroundLinesEdgeTransparency(
            [in] int pVal
         );

    85. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CurveTangencyLinesVisible(
            [out,retval] bool* pVal
         );

    86. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CurveTangencyLinesVisible(
            [in] bool pVal
         );

    87. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CurveTangencyLinesColor(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    88. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CurveTangencyLinesColor(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    89. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CurveTangencyLinesLayer(
            [out,retval] BSTR* Layer
         );

    90. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CurveTangencyLinesLayer(
            [in] BSTR Layer
         );

    91. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CurveTangencyLinesLinetype(
            [out,retval] BSTR* Linetype
         );

    92. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CurveTangencyLinesLinetype(
            [in] BSTR Linetype
         );

    93. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CurveTangencyLinesLinetypeScale(
            [out,retval] <alias> ACAD_NOUNITS* ltScale
         );

    94. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CurveTangencyLinesLinetypeScale(
            [in] <alias> ACAD_NOUNITS ltScale
         );

    95. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CurveTangencyLinesPlotStyleName(
            [out,retval] BSTR* plotStyle
         );

    96. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CurveTangencyLinesPlotStyleName(
            [in] BSTR plotStyle
         );

    97. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CurveTangencyLinesLineweight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    98. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CurveTangencyLinesLineweight(
            [in] <alias> ACAD_LWEIGHT Lineweight
         );


==================================================================================

IDispatch IAcadMLeader;
IID = {5D8A52A9-9205-4BE0-A2F1-431612FBB35D}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] double* scale
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] double scale
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderType(
            [out,retval] int* Type
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderType(
            [in] <enum> AcMLeaderType Type
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLineColor(
            [out,retval] <IDispatch> IAcadAcCmColor** Type
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLineColor(
            [in] <IDispatch> IAcadAcCmColor* Type
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLinetype(
            [out,retval] <alias> ACAD_LTYPE* Linetype
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLinetype(
            [in] <alias> ACAD_LTYPE Linetype
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLineWeight(
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadType(
            [out,retval] int* BlockName
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadType(
            [in] <enum> AcDimArrowheadType BlockName
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DogLegged(
            [out,retval] bool* val
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DogLegged(
            [in] bool val
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DoglegLength(
            [out,retval] double* DoglegLength
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DoglegLength(
            [in] double DoglegLength
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ContentBlockName(
            [out,retval] BSTR* BlockName
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ContentBlockName(
            [in] BSTR BlockName
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BlockConnectionType(
            [out,retval] int* Type
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BlockConnectionType(
            [in] <enum> AcBlockConnectionType Type
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BlockScale(
            [out,retval] <alias> ACAD_NOUNITS* factor
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BlockScale(
            [in] <alias> ACAD_NOUNITS factor
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextString(
            [out,retval] BSTR* bstrText
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextString(
            [in] BSTR bstrText
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextStyleName(
            [out,retval] BSTR* bstrName
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextStyleName(
            [in] BSTR bstrName
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextJustify(
            [out,retval] int* attPoint
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextJustify(
            [in] <enum> AcAttachmentPoint attPoint
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextDirection(
            [out,retval] int* drawDir
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextDirection(
            [in] <enum> AcDrawingDirection drawDir
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextWidth(
            [out,retval] double* Width
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextWidth(
            [in] double Width
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextHeight(
            [out,retval] double* Height
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextHeight(
            [in] double Height
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextRotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextRotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextLineSpacingFactor(
            [out,retval] double* factor
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextLineSpacingFactor(
            [in] double factor
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextLineSpacingDistance(
            [out,retval] double* Value
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextLineSpacingDistance(
            [in] double Value
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextLineSpacingStyle(
            [out,retval] int* style
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextLineSpacingStyle(
            [in] <enum> AcLineSpacingStyle style
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextBackgroundFill(
            [out,retval] bool* bUseBackgroundFill
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextBackgroundFill(
            [in] bool bUseBackgroundFill
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextAttachmentDirection(
            [out,retval] int* dir
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextAttachmentDirection(
            [in] <enum> AcTextAttachmentDirection dir
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextLeftAttachmentType(
            [out,retval] int* Type
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextLeftAttachmentType(
            [in] <enum> AcTextAttachmentType Type
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextRightAttachmentType(
            [out,retval] int* Type
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextRightAttachmentType(
            [in] <enum> AcTextAttachmentType Type
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextTopAttachmentType(
            [out,retval] int* Type
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextTopAttachmentType(
            [in] <enum> AcVerticalTextAttachmentType Type
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextBottomAttachmentType(
            [out,retval] int* Type
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextBottomAttachmentType(
            [in] <enum> AcVerticalTextAttachmentType Type
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LandingGap(
            [out,retval] double* gap
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LandingGap(
            [in] double gap
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [out,retval] BSTR* BlockName
         );

    60. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [in] BSTR BlockName
         );

    61. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ContentBlockType(
            [out,retval] int* Type
         );

    62. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ContentBlockType(
            [in] <enum> AcPredefBlockType Type
         );

    63. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderCount(
            [out,retval] int* number
         );

    64. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddLeader(
            [out,retval] int* leaderIndex
         );

    65. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveLeader(
            [in] int leaderIndex
         );

    66. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddLeaderLine(
            [in] int leaderIndex, 
            [in] VARIANT pointArray, 
            [out,retval] int* leaderLineIndex
         );

    67. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddLeaderLineEx(
            [in] VARIANT pointArray, 
            [out,retval] int* leaderLineIndex
         );

    68. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveLeaderLine(
            [in] int leaderLineIndex
         );

    69. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetLeaderLineVertices(
            [in] int leaderLineIndex, 
            [in] VARIANT pointArray
         );

    70. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetLeaderLineVertices(
            [in] int leaderLineIndex, 
            [out,retval] VARIANT* pointArray
         );

    71. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ContentType(
            [in] <enum> AcMLeaderContentType pointArray
         );

    72. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ContentType(
            [out,retval] int* Type
         );

    73. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetLeaderIndex(
            [in] int leaderLineIndex, 
            [out,retval] int* leaderIndex
         );

    74. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetLeaderLineIndexes(
            [in] int leaderIndex, 
            [out,retval] VARIANT* leaderLineIndexes
         );

    75. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetVertexCount(
            [in] int leaderLineIndex, 
            [out,retval] int* number
         );

    76. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextFrameDisplay(
            [out,retval] bool* pVal
         );

    77. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextFrameDisplay(
            [in] bool pVal
         );

    78. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* Name
         );

    79. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleName(
            [in] BSTR Name
         );

    80. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetDoglegDirection(
            [in] int leaderIndex, 
            [out,retval] VARIANT* dirVec
         );

    81. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetDoglegDirection(
            [in] int leaderIndex, 
            [in] VARIANT dirVec
         );

    82. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockAttributeValue(
            [in] <alias> LONG_PTR attdefId, 
            [out,retval] BSTR* Value
         );

    83. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockAttributeValue(
            [in] <alias> LONG_PTR attdefId, 
            [in] BSTR Value
         );

    84. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBlockAttributeValue32(
            [in] int attdefId, 
            [out,retval] BSTR* Value
         );

    85. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBlockAttributeValue32(
            [in] int attdefId, 
            [in] BSTR Value
         );


==================================================================================

IDispatch IAcadPaperSpace;
IID = {76856FC9-8A8B-441E-8FC3-0DA529CD9361}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddPViewport(
            [in] VARIANT Center, 
            [in] double Width, 
            [in] double Height, 
            [out,retval] <IDispatch> IAcadPViewport** pPViewport
         );


==================================================================================

IDispatch IAcadPViewport;
IID = {31E79643-C695-4F82-94B4-BCAB62D200DA}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Center(
            [out,retval] VARIANT* CenterPoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Center(
            [in] VARIANT CenterPoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Direction(
            [out,retval] VARIANT* dirVector
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Direction(
            [in] VARIANT dirVector
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GridOn(
            [out,retval] bool* bGridOn
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GridOn(
            [in] bool bGridOn
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] double* Width
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] double Width
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ViewportOn(
            [out,retval] bool* bOn
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ViewportOn(
            [in] bool bOn
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Clipped(
            [out,retval] bool* bClipped
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DisplayLocked(
            [out,retval] bool* bLocked
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DisplayLocked(
            [in] bool bLocked
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StandardScale(
            [out,retval] int* scale
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StandardScale(
            [in] <enum> AcViewportScale scale
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CustomScale(
            [out,retval] double* scale
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CustomScale(
            [in] double scale
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleSheet(
            [out,retval] BSTR* pName
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleSheet(
            [in] BSTR pName
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UCSPerViewport(
            [out,retval] bool* UCSSaved
         );

    23. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UCSPerViewport(
            [in] bool UCSSaved
         );

    24. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SnapBasePoint(
            [out,retval] VARIANT* lowLeft
         );

    25. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SnapBasePoint(
            [in] VARIANT lowLeft
         );

    26. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SnapOn(
            [out,retval] bool* bSnapOn
         );

    27. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SnapOn(
            [in] bool bSnapOn
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SnapRotationAngle(
            [out,retval] double* Angle
         );

    29. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SnapRotationAngle(
            [in] double Angle
         );

    30. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UCSIconOn(
            [out,retval] bool* bIconOn
         );

    31. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UCSIconOn(
            [in] bool bIconOn
         );

    32. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UCSIconAtOrigin(
            [out,retval] bool* bIconAtOrigin
         );

    33. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UCSIconAtOrigin(
            [in] bool bIconAtOrigin
         );

    34. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridSpacing(
            [out] double* XSpacing, 
            [out] double* YSpacing
         );

    35. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridSpacing(
            [in] double XSpacing, 
            [in] double YSpacing
         );

    36. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetSnapSpacing(
            [out] double* XSpacing, 
            [out] double* YSpacing
         );

    37. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetSnapSpacing(
            [in] double XSpacing, 
            [in] double YSpacing
         );

    38. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Display(
            [in] bool bStatus
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TwistAngle(
            [out,retval] <alias> ACAD_ANGLE* Angle
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TwistAngle(
            [in] <alias> ACAD_ANGLE Angle
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LensLength(
            [out,retval] double* Length
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LensLength(
            [in] double Length
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RemoveHiddenLines(
            [out,retval] bool* bRemoval
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RemoveHiddenLines(
            [in] bool bRemoval
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Target(
            [out,retval] VARIANT* targetPoint
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Target(
            [in] VARIANT targetPoint
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArcSmoothness(
            [out,retval] int* arcSmooth
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArcSmoothness(
            [in] int arcSmooth
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VisualStyle(
            [out,retval] int* pVisualStyleIndex
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VisualStyle(
            [in] int pVisualStyleIndex
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShadePlot(
            [out,retval] int* pShadePlotIndex
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShadePlot(
            [in] int pShadePlotIndex
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ModelView(
            [out,retval] <IDispatch> IAcadView** View
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ModelView(
            [in] <IDispatch> IAcadView* View
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SheetView(
            [out,retval] <IDispatch> IAcadView** View
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SheetView(
            [in] <IDispatch> IAcadView* View
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LabelBlockId(
            [out,retval] <alias> LONG_PTR* ObjectID
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LabelBlockId(
            [in] <alias> LONG_PTR* ObjectID
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HasSheetView(
            [out,retval] bool* bSheetView
         );

    60. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SyncModelView(
         );

    61. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LabelBlockId32(
            [out,retval] int* ObjectID
         );

    62. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LabelBlockId32(
            [in] int* ObjectID
         );

    63. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StandardScale2(
            [out,retval] int* scale
         );

    64. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StandardScale2(
            [in] int scale
         );

    65. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayerPropertyOverrides(
            [out,retval] bool* bOverrides
         );


==================================================================================

IDispatch IAcadView;
IID = {942FFF4B-FCFF-4BDB-AEE1-BC2BB16C9E14}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Center(
            [out,retval] VARIANT* Center
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Center(
            [in] VARIANT Center
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] double* Width
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] double Width
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Target(
            [out,retval] VARIANT* targetPoint
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Target(
            [in] VARIANT targetPoint
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Direction(
            [out,retval] VARIANT* dirVec
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Direction(
            [in] VARIANT dirVec
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CategoryName(
            [out,retval] BSTR* category
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CategoryName(
            [in] BSTR category
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayoutId(
            [out,retval] <alias> LONG_PTR* ObjectID
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayoutId(
            [in] <alias> LONG_PTR ObjectID
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayerState(
            [out,retval] BSTR* LayerState
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayerState(
            [in] BSTR LayerState
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HasVpAssociation(
            [out,retval] bool* bVpAssoc
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HasVpAssociation(
            [in] bool bVpAssoc
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayoutId32(
            [out,retval] int* ObjectID
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayoutId32(
            [in] int ObjectID
         );


==================================================================================

IDispatch IAcadBlocks;
IID = {F73108C0-27EE-4CF7-B909-B303532A0601}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadBlock** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] VARIANT InsertionPoint, 
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadBlock** pBlock
         );


==================================================================================

IDispatch IAcadGroups;
IID = {830A1360-DD64-4E1A-9C06-B53BE68BD05F}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadGroup** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadGroup** pDimStyle
         );


==================================================================================

IDispatch IAcadGroup;
IID = {30A5C0D7-0157-40E0-8A25-1B17CE14F7EC}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadEntity** ppEntity
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pVal
         );

    4. Sets the true color for entities in the group.
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TrueColor(
            [in] <IDispatch> IAcadAcCmColor* pVal
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Layer(
            [in] BSTR pVal
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Linetype(
            [in] BSTR pVal
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LinetypeScale(
            [in] <alias> ACAD_NOUNITS pVal
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Visible(
            [in] bool pVal
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Highlight(
            [in] bool HighlightFlag
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotStyleName(
            [in] BSTR HighlightFlag
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Lineweight(
            [in] <alias> ACAD_LWEIGHT HighlightFlag
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* pVal
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR pVal
         );

    14. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AppendItems(
            [in] VARIANT Objects
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveItems(
            [in] VARIANT Objects
         );

    16. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Update(
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Material(
            [in] BSTR Objects
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT color(
            [in] <enum> AcColor Objects
         );


==================================================================================

IDispatch IAcadDimStyles;
IID = {0C284A1C-EAF2-425A-8D21-A1B8173DE196}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadDimStyle** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadDimStyle** pDimStyle
         );


==================================================================================

IDispatch IAcadDimStyle;
IID = {AAF15482-7287-4766-A333-B23458DCC65A}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    3. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CopyFrom(
            [in] idispatch StyleSource
         );


==================================================================================

IDispatch IAcadLayers;
IID = {66E080D9-AD12-4280-B5A7-2EBFA89DCAE6}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadLayer** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadLayer** pLayer
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GenerateUsageData(
         );


==================================================================================

IDispatch IAcadLayer;
IID = {EF7F5376-1943-4235-9053-32BAEACCCB49}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT color(
            [out,retval] int* color
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT color(
            [in] <enum> AcColor color
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TrueColor(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TrueColor(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Freeze(
            [out,retval] bool* bFreeze
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Freeze(
            [in] bool bFreeze
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayerOn(
            [out,retval] bool* bOn
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayerOn(
            [in] bool bOn
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Linetype(
            [out,retval] BSTR* Linetype
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Linetype(
            [in] BSTR Linetype
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Lock(
            [out,retval] bool* Block
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Lock(
            [in] bool Block
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Plottable(
            [out,retval] bool* bPlottable
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Plottable(
            [in] bool bPlottable
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ViewportDefault(
            [out,retval] bool* bDefault
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ViewportDefault(
            [in] bool bDefault
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotStyleName(
            [out,retval] BSTR* plotStyle
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotStyleName(
            [in] BSTR plotStyle
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Lineweight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Lineweight(
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Description(
            [out,retval] BSTR* Description
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Description(
            [in] BSTR Description
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Used(
            [out,retval] bool* bUsed
         );

    26. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Material(
            [out,retval] BSTR* Material
         );

    27. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Material(
            [in] BSTR Material
         );


==================================================================================

IDispatch IAcadLineTypes;
IID = {81758580-5621-4985-9A84-A6A4A5E7AD94}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadLineType** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadLineType** pLinetype
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Load(
            [in] BSTR Name, 
            [in] BSTR FileName
         );


==================================================================================

IDispatch IAcadLineType;
IID = {CC498941-DF18-40D6-A059-9B4BCF556FAE}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Description(
            [out,retval] BSTR* bstrDes
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Description(
            [in] BSTR bstrDes
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );


==================================================================================

IDispatch IAcadDictionaries;
IID = {2FD39045-F33A-4FE0-ABE0-EA3C638867F5}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadObject** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadDictionary** pDimStyle
         );


==================================================================================

IDispatch IAcadDictionary;
IID = {D5551E84-C9C8-4939-817B-63DD7CE80CAF}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* pVal
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR pVal
         );

    3. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddObject(
            [in] BSTR Keyword, 
            [in] BSTR ObjectName, 
            [out,retval] <IDispatch> IAcadObject** pNewObj
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetName(
            [in] <IDispatch> IAcadObject* Object, 
            [out,retval] BSTR* bstrName
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetObject(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadObject** pObj
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Remove(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadObject** pObj
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Rename(
            [in] BSTR OldName, 
            [in] BSTR NewName
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Replace(
            [in] BSTR OldName, 
            [in] <IDispatch> IAcadObject* pObj
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadObject** pItem
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pVal
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddXRecord(
            [in] BSTR Keyword, 
            [out,retval] <IDispatch> IAcadXRecord** pNewXRecord
         );


==================================================================================

IDispatch IAcadXRecord;
IID = {4E82F823-9F02-4EA9-A99B-DDAC18187F0E}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    3. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetXRecordData(
            [out] VARIANT* XRecordDataType, 
            [out] VARIANT* XRecordDataValue
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetXRecordData(
            [in] VARIANT XRecordDataType, 
            [in] VARIANT XRecordDataValue
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TranslateIDs(
            [out,retval] bool* xlateIds
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TranslateIDs(
            [in] bool xlateIds
         );


==================================================================================

IDispatch IAcadRegisteredApplications;
IID = {5E9A1BA0-23FE-4F32-B802-EBAADCF90456}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadRegisteredApplication** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadRegisteredApplication** pRegApp
         );


==================================================================================

IDispatch IAcadRegisteredApplication;
IID = {E428059C-69D4-4978-92CF-670BB515B7BF}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );


==================================================================================

IDispatch IAcadTextStyles;
IID = {EA00BFB5-4299-45FC-9ABB-8A56E73779EB}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadTextStyle** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadTextStyle** pTextStyle
         );


==================================================================================

IDispatch IAcadTextStyle;
IID = {C62D0CA8-C3C5-42DF-AFB9-3C439A0EF4CB}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BigFontFile(
            [out,retval] BSTR* fontFile
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BigFontFile(
            [in] BSTR fontFile
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT fontFile(
            [out,retval] BSTR* fontFile
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT fontFile(
            [in] BSTR fontFile
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LastHeight(
            [out,retval] double* Height
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LastHeight(
            [in] double Height
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [out,retval] <alias> ACAD_ANGLE* obliAngle
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [in] <alias> ACAD_ANGLE obliAngle
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextGenerationFlag(
            [out,retval] int* textGenFlag
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextGenerationFlag(
            [in] int textGenFlag
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] double* Width
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] double Width
         );

    16. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFont(
            [out] BSTR* TypeFace, 
            [out] bool* Bold, 
            [out] bool* Italic, 
            [out] int* Charset, 
            [out] int* PitchAndFamily
         );

    17. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFont(
            [in] BSTR TypeFace, 
            [in] bool Bold, 
            [in] bool Italic, 
            [in] int Charset, 
            [in] int PitchAndFamily
         );


==================================================================================

IDispatch IAcadUCSs;
IID = {60C5E080-2F24-40B4-88F4-21B755A5C18D}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadUCS** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] VARIANT Origin, 
            [in] VARIANT XAxisPoint, 
            [in] VARIANT YAxisPoint, 
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadUCS** pUCS
         );


==================================================================================

IDispatch IAcadUCS;
IID = {81538710-AE65-441C-AB55-73AF6818AEEB}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Origin(
            [out,retval] VARIANT* Origin
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Origin(
            [in] VARIANT Origin
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT XVector(
            [out,retval] VARIANT* XVector
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT XVector(
            [in] VARIANT XVector
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT YVector(
            [out,retval] VARIANT* YVector
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT YVector(
            [in] VARIANT YVector
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetUCSMatrix(
            [out,retval] VARIANT* transMatrix
         );


==================================================================================

IDispatch IAcadViews;
IID = {D2FC4A6D-894A-4E3E-ACFC-03FE885AC5E3}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadView** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadView** pRegApp
         );


==================================================================================

IDispatch IAcadViewports;
IID = {E09BAB22-A8AC-4B99-9E1F-ED1541C47330}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadViewport** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadViewport** pRegApp
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DeleteConfiguration(
            [in] BSTR Name
         );


==================================================================================

IDispatch IAcadViewport;
IID = {841E1C09-27EE-47A9-A864-EF1145DE5849}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Center(
            [out,retval] VARIANT* Center
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Center(
            [in] VARIANT Center
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] double* Width
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] double Width
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Target(
            [out,retval] VARIANT* targetPoint
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Target(
            [in] VARIANT targetPoint
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Direction(
            [out,retval] VARIANT* dirVec
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Direction(
            [in] VARIANT dirVec
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GridOn(
            [out,retval] bool* bGridOn
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GridOn(
            [in] bool bGridOn
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OrthoOn(
            [out,retval] bool* bOrthoOn
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT OrthoOn(
            [in] bool bOrthoOn
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SnapBasePoint(
            [out,retval] VARIANT* lowLeft
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SnapBasePoint(
            [in] VARIANT lowLeft
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SnapOn(
            [out,retval] bool* bSnapOn
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SnapOn(
            [in] bool bSnapOn
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SnapRotationAngle(
            [out,retval] <alias> ACAD_ANGLE* Angle
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SnapRotationAngle(
            [in] <alias> ACAD_ANGLE Angle
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UCSIconOn(
            [out,retval] bool* bIconOn
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UCSIconOn(
            [in] bool bIconOn
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UCSIconAtOrigin(
            [out,retval] bool* bIconAtOrigin
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UCSIconAtOrigin(
            [in] bool bIconAtOrigin
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LowerLeftCorner(
            [out,retval] VARIANT* lowLeft
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UpperRightCorner(
            [out,retval] VARIANT* UpperRight
         );

    29. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Split(
            [in] <enum> AcViewportSplitType NumWins
         );

    30. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridSpacing(
            [out] double* XSpacing, 
            [out] double* YSpacing
         );

    31. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridSpacing(
            [in] double XSpacing, 
            [in] double YSpacing
         );

    32. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetSnapSpacing(
            [out] double* XSpacing, 
            [out] double* YSpacing
         );

    33. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetSnapSpacing(
            [in] double XSpacing, 
            [in] double YSpacing
         );

    34. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetView(
            [in] <IDispatch> IAcadView* View
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArcSmoothness(
            [out,retval] int* arcSmooth
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArcSmoothness(
            [in] int arcSmooth
         );


==================================================================================

IDispatch IAcadLayouts;
IID = {88CA3904-BB3B-49A7-8FB2-1E45A37541A1}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadLayout** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadLayout** pLayout
         );


==================================================================================

IDispatch IAcadPlotConfigurations;
IID = {67468E51-E585-4EA1-92C4-45CA9F4C8919}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadPlotConfiguration** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [in,optional] VARIANT ModelType, 
            [out,retval] <IDispatch> IAcadPlotConfiguration** pPlotConfig
         );


==================================================================================

IDispatch IAcadDatabasePreferences;
IID = {2BF537C1-34DB-4840-A005-DEFF3D44FFF9}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] idispatch* pAppObj
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SolidFill(
            [out,retval] bool* Fill
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SolidFill(
            [in] bool Fill
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT XRefEdit(
            [out,retval] bool* Edit
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT XRefEdit(
            [in] bool Edit
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT XRefLayerVisibility(
            [out,retval] bool* XRefLayerVis
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT XRefLayerVisibility(
            [in] bool XRefLayerVis
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OLELaunch(
            [out,retval] bool* Launch
         );

    9. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT OLELaunch(
            [in] bool Launch
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AllowLongSymbolNames(
            [out,retval] bool* LongNames
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AllowLongSymbolNames(
            [in] bool LongNames
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectSortBySelection(
            [out,retval] bool* Sort
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObjectSortBySelection(
            [in] bool Sort
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectSortBySnap(
            [out,retval] bool* Sort
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObjectSortBySnap(
            [in] bool Sort
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectSortByRedraws(
            [out,retval] bool* Sort
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObjectSortByRedraws(
            [in] bool Sort
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectSortByRegens(
            [out,retval] bool* Sort
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObjectSortByRegens(
            [in] bool Sort
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectSortByPlotting(
            [out,retval] bool* Sort
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObjectSortByPlotting(
            [in] bool Sort
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectSortByPSOutput(
            [out,retval] bool* Sort
         );

    23. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObjectSortByPSOutput(
            [in] bool Sort
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ContourLinesPerSurface(
            [in] int Sort
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ContourLinesPerSurface(
            [out,retval] int* Path
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DisplaySilhouette(
            [in] bool Path
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DisplaySilhouette(
            [out,retval] bool* Path
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaxActiveViewports(
            [in] int Path
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaxActiveViewports(
            [out,retval] int* Path
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RenderSmoothness(
            [in] double Path
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RenderSmoothness(
            [out,retval] double* Path
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SegmentPerPolyline(
            [in] int Path
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SegmentPerPolyline(
            [out,retval] int* Path
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextFrameDisplay(
            [in] bool Path
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextFrameDisplay(
            [out,retval] bool* Path
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Lineweight(
            [in] <enum> AcLineWeight Path
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Lineweight(
            [out,retval] int* Path
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LineWeightDisplay(
            [in] bool Path
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LineWeightDisplay(
            [out,retval] bool* Path
         );


==================================================================================

IDispatch IAcadFileDependencies;
IID = {D932B444-5E99-4739-B656-515AA9DA3EBE}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadFileDependency** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] idispatch* pAppObj
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pVal
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CreateEntry(
            [in] BSTR Feature, 
            [in] BSTR FullFileName, 
            [in] bool AffectsGraphics, 
            [in] bool noIncrement, 
            [out,retval] int* Index
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT IndexOf(
            [in] BSTR Feature, 
            [in] BSTR FullFileName, 
            [out,retval] int* Index
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveEntry(
            [in] int Index, 
            [in] bool forceRemove
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT UpdateEntry(
            [in] int Index
         );


==================================================================================

IDispatch IAcadFileDependency;
IID = {87C3D049-DE04-4966-B794-523099992E06}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FullFileName(
            [out,retval] BSTR* FullFileName
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FileName(
            [out,retval] BSTR* FileName
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FoundPath(
            [out,retval] BSTR* FoundPath
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FingerprintGuid(
            [out,retval] BSTR* FingerprintGuid
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VersionGuid(
            [out,retval] BSTR* VersionGuid
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Feature(
            [out,retval] BSTR* Feature
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsModified(
            [out,retval] bool* IsModified
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AffectsGraphics(
            [out,retval] bool* AffectsGraphics
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Index(
            [out,retval] int* Index
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TimeStamp(
            [out,retval] int* TimeStamp
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FileSize(
            [out,retval] int* FileSize
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ReferenceCount(
            [out,retval] int* refCount
         );


==================================================================================

IDispatch IAcadSummaryInfo;
IID = {CEB19507-DE94-4A2B-A1F0-1D11FE35C313}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Author(
            [out,retval] BSTR* pAuthor
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Author(
            [in] BSTR pAuthor
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Comments(
            [out,retval] BSTR* pComments
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Comments(
            [in] BSTR pComments
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HyperlinkBase(
            [out,retval] BSTR* pHyperlinkBase
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HyperlinkBase(
            [in] BSTR pHyperlinkBase
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Keywords(
            [out,retval] BSTR* pKeywords
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Keywords(
            [in] BSTR pKeywords
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LastSavedBy(
            [out,retval] BSTR* pLastSavedBy
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LastSavedBy(
            [in] BSTR pLastSavedBy
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RevisionNumber(
            [out,retval] BSTR* pRevisionNumber
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RevisionNumber(
            [in] BSTR pRevisionNumber
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Subject(
            [out,retval] BSTR* pSubject
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Subject(
            [in] BSTR pSubject
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Title(
            [out,retval] BSTR* pTitle
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Title(
            [in] BSTR pTitle
         );

    17. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT NumCustomInfo(
            [out,retval] int* Index
         );

    18. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCustomByIndex(
            [in] int Index, 
            [out] BSTR* pKey, 
            [out] BSTR* pValue
         );

    19. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCustomByKey(
            [in] BSTR key, 
            [out] BSTR* pValue
         );

    20. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCustomByIndex(
            [in] int Index, 
            [in] BSTR key, 
            [in] BSTR Value
         );

    21. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCustomByKey(
            [in] BSTR key, 
            [in] BSTR Value
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddCustomInfo(
            [in] BSTR key, 
            [in] BSTR Value
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveCustomByIndex(
            [in] int Index
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveCustomByKey(
            [in] BSTR key
         );


==================================================================================

IDispatch IAcadSectionManager;
IID = {A28DABB3-DDC0-4713-A9E9-87F03CC92AF1}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadSection** pSection
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetLiveSection(
            [out,retval] <IDispatch> IAcadSection** pSection
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetUniqueSectionName(
            [in] BSTR pBaseName, 
            [out,retval] BSTR* ppUniqueName
         );


==================================================================================

IDispatch IAcadMaterials;
IID = {4ED31F1B-468B-4D1B-9AAA-F52ED55752D5}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadMaterial** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pCount
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] <IDispatch> IAcadMaterial** pDimStyle
         );


==================================================================================

IDispatch IAcadMaterial;
IID = {00EBEC55-C445-4AED-A818-EFE7CB752213}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Description(
            [out,retval] BSTR* bstrDes
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Description(
            [in] BSTR bstrDes
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );


==================================================================================

enum AcWireframeType;
{
  acIsolines = 0,
  acIsoparms = 1
};


==================================================================================

enum AcSplineKnotParameterizationType;
{
  acChord = 0,
  acSqrtChord = 1,
  acUniformParam = 2,
  acCustomParameterization = 15
};


==================================================================================

enum AcSplineFrameType;
{
  acShow = 0,
  acHide = 1
};


==================================================================================

enum AcSplineMethodType;
{
  acFit = 0,
  acControlVertices = 1
};


==================================================================================

enum AcPointCloudColorType;
{
  acByColor = 0,
  acPreset = 1
};


==================================================================================

IDispatch IAcadSectionTypeSettings2;
IID = {0FD65FD0-F266-46D9-A37D-B97633E985F1}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IntersectionBoundaryVisible(
            [out,retval] bool* pVal
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IntersectionBoundaryVisible(
            [in] bool pVal
         );


==================================================================================

coclass AcadHyperlink;
CLSID = {CD9526F0-F312-48BC-97C0-7637A32CF63E}; 

// Implemented interface: <IDispatch> IAcadHyperlink

==================================================================================

IDispatch IAcadDynamicBlockReferenceProperty;
IID = {8B49D14E-9F7E-42C5-B3C5-FF8F8852CF56}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PropertyName(
            [out,retval] BSTR* PropertyName
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ReadOnly(
            [out,retval] bool* ReadOnly
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Show(
            [out,retval] bool* Show
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Description(
            [out,retval] BSTR* Description
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AllowedValues(
            [out,retval] VARIANT* AllowedValues
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Value(
            [out,retval] VARIANT* Value
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Value(
            [in] VARIANT Value
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnitsType(
            [out,retval] int* Units
         );


==================================================================================

coclass AcadDynamicBlockReferenceProperty;
CLSID = {6658F584-15CB-4A36-BEEE-F25C606FC445}; 

// Implemented interface: <IDispatch> IAcadDynamicBlockReferenceProperty

==================================================================================

coclass AcadAcCmColor;
CLSID = {2D909319-0322-4EE7-B53E-EF48D3B1833E}; 

// Implemented interface: <IDispatch> IAcadAcCmColor

==================================================================================

Interface IAcadObjectEvents;
IID = {1F7BF7B4-BCC8-4670-840E-603F585257E9}; 
// Inherits from: IUnknown {00000000-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Modified(
            [in] <IDispatch> IAcadObject* pObject
         );


==================================================================================

coclass AcadObject;
CLSID = {5832D854-C5A5-4A63-8DCE-B150BBF71834}; 

// Implemented interface: <IDispatch> IAcadObject
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadXRecord;
CLSID = {310DEC40-B5A5-4CA7-A141-D636930A72DC}; 

// Implemented interface: <IDispatch> IAcadXRecord
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadSortentsTable;
IID = {F740BA86-EAF8-4EE3-8FCF-28B63563A8C3}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT MoveToBottom(
            [in] VARIANT Objects
         );

    2. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT MoveToTop(
            [in] VARIANT Objects
         );

    3. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT MoveBelow(
            [in] VARIANT Objects, 
            [in] <IDispatch> IAcadEntity* Target
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT MoveAbove(
            [in] VARIANT Objects, 
            [in] <IDispatch> IAcadEntity* Target
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SwapOrder(
            [in] <IDispatch> IAcadEntity* Object1, 
            [in] <IDispatch> IAcadEntity* Object2
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Block(
            [out,retval] <IDispatch> IAcadBlock** pBlock
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFullDrawOrder(
            [out] VARIANT* Objects, 
            [in] bool honorSortentsSysvar
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetRelativeDrawOrder(
            [out] VARIANT* Objects, 
            [in] bool honorSortentsSysvar
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetRelativeDrawOrder(
            [in] VARIANT Objects
         );


==================================================================================

coclass AcadSortentsTable;
CLSID = {A89FFC20-CAE1-4FFF-96A4-2422B305B57B}; 

// Implemented interface: <IDispatch> IAcadSortentsTable
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadDimStyle;
CLSID = {28078C83-8E39-4840-9D8C-969938ED2CD6}; 

// Implemented interface: <IDispatch> IAcadDimStyle
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadLayer;
CLSID = {616686F6-F1A8-45C1-8F2E-95D156A7C6D0}; 

// Implemented interface: <IDispatch> IAcadLayer
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadLineType;
CLSID = {46ECCA31-075F-4252-8690-F987EAA83A75}; 

// Implemented interface: <IDispatch> IAcadLineType
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadMaterial;
CLSID = {79D75C1D-5BB5-4A6E-8553-60F18393E0C7}; 

// Implemented interface: <IDispatch> IAcadMaterial
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadRegisteredApplication;
CLSID = {C6809E20-46BF-4934-8762-F8807C5788FF}; 

// Implemented interface: <IDispatch> IAcadRegisteredApplication
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadTextStyle;
CLSID = {9EEC21FD-3161-49ED-8768-34765DAD775F}; 

// Implemented interface: <IDispatch> IAcadTextStyle
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadUCS;
CLSID = {9F42DFA2-F628-45E7-9093-5A9370215B4E}; 

// Implemented interface: <IDispatch> IAcadUCS
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadView;
CLSID = {8EB8EA30-71B6-486F-8513-21F4A0F55EE8}; 

// Implemented interface: <IDispatch> IAcadView
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadViewport;
CLSID = {2D68B2C0-AAAD-4547-9455-7F47BA2FBE90}; 

// Implemented interface: <IDispatch> IAcadViewport
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadGroup;
CLSID = {98BC2557-3596-4E80-8A77-DA5EE6E13D05}; 

// Implemented interface: <IDispatch> IAcadGroup
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadPlotConfiguration;
CLSID = {EF5B641C-FC36-4936-BB03-9D4809BAA45B}; 

// Implemented interface: <IDispatch> IAcadPlotConfiguration
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadLayout;
CLSID = {28E5B54D-D4DE-4BD6-87DC-B795BDF9F0B2}; 

// Implemented interface: <IDispatch> IAcadLayout
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadIdPair;
IID = {557263C6-4FB1-4576-AE87-25DC9F6C45E7}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsCloned(
            [out,retval] bool* pVal
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsOwnerXlated(
            [out,retval] bool* pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsPrimary(
            [out,retval] bool* pVal
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT key(
            [out,retval] <alias> LONG_PTR* pVal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Value(
            [out,retval] <alias> LONG_PTR* pVal
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] idispatch* ApplicationObject
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Key32(
            [out,retval] int* pVal
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Value32(
            [out,retval] int* pVal
         );


==================================================================================

coclass AcadIdPair;
CLSID = {8997D4FE-827F-46E9-B078-00A896979400}; 

// Implemented interface: <IDispatch> IAcadIdPair

==================================================================================

IDispatch IAcadTableStyle;
IID = {F3506556-7B84-4D4A-AEB9-5FA4A5268C56}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrValue
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrValue
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Description(
            [out,retval] BSTR* bstr
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Description(
            [in] BSTR bstr
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BitFlags(
            [out,retval] int* bitFlag
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BitFlags(
            [in] int bitFlag
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FlowDirection(
            [out,retval] int* pFlow
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FlowDirection(
            [in] <enum> AcTableDirection pFlow
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorzCellMargin(
            [out,retval] double* dHorzCellMargin
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorzCellMargin(
            [in] double dHorzCellMargin
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VertCellMargin(
            [out,retval] double* dVertCellMargin
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VertCellMargin(
            [in] double dVertCellMargin
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TitleSuppressed(
            [out,retval] bool* bValue
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TitleSuppressed(
            [in] bool bValue
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HeaderSuppressed(
            [out,retval] bool* bValue
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HeaderSuppressed(
            [in] bool bValue
         );

    17. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextStyle(
            [in] <enum> AcRowType rowType, 
            [out,retval] BSTR* bstrName
         );

    18. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextStyle(
            [in] int rowTypes, 
            [in] BSTR bstrName
         );

    19. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextHeight(
            [in] <enum> AcRowType rowType, 
            [out,retval] double* pTextHeight
         );

    20. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextHeight(
            [in] int rowTypes, 
            [in] double TextHeight
         );

    21. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAlignment(
            [in] <enum> AcRowType rowType, 
            [out,retval] int* pCellAlignment
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetAlignment(
            [in] int rowTypes, 
            [in] <enum> AcCellAlignment cellAlignment
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetColor(
            [in] <enum> AcRowType rowType, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetColor(
            [in] int rowTypes, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBackgroundColor(
            [in] <enum> AcRowType rowType, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    26. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBackgroundColor(
            [in] int rowTypes, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    27. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBackgroundColorNone(
            [in] <enum> AcRowType rowType, 
            [out,retval] bool* bValue
         );

    28. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBackgroundColorNone(
            [in] int rowTypes, 
            [in] bool* bValue
         );

    29. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridLineWeight(
            [in] <enum> AcGridLineType gridLineType, 
            [in] <enum> AcRowType rowType, 
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    30. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridLineWeight(
            [in] int gridLineTypes, 
            [in] int rowTypes, 
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    31. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridColor(
            [in] <enum> AcGridLineType gridLineType, 
            [in] <enum> AcRowType rowType, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    32. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridColor(
            [in] int gridLineTypes, 
            [in] int rowTypes, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    33. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridVisibility(
            [in] <enum> AcGridLineType gridLineType, 
            [in] <enum> AcRowType rowType, 
            [out,retval] bool* bValue
         );

    34. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridVisibility(
            [in] int gridLineTypes, 
            [in] int rowTypes, 
            [in] bool bValue
         );

    35. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetDataType(
            [in] <enum> AcRowType rowType, 
            [out] int* pDataType, 
            [out] int* pUnitType
         );

    36. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetDataType(
            [in] int rowTypes, 
            [in] <enum> AcValueDataType nDataType, 
            [in] <enum> AcValueUnitType nUnitType
         );

    37. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFormat(
            [in] <enum> AcRowType rowType, 
            [out,retval] BSTR* pVal
         );

    38. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFormat(
            [in] int rowTypes, 
            [in] BSTR val
         );

    39. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CreateCellStyle(
            [in] BSTR bstrCellStyle
         );

    40. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CreateCellStyleFromStyle(
            [in] BSTR bstrCellStyle, 
            [in] BSTR bstrSourceCellStyle
         );

    41. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RenameCellStyle(
            [in] BSTR bstrOldName, 
            [in] BSTR bstrNewName
         );

    42. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DeleteCellStyle(
            [in] BSTR bstrCellStyle
         );

    43. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetUniqueCellStyleName(
            [in] BSTR pszBaseName, 
            [out,retval] BSTR* pbstrUniqueName
         );

    44. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetIsCellStyleInUse(
            [in] BSTR pszCellStyle, 
            [out,retval] bool* pVal
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumCellStyles(
            [out,retval] int* NumCellStyles
         );

    46. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellStyles(
            [in] VARIANT* cellStylesArray
         );

    47. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextStyleId(
            [in] BSTR bstrCellStyle, 
            [out,retval] <alias> LONG_PTR* pVal
         );

    48. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextStyleId(
            [in] BSTR bstrCellStyle, 
            [in] <alias> LONG_PTR val
         );

    49. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextHeight2(
            [in] BSTR bstrCellStyle, 
            [out,retval] double* pHeight
         );

    50. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextHeight2(
            [in] BSTR bstrCellStyle, 
            [in] double Height
         );

    51. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAlignment2(
            [in] BSTR bstrCellStyle, 
            [out,retval] int* pCellAlignment
         );

    52. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetAlignment2(
            [in] BSTR bstrCellStyle, 
            [in] <enum> AcCellAlignment cellAlignment
         );

    53. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetColor2(
            [in] BSTR bstrCellStyle, 
            [out,retval] <IDispatch> IAcadAcCmColor** color
         );

    54. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetColor2(
            [in] BSTR bstrCellStyle, 
            [in] <IDispatch> IAcadAcCmColor* color
         );

    55. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBackgroundColor2(
            [in] BSTR bstrCellStyle, 
            [out,retval] <IDispatch> IAcadAcCmColor** color
         );

    56. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBackgroundColor2(
            [in] BSTR bstrCellStyle, 
            [in] <IDispatch> IAcadAcCmColor* color
         );

    57. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetDataType2(
            [in] BSTR bstrCellStyle, 
            [out] int* pDataType, 
            [out] int* pUnitType
         );

    58. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetDataType2(
            [in] BSTR bstrCellStyle, 
            [in] <enum> AcValueDataType nDataType, 
            [in] <enum> AcValueUnitType nUnitType
         );

    59. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetFormat2(
            [in] BSTR bstrCellStyle, 
            [out] BSTR* pbstrFormat
         );

    60. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetFormat2(
            [in] BSTR bstrCellStyle, 
            [in] BSTR bstrFormat
         );

    61. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCellClass(
            [in] BSTR bstrCellStyle, 
            [out,retval] int* cellClass
         );

    62. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetCellClass(
            [in] BSTR bstrCellStyle, 
            [in] int cellClass
         );

    63. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetRotation(
            [in] BSTR bstrCellStyle, 
            [out,retval] double* Rotation
         );

    64. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetRotation(
            [in] BSTR bstrCellStyle, 
            [in] double Rotation
         );

    65. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetIsMergeAllEnabled(
            [in] BSTR bstrCellStyle, 
            [out,retval] bool* bEnable
         );

    66. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT EnableMergeAll(
            [in] BSTR bstrCellStyle, 
            [in] bool bEnable
         );

    67. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridLineWeight2(
            [in] BSTR bstrCellStyle, 
            [in] <enum> AcGridLineType gridLineType, 
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    68. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridLineWeight2(
            [in] BSTR bstrCellStyle, 
            [in] <enum> AcGridLineType gridLineTypes, 
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    69. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridColor2(
            [in] BSTR bstrCellStyle, 
            [in] <enum> AcGridLineType gridLineType, 
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    70. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridColor2(
            [in] BSTR bstrCellStyle, 
            [in] <enum> AcGridLineType gridLineTypes, 
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    71. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetGridVisibility2(
            [in] BSTR bstrCellStyle, 
            [in] <enum> AcGridLineType gridLineType, 
            [out,retval] bool* bValue
         );

    72. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetGridVisibility2(
            [in] BSTR bstrCellStyle, 
            [in] <enum> AcGridLineType gridLineTypes, 
            [in] bool bValue
         );

    73. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TemplateId(
            [out,retval] <alias> LONG_PTR* pVal
         );

    74. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TemplateId(
            [in] <alias> LONG_PTR pVal
         );

    75. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTemplateId(
            [in] <alias> LONG_PTR val, 
             <enum> AcMergeCellStyleOption option
         );

    76. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetTextStyleId32(
            [in] BSTR bstrCellStyle, 
            [out,retval] int* pVal
         );

    77. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTextStyleId32(
            [in] BSTR bstrCellStyle, 
            [in] int val
         );

    78. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TemplateId32(
            [out,retval] int* pVal
         );

    79. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TemplateId32(
            [in] int pVal
         );

    80. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetTemplateId32(
            [in] int val, 
             <enum> AcMergeCellStyleOption option
         );


==================================================================================

coclass AcadTableStyle;
CLSID = {F4C9A261-DD69-45E5-BA9C-B70BD8B9E770}; 

// Implemented interface: <IDispatch> IAcadTableStyle
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadSectionSettings;
CLSID = {3818E0CC-F69C-4FE6-9AEA-1529E681F357}; 

// Implemented interface: <IDispatch> IAcadSectionSettings
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadSectionTypeSettings;
CLSID = {9AAC1B61-6489-4646-9DEA-AF5BA23EC296}; 

// Implemented interface: <IDispatch> IAcadSectionTypeSettings2
// Implemented interface: <IDispatch> IAcadSectionTypeSettings
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadMLeaderStyle;
IID = {367A1F18-25AE-4CDE-BB13-4ADA1EDA066A}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* Name
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR Name
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Description(
            [out,retval] BSTR* Description
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Description(
            [in] BSTR Description
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BitFlags(
            [out,retval] int* bitFlag
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BitFlags(
            [in] int bitFlag
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ContentType(
            [out,retval] int* Type
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ContentType(
            [in] <enum> AcMLeaderContentType Type
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DrawMLeaderOrderType(
            [out,retval] int* Type
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DrawMLeaderOrderType(
            [in] <enum> AcDrawMLeaderOrderType Type
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DrawLeaderOrderType(
            [out,retval] int* Type
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DrawLeaderOrderType(
            [in] <enum> AcDrawLeaderOrderType Type
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaxLeaderSegmentsPoints(
            [out,retval] int* number
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaxLeaderSegmentsPoints(
            [in] int number
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FirstSegmentAngleConstraint(
            [out,retval] int* constraint
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FirstSegmentAngleConstraint(
            [in] <enum> AcSegmentAngleType constraint
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SecondSegmentAngleConstraint(
            [out,retval] int* constraint
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SecondSegmentAngleConstraint(
            [in] <enum> AcSegmentAngleType constraint
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLinetype(
            [out,retval] int* Type
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLinetype(
            [in] <enum> AcMLeaderType Type
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLineColor(
            [out,retval] <IDispatch> IAcadAcCmColor** color
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLineColor(
            [in] <IDispatch> IAcadAcCmColor* color
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLineTypeId(
            [out,retval] <alias> ACAD_LTYPE* Type
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLineTypeId(
            [in] <alias> ACAD_LTYPE Type
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLineWeight(
            [out,retval] int* weight
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLineWeight(
            [in] <enum> AcLineWeight weight
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EnableLanding(
            [out,retval] bool* enabled
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EnableLanding(
            [in] bool enabled
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LandingGap(
            [out,retval] double* LandingGap
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LandingGap(
            [in] double LandingGap
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EnableDogleg(
            [out,retval] bool* enabled
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EnableDogleg(
            [in] bool enabled
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DoglegLength(
            [out,retval] double* DoglegLength
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DoglegLength(
            [in] double DoglegLength
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowSymbol(
            [out,retval] BSTR* Name
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowSymbol(
            [in] BSTR Name
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowSize(
            [out,retval] double* size
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowSize(
            [in] double size
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextStyle(
            [out,retval] BSTR* Name
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextStyle(
            [in] BSTR Name
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextAttachmentDirection(
            [out,retval] int* dir
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextAttachmentDirection(
            [in] <enum> AcTextAttachmentDirection dir
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextLeftAttachmentType(
            [out,retval] int* Type
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextLeftAttachmentType(
            [in] <enum> AcTextAttachmentType Type
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextRightAttachmentType(
            [out,retval] int* Type
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextRightAttachmentType(
            [in] <enum> AcTextAttachmentType Type
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextTopAttachmentType(
            [out,retval] int* Type
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextTopAttachmentType(
            [in] <enum> AcVerticalTextAttachmentType Type
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextBottomAttachmentType(
            [out,retval] int* Type
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextBottomAttachmentType(
            [in] <enum> AcVerticalTextAttachmentType Type
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextColor(
            [out,retval] <IDispatch> IAcadAcCmColor** color
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextColor(
            [in] <IDispatch> IAcadAcCmColor* color
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextHeight(
            [out,retval] double* Height
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextHeight(
            [in] double Height
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EnableFrameText(
            [out,retval] bool* enabled
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EnableFrameText(
            [in] bool enabled
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AlignSpace(
            [out,retval] double* AlignSpace
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AlignSpace(
            [in] double AlignSpace
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Block(
            [out,retval] BSTR* Name
         );

    60. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Block(
            [in] BSTR Name
         );

    61. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BlockColor(
            [out,retval] <IDispatch> IAcadAcCmColor** color
         );

    62. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BlockColor(
            [in] <IDispatch> IAcadAcCmColor* color
         );

    63. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EnableBlockScale(
            [out,retval] bool* enabled
         );

    64. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EnableBlockScale(
            [in] bool enabled
         );

    65. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BlockScale(
            [out,retval] double* ScaleFactor
         );

    66. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BlockScale(
            [in] double ScaleFactor
         );

    67. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EnableBlockRotation(
            [out,retval] bool* enabled
         );

    68. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EnableBlockRotation(
            [in] bool enabled
         );

    69. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BlockRotation(
            [out,retval] double* Rotation
         );

    70. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BlockRotation(
            [in] double Rotation
         );

    71. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BlockConnectionType(
            [out,retval] int* Type
         );

    72. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BlockConnectionType(
            [in] <enum> AcBlockConnectionType Type
         );

    73. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] double* scale
         );

    74. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] double scale
         );

    75. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OverwritePropChanged(
            [out,retval] bool* changed
         );

    76. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Annotative(
            [out,retval] bool* Annotative
         );

    77. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Annotative(
            [in] bool Annotative
         );

    78. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BreakSize(
            [out,retval] double* size
         );

    79. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BreakSize(
            [in] double size
         );

    80. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextString(
            [out,retval] BSTR* Text
         );

    81. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextString(
            [in] BSTR Text
         );

    82. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextAngleType(
            [out,retval] int* Type
         );

    83. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextAngleType(
            [in] <enum> AcTextAngleType Type
         );

    84. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextAlignmentType(
            [out,retval] int* Type
         );

    85. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextAlignmentType(
            [in] <enum> AcTextAlignmentType Type
         );


==================================================================================

coclass AcadMLeaderStyle;
CLSID = {99211C95-3862-4E7C-8770-35C68CA1944B}; 

// Implemented interface: <IDispatch> IAcadMLeaderStyle
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadHyperlinks;
CLSID = {D929AFA9-A6A0-474B-9F26-F16358FA30B5}; 

// Implemented interface: <IDispatch> IAcadHyperlinks

==================================================================================

coclass AcadDictionary;
CLSID = {3CC77F29-1CFD-4754-8408-F3E947391238}; 

// Implemented interface: <IDispatch> IAcadDictionary
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadLayers;
CLSID = {B95A3E6E-5D0A-4080-A353-23F86C4ADEC8}; 

// Implemented interface: <IDispatch> IAcadLayers
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadDimStyles;
CLSID = {41A5BBED-65C9-4E4A-ABFF-B50183FE492E}; 

// Implemented interface: <IDispatch> IAcadDimStyles
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadDictionaries;
CLSID = {93665D2F-B163-4168-974D-1BE7D725CA6A}; 

// Implemented interface: <IDispatch> IAcadDictionaries
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadLineTypes;
CLSID = {86BFEA05-D473-4882-861B-2E71E3004DA5}; 

// Implemented interface: <IDispatch> IAcadLineTypes
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadMaterials;
CLSID = {B54A1EB0-28A6-43AE-A45B-BE3DFB94E91B}; 

// Implemented interface: <IDispatch> IAcadMaterials
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadTextStyles;
CLSID = {DDDFA318-7B86-4721-8572-659B0D32C314}; 

// Implemented interface: <IDispatch> IAcadTextStyles
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadUCSs;
CLSID = {1D20EF5D-1DE2-4167-9E12-CEB67EB87237}; 

// Implemented interface: <IDispatch> IAcadUCSs
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadRegisteredApplications;
CLSID = {A86E1440-9D1C-4323-9A34-C3686C089A7D}; 

// Implemented interface: <IDispatch> IAcadRegisteredApplications
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadViews;
CLSID = {2150A7ED-DEFA-466B-9F25-D040C2E7C302}; 

// Implemented interface: <IDispatch> IAcadViews
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadViewports;
CLSID = {1090BFA8-CBD9-452D-A967-F8188CD13DDD}; 

// Implemented interface: <IDispatch> IAcadViewports
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadGroups;
CLSID = {58306840-84F5-4A3D-A035-43CC986CA503}; 

// Implemented interface: <IDispatch> IAcadGroups
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadBlocks;
CLSID = {25FFDEB2-C0A1-4878-B810-2E0FA6A692AF}; 

// Implemented interface: <IDispatch> IAcadBlocks
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadLayouts;
CLSID = {173F2729-A2E4-4D7A-A287-4B80C819DE32}; 

// Implemented interface: <IDispatch> IAcadLayouts
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadPlotConfigurations;
CLSID = {004988DE-88AF-49B7-BC3B-68C4A4297107}; 

// Implemented interface: <IDispatch> IAcadPlotConfigurations
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadEntity;
CLSID = {9C4F54DC-58D1-4914-917D-DDC4FB1ABA23}; 

// Implemented interface: <IDispatch> IAcadEntity
// Implemented interface: <IDispatch> IAcadEntity2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadEntity2;
IID = {F091ED7A-0ED0-42C6-8305-3BA8B298A701}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

IDispatch IAcadShadowDisplay;
IID = {B323B6EE-F5BB-42A6-B474-6349D38B4FCC}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShadowDisplay(
            [out,retval] int* ShadowDisplay
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShadowDisplay(
            [in] <enum> AcShadowDisplayType ShadowDisplay
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EnableShadowDisplay(
            [out,retval] int* ShadowDisplay
         );


==================================================================================

IDispatch IAcadRasterImage2;
IID = {D4D91038-0FC5-4570-9A19-3305654BA646}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadRasterImage;
CLSID = {9713E314-F9EA-44E4-B9B7-7D6D53B1B4E5}; 

// Implemented interface: <IDispatch> IAcadRasterImage
// Implemented interface: <IDispatch> IAcadRasterImage2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcad3DFace2;
IID = {9D151696-E70C-4A02-8CFC-1B50283073C3}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass Acad3DFace;
CLSID = {5D80AEC3-8C87-4208-9D24-9E11D6151CF7}; 

// Implemented interface: <IDispatch> IAcad3DFace
// Implemented interface: <IDispatch> IAcad3DFace2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcad3DPolyline2;
IID = {8C3F0B40-3A2A-43F0-B9C4-23592AC825B2}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass Acad3DPolyline;
CLSID = {5DA978E5-9271-45A7-9609-65CE830168F3}; 

// Implemented interface: <IDispatch> IAcad3DPolyline
// Implemented interface: <IDispatch> IAcad3DPolyline2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadRegion2;
IID = {4C3C9F05-62C3-42FC-97AA-268E0C1FB972}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadRegion;
CLSID = {6676E009-9BA1-485C-98D6-8F1FFA59BB4F}; 

// Implemented interface: <IDispatch> IAcadRegion
// Implemented interface: <IDispatch> IAcadRegion2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcad3DSolid2;
IID = {9214B204-D97F-40F3-8748-1CFE7C91EAC7}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass Acad3DSolid;
CLSID = {B9D02C87-012B-4404-B9E5-6DD9C9BB8CC9}; 

// Implemented interface: <IDispatch> IAcad3DSolid
// Implemented interface: <IDispatch> IAcad3DSolid2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadArc2;
IID = {0AA7A517-F7A8-4372-BCC9-DEC7F6DBF9CC}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadArc;
CLSID = {5E829420-D163-4B2D-9EBF-AAC470B6D737}; 

// Implemented interface: <IDispatch> IAcadArc
// Implemented interface: <IDispatch> IAcadArc2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadAttribute2;
IID = {8B153087-E545-4109-8F5F-05A299C9DBA1}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadAttribute; // AutoCAD Attribute Object
CLSID = {476B42EA-EF37-403D-9BB2-DFB99E82328B}; 

// Implemented interface: <IDispatch> IAcadAttribute
// Implemented interface: <IDispatch> IAcadAttribute2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadAttributeReference;
IID = {1E834238-18C4-4D0A-BE02-D7AEFF94A609}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HorizontalAlignment(
            [out,retval] int* horizAlign
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HorizontalAlignment(
            [in] <enum> AcHorizontalAlignment horizAlign
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* insPoint
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT insPoint
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Normal(
            [out,retval] VARIANT* Normal
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Normal(
            [in] VARIANT Normal
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [out,retval] <alias> ACAD_ANGLE* obliAngle
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObliqueAngle(
            [in] <alias> ACAD_ANGLE obliAngle
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* scalFactor
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] <alias> ACAD_NOUNITS scalFactor
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StyleName(
            [out,retval] BSTR* Name
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StyleName(
            [in] BSTR Name
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TagString(
            [out,retval] BSTR* bstrTag
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TagString(
            [in] BSTR bstrTag
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextAlignmentPoint(
            [out,retval] VARIANT* alignPoint
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextAlignmentPoint(
            [in] VARIANT alignPoint
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextGenerationFlag(
            [out,retval] int* textGenFlag
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextGenerationFlag(
            [in] int textGenFlag
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextString(
            [out,retval] BSTR* bstrText
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextString(
            [in] BSTR bstrText
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Thickness(
            [out,retval] double* Thickness
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Thickness(
            [in] double Thickness
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VerticalAlignment(
            [out,retval] int* vertiAlign
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VerticalAlignment(
            [in] <enum> AcVerticalAlignment vertiAlign
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FieldLength(
            [out,retval] int* fieldLen
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FieldLength(
            [in] int fieldLen
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Alignment(
            [out,retval] int* align
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Alignment(
            [in] <enum> AcAlignment align
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UpsideDown(
            [out,retval] bool* bUpsideDown
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UpsideDown(
            [in] bool bUpsideDown
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Backward(
            [out,retval] bool* bBackward
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Backward(
            [in] bool bBackward
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Invisible(
            [out,retval] bool* bInvisible
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Invisible(
            [in] bool bInvisible
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Constant(
            [out,retval] bool* bConstant
         );

    40. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LockPosition(
            [out,retval] bool* bLockPosition
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MTextAttribute(
            [out,retval] bool* bMTextAttribute
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MTextAttribute(
            [in] bool bMTextAttribute
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MTextAttributeContent(
            [out,retval] BSTR* content
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MTextAttributeContent(
            [in] BSTR content
         );

    45. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT UpdateMTextAttribute(
         );

    46. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MTextBoundaryWidth(
            [out,retval] double* boundaryWidth
         );

    47. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MTextBoundaryWidth(
             double boundaryWidth
         );

    48. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MTextDrawingDirection(
            [out,retval] int* drawDir
         );

    49. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MTextDrawingDirection(
            [in] <enum> AcDrawingDirection drawDir
         );


==================================================================================

coclass AcadAttributeReference;
CLSID = {E1A7F239-4B51-41A9-A3EA-6A0B80F71168}; 

// Implemented interface: <IDispatch> IAcadAttributeReference
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadBlockReference2;
IID = {E5F55E8B-65E0-446F-B779-65FF8CAE916A}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadBlockReference;
CLSID = {E8E5BF1D-2DB6-473A-8E1A-4AF8CC07304D}; 

// Implemented interface: <IDispatch> IAcadBlockReference
// Implemented interface: <IDispatch> IAcadBlockReference2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadCircle2;
IID = {E073FE7E-6670-4154-AE69-86A8919800CE}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadCircle;
CLSID = {8229FCDA-0225-4EF2-960E-A93BCF521A2B}; 

// Implemented interface: <IDispatch> IAcadCircle
// Implemented interface: <IDispatch> IAcadCircle2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadEllipse2;
IID = {289F8215-99D8-42A3-9056-8A72C536CF7E}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadEllipse;
CLSID = {1A0F769C-84D7-4AD6-87E7-BA150B812A75}; 

// Implemented interface: <IDispatch> IAcadEllipse
// Implemented interface: <IDispatch> IAcadEllipse2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadHatch;
CLSID = {07BD7878-35B2-4F1F-A0AF-84F102CE8674}; 

// Implemented interface: <IDispatch> IAcadHatch
// Implemented interface: <IDispatch> IAcadHatch2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadHatch2; // AutoCAD Hatch2 Interface
IID = {9F63DB4F-F65C-4F9F-9351-DCA2CE462949}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BackgroundColor(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BackgroundColor(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

IDispatch IAcadLeader2;
IID = {CDB03FE1-B5CB-41A5-9D4B-B1D25989AF6B}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadLeader;
CLSID = {B6DE099E-8978-4064-B856-BA0024E2C31C}; 

// Implemented interface: <IDispatch> IAcadLeader
// Implemented interface: <IDispatch> IAcadLeader2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadSubEntity;
IID = {49376534-DD5B-4FD1-B310-32ED748D1198}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT OnModified(
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectName(
            [out,retval] BSTR* ObjectName
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT color(
            [out,retval] <IDispatch> IAcadAcCmColor** pColor
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT color(
            [in] <IDispatch> IAcadAcCmColor* pColor
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Layer(
            [out,retval] BSTR* Layer
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Linetype(
            [out,retval] BSTR* Linetype
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LinetypeScale(
            [out,retval] <alias> ACAD_NOUNITS* ltScale
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotStyleName(
            [out,retval] BSTR* plotStyle
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Lineweight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Hyperlinks(
            [out,retval] <IDispatch> IAcadHyperlinks** Hyperlinks
         );


==================================================================================

IDispatch IAcadMLeaderLeader;
IID = {641D3F97-6437-4F2A-82FC-2AD73D9554E0}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderType(
            [out,retval] int* Type
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderType(
            [in] <enum> AcMLeaderType Type
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLineColor(
            [out,retval] <IDispatch> IAcadAcCmColor** Type
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLineColor(
            [in] <IDispatch> IAcadAcCmColor* Type
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLinetype(
            [out,retval] <alias> ACAD_LTYPE* Linetype
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLinetype(
            [in] <alias> ACAD_LTYPE Linetype
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LeaderLineWeight(
            [out,retval] <alias> ACAD_LWEIGHT* Lineweight
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LeaderLineWeight(
            [in] <alias> ACAD_LWEIGHT Lineweight
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadType(
            [out,retval] int* BlockName
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadType(
            [in] <enum> AcDimArrowheadType BlockName
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [out,retval] double* size
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadSize(
            [in] double size
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [out,retval] BSTR* BlockName
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ArrowheadBlock(
            [in] BSTR BlockName
         );


==================================================================================

coclass AcadMLeaderLeader;
CLSID = {A1FB6193-64C2-4008-AC55-A2AD97FD38F8}; 

// Implemented interface: <IDispatch> IAcadMLeaderLeader
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadMLeader2;
IID = {0CBD009A-889E-4FE4-9DC4-26639F2B42B3}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadMLeader;
CLSID = {84BC656B-4F6C-4364-AECD-2FBBCD0B97DF}; 

// Implemented interface: <IDispatch> IAcadMLeader
// Implemented interface: <IDispatch> IAcadMLeader2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadLWPolyline2;
IID = {97D517F5-A428-47C1-A352-C70975D4923B}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadLWPolyline;
CLSID = {3C66A2DE-EBCF-48CF-8B0E-75595F40EB24}; 

// Implemented interface: <IDispatch> IAcadLWPolyline
// Implemented interface: <IDispatch> IAcadLWPolyline2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadLine2;
IID = {E22B5A8C-22F2-4EF3-BDCB-2708F9F9CCC5}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadLine;
CLSID = {7C34C0FB-6848-4FF8-975A-19A27FBAD1B4}; 

// Implemented interface: <IDispatch> IAcadLine
// Implemented interface: <IDispatch> IAcadLine2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadMText2;
IID = {606505A0-BC22-46FB-92A5-FD03CB797BEC}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadMText;
CLSID = {B992851C-8FFD-4C8A-81F2-B410369970AA}; 

// Implemented interface: <IDispatch> IAcadMText
// Implemented interface: <IDispatch> IAcadMText2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadPoint2;
IID = {564243C8-EC04-4186-A938-F7712BDBFDFA}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadPoint;
CLSID = {CB758EB0-0090-4DF9-A56C-0FA5EF5CDBC6}; 

// Implemented interface: <IDispatch> IAcadPoint
// Implemented interface: <IDispatch> IAcadPoint2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadPolyline2;
IID = {CAEFAE52-C1EA-4CD4-BD52-812A4745899C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadPolyline;
CLSID = {E8B54D88-EE03-4C0F-858D-879024BB8811}; 

// Implemented interface: <IDispatch> IAcadPolyline
// Implemented interface: <IDispatch> IAcadPolyline2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadPolygonMesh2;
IID = {C08F3144-E39E-4D88-8734-0339FEBA1FA4}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadPolygonMesh;
CLSID = {84D6D3CF-AB24-491C-9CE3-47B9A8CEE310}; 

// Implemented interface: <IDispatch> IAcadPolygonMesh
// Implemented interface: <IDispatch> IAcadPolygonMesh2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadRay2;
IID = {D940909A-C3FA-4A0D-B912-5714DB275895}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadRay;
CLSID = {806E3509-ED82-4B89-AC1C-10F2FECD6744}; 

// Implemented interface: <IDispatch> IAcadRay
// Implemented interface: <IDispatch> IAcadRay2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadShape2;
IID = {3325808A-E72E-4B47-B49A-B2A074A8FB6A}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadShape;
CLSID = {E6A37037-9367-4BE1-9832-D9D363D7D64C}; 

// Implemented interface: <IDispatch> IAcadShape
// Implemented interface: <IDispatch> IAcadShape2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadSolid2;
IID = {A0C51946-0674-4A88-97E1-591056C72B9F}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadSolid;
CLSID = {A4236B96-6EB4-49AA-88DC-E44EE458F81E}; 

// Implemented interface: <IDispatch> IAcadSolid
// Implemented interface: <IDispatch> IAcadSolid2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadSpline2;
IID = {617210B7-6B22-41BE-BBFC-2623B0D33A91}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT KnotParameterization(
            [out,retval] int* knotParamVal
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT KnotParameterization(
            [in] <enum> AcSplineKnotParameterizationType knotParamVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SplineFrame(
            [out,retval] int* Show
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SplineFrame(
            [in] <enum> AcSplineFrameType Show
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SplineMethod(
            [out,retval] int* method
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SplineMethod(
            [in] <enum> AcSplineMethodType method
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Degree2(
            [in] int method
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Degree2(
            [out,retval] int* Degree
         );

    9. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Closed2(
            [in] bool Degree
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Closed2(
            [out,retval] bool* fClose
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadSpline;
CLSID = {0CD182D2-2865-4233-8190-95EEC9A79997}; 

// Implemented interface: <IDispatch> IAcadSpline
// Implemented interface: <IDispatch> IAcadSpline2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadText2;
IID = {E27B9586-F7FA-4781-A9B3-9DC9A2E845A1}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadText;
CLSID = {90E52C50-7EF4-4DC1-BDD0-E2B8D0D3E4D3}; 

// Implemented interface: <IDispatch> IAcadText
// Implemented interface: <IDispatch> IAcadText2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadTolerance2;
IID = {8E124114-3B31-4584-AB53-E9D286092285}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadTolerance;
CLSID = {FF10AB5B-C276-4FF6-A856-B40C4C348977}; 

// Implemented interface: <IDispatch> IAcadTolerance
// Implemented interface: <IDispatch> IAcadTolerance2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadTrace2;
IID = {A3EDF166-F037-4717-BAD3-0F086476088E}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadTrace;
CLSID = {B8C86F77-7A21-4448-85E5-92FE27A65694}; 

// Implemented interface: <IDispatch> IAcadTrace
// Implemented interface: <IDispatch> IAcadTrace2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadXline2;
IID = {CB4F845C-BB98-417E-AB0E-57284D3BD46C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadXline;
CLSID = {9C8747C8-244B-42ED-B69F-1536D83E8504}; 

// Implemented interface: <IDispatch> IAcadXline
// Implemented interface: <IDispatch> IAcadXline2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadPViewport2;
IID = {21E1E8D2-BAE8-47C0-9BD9-C259EBB56696}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadPViewport;
CLSID = {37275283-1B95-48B9-A0EE-1E6DFA122EBF}; 

// Implemented interface: <IDispatch> IAcadPViewport
// Implemented interface: <IDispatch> IAcadPViewport2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadMInsertBlock;
CLSID = {DC9F9832-EE66-400F-907F-B9142995DF17}; 

// Implemented interface: <IDispatch> IAcadMInsertBlock
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadPolyfaceMesh2;
IID = {3F4C1BE1-7113-4920-B1DD-0236884F486F}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadPolyfaceMesh;
CLSID = {AC051ABE-78EF-4D28-92C3-3B301E909706}; 

// Implemented interface: <IDispatch> IAcadPolyfaceMesh
// Implemented interface: <IDispatch> IAcadPolyfaceMesh2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadMLine2;
IID = {D73566C6-831E-451D-BE88-A4A2334B6EC7}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadMLine;
CLSID = {251A45DF-0CB6-4FB3-BD02-C76B3A2A1C26}; 

// Implemented interface: <IDispatch> IAcadMLine
// Implemented interface: <IDispatch> IAcadMLine2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadExternalReference2;
IID = {5C4C4AE9-C55A-4270-A5BE-1B1A6AC12123}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadExternalReference;
CLSID = {E327FDF3-ACD6-4511-B717-562154E75C25}; 

// Implemented interface: <IDispatch> IAcadExternalReference
// Implemented interface: <IDispatch> IAcadExternalReference2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadTable2;
IID = {6BEF9CBD-5004-4C05-913A-F1E20BB27160}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadTable;
CLSID = {9F7166C6-2E46-427C-9956-D2601D0C1536}; 

// Implemented interface: <IDispatch> IAcadTable
// Implemented interface: <IDispatch> IAcadTable2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadOle;
IID = {C0B342AA-44C2-4121-847A-3B2AED8808D7}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* insPoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT insPoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rot
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rot
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] double* Width
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] double Width
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleWidth(
            [out,retval] double* swidth
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleWidth(
            [in] double swidth
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleHeight(
            [out,retval] double* sheight
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleHeight(
            [in] double sheight
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LockAspectRatio(
            [out,retval] bool* aspect
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LockAspectRatio(
            [in] bool aspect
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OleItemType(
            [out,retval] int* pType
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT OleItemType(
            [in] <enum> AcOleType pType
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OlePlotQuality(
            [out,retval] int* pPQuality
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT OlePlotQuality(
            [in] <enum> AcOlePlotQuality pPQuality
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OleSourceApp(
            [out,retval] BSTR* srcApp
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT OleSourceApp(
            [in] BSTR srcApp
         );


==================================================================================

IDispatch IAcadOle2;
IID = {FD80B568-9A62-42AF-AEA4-D2D2649BC1A3}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadOle;
CLSID = {62D2AB7D-473A-48FF-A407-90B3C2AAB760}; 

// Implemented interface: <IDispatch> IAcadOle
// Implemented interface: <IDispatch> IAcadOle2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadHelix;
IID = {54B8FA24-4971-4CC1-BD9C-FB3FCA98E7C5}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Position(
            [out,retval] VARIANT* StartPoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Position(
            [in] VARIANT StartPoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Constrain(
            [out,retval] int* constrainType
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Constrain(
            [in] <enum> AcHelixConstrainType constrainType
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Length
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Length
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Turns(
            [out,retval] <alias> ACAD_NOUNITS* Turns
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Turns(
            [in] <alias> ACAD_NOUNITS Turns
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TurnHeight(
            [out,retval] double* Distance
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TurnHeight(
            [in] double Distance
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BaseRadius(
            [out,retval] double* Radius
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BaseRadius(
            [in] double Radius
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TopRadius(
            [out,retval] double* Radius
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TopRadius(
            [in] double Radius
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Twist(
            [out,retval] int* twistType
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Twist(
            [in] <enum> AcHelixTwistType twistType
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TurnSlope(
            [out,retval] <alias> ACAD_ANGLE* slopeAngle
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TotalLength(
            [out,retval] double* TotalLength
         );


==================================================================================

IDispatch IAcadHelix2;
IID = {10AD5E09-08B2-4191-840B-88CA32ED9F40}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadHelix;
CLSID = {70E321A0-F2A1-4B96-9F9D-8272D67D6CC0}; 

// Implemented interface: <IDispatch> IAcadHelix
// Implemented interface: <IDispatch> IAcadHelix2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadSurface;
IID = {40CAE0C5-EE07-44A2-AF05-A2D9CF031606}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SurfaceType(
            [out,retval] BSTR* SurfaceType
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UIsolineDensity(
            [out,retval] int* density
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UIsolineDensity(
            [in] int density
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VIsolineDensity(
            [out,retval] int* density
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT VIsolineDensity(
            [in] int density
         );


==================================================================================

IDispatch IAcadSurface2;
IID = {E11F1783-D830-428D-B5FD-E8ADF374CBAC}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WireframeType(
            [out,retval] int* Type
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WireframeType(
            [in] <enum> AcWireframeType Type
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [out,retval] int* maintainAssoc
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [in] int maintainAssoc
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [out,retval] bool* bEnabled
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [in] bool bEnabled
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [out,retval] VARIANT* extDistances
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [in] VARIANT extDistances
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

IDispatch IAcadSurface3;
IID = {7E2210BD-479D-4443-BDD3-CAC3D30374E5}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [out,retval] VARIANT* associative
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [in] VARIANT associative
         );


==================================================================================

coclass AcadSurface;
CLSID = {0F7E0A1E-90C5-4043-A14E-49D9CCCBBC01}; 

// Implemented interface: <IDispatch> IAcadSurface
// Implemented interface: <IDispatch> IAcadSurface2
// Implemented interface: <IDispatch> IAcadSurface3
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadPlaneSurface;
IID = {196A47F4-9D29-4508-BC0F-4001070097A1}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}


==================================================================================

IDispatch IAcadPlaneSurface2;
IID = {3AEEDFC4-D020-4968-9C53-EA10E61B1665}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WireframeType(
            [out,retval] int* Type
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WireframeType(
            [in] <enum> AcWireframeType Type
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [out,retval] int* maintainAssoc
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [in] int maintainAssoc
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [out,retval] bool* bEnabled
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [in] bool bEnabled
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [out,retval] VARIANT* extDistances
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [in] VARIANT extDistances
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

IDispatch IAcadPlaneSurface3;
IID = {1C1DE320-DFE2-4DDD-8876-768044899C0B}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [out,retval] VARIANT* associative
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [in] VARIANT associative
         );


==================================================================================

coclass AcadPlaneSurface;
CLSID = {7A69115C-2631-4041-846A-9C4426F8C70C}; 

// Implemented interface: <IDispatch> IAcadPlaneSurface
// Implemented interface: <IDispatch> IAcadPlaneSurface2
// Implemented interface: <IDispatch> IAcadPlaneSurface3
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadExtrudedSurface;
IID = {6BCEB5EE-126A-4813-A527-3784EE4E44FC}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TaperAngle(
            [out,retval] <alias> ACAD_ANGLE* TaperAngle
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TaperAngle(
            [in] <alias> ACAD_ANGLE TaperAngle
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Direction(
            [out,retval] VARIANT* Direction
         );


==================================================================================

IDispatch IAcadExtrudedSurface2;
IID = {D9BB25A7-FB4C-486B-9F4A-3DE9FE24786D}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WireframeType(
            [out,retval] int* Type
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WireframeType(
            [in] <enum> AcWireframeType Type
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [out,retval] int* maintainAssoc
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [in] int maintainAssoc
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [out,retval] bool* bEnabled
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [in] bool bEnabled
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [out,retval] VARIANT* extDistances
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [in] VARIANT extDistances
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

IDispatch IAcadExtrudedSurface3;
IID = {B975FA00-BFCA-459C-8456-B6FCB300E2E9}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [out,retval] VARIANT* associative
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [in] VARIANT associative
         );


==================================================================================

coclass AcadExtrudedSurface;
CLSID = {FF21C1A0-F55F-4F83-AA07-FA17B19DC554}; 

// Implemented interface: <IDispatch> IAcadExtrudedSurface
// Implemented interface: <IDispatch> IAcadExtrudedSurface2
// Implemented interface: <IDispatch> IAcadExtrudedSurface3
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadRevolvedSurface;
IID = {BDB86C98-7974-453A-BBB9-65AED18970A5}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT RevolutionAngle(
            [out,retval] <alias> ACAD_ANGLE* revAngle
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT RevolutionAngle(
            [in] <alias> ACAD_ANGLE revAngle
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AxisPosition(
            [out,retval] VARIANT* AxisPosition
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AxisPosition(
            [in] VARIANT AxisPosition
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AxisDirection(
            [out,retval] VARIANT* AxisDirection
         );


==================================================================================

IDispatch IAcadRevolvedSurface2;
IID = {5CBD99A6-9C54-474C-B381-E03D557D3A11}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WireframeType(
            [out,retval] int* Type
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WireframeType(
            [in] <enum> AcWireframeType Type
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [out,retval] int* maintainAssoc
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [in] int maintainAssoc
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [out,retval] bool* bEnabled
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [in] bool bEnabled
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [out,retval] VARIANT* extDistances
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [in] VARIANT extDistances
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

IDispatch IAcadRevolvedSurface3;
IID = {DDB5ABD7-FEBC-44A5-8859-8C3A43CA4C73}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [out,retval] VARIANT* associative
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [in] VARIANT associative
         );


==================================================================================

coclass AcadRevolvedSurface;
CLSID = {17C28199-8C6A-477C-9B1E-31C6E1BB17F9}; 

// Implemented interface: <IDispatch> IAcadRevolvedSurface
// Implemented interface: <IDispatch> IAcadRevolvedSurface2
// Implemented interface: <IDispatch> IAcadRevolvedSurface3
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadSweptSurface;
IID = {04B7592D-6CEF-4537-8F76-712F64D6F42A}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ProfileRotation(
            [out,retval] <alias> ACAD_ANGLE* profileRotationAngle
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ProfileRotation(
            [in] <alias> ACAD_ANGLE profileRotationAngle
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Bank(
            [out,retval] bool* bBank
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Bank(
            [in] bool bBank
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Twist(
            [out,retval] <alias> ACAD_ANGLE* TwistAngle
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Twist(
            [in] <alias> ACAD_ANGLE TwistAngle
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT scale(
            [out,retval] double* scale
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT scale(
            [in] double scale
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Length(
            [out,retval] double* Length
         );


==================================================================================

IDispatch IAcadSweptSurface2;
IID = {5BAA1403-8C80-4441-BFB8-5A54AE0D2EFE}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WireframeType(
            [out,retval] int* Type
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WireframeType(
            [in] <enum> AcWireframeType Type
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [out,retval] int* maintainAssoc
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [in] int maintainAssoc
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [out,retval] bool* bEnabled
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [in] bool bEnabled
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [out,retval] VARIANT* extDistances
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [in] VARIANT extDistances
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

IDispatch IAcadSweptSurface3;
IID = {19C1C79D-C4D1-45F2-A4F7-F3401B274FE6}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [out,retval] VARIANT* associative
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [in] VARIANT associative
         );


==================================================================================

coclass AcadSweptSurface;
CLSID = {01051767-3175-4B06-81CF-F8F5CE3B0D2B}; 

// Implemented interface: <IDispatch> IAcadSweptSurface
// Implemented interface: <IDispatch> IAcadSweptSurface2
// Implemented interface: <IDispatch> IAcadSweptSurface3
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadLoftedSurface;
IID = {0585CAEB-38E3-453D-B26C-9E178DC45F2B}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumCrossSections(
            [out,retval] int* NumCrossSections
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumGuidePaths(
            [out,retval] int* NumGuidePaths
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SurfaceNormals(
            [out,retval] int* surfaceNormal
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SurfaceNormals(
            [in] <enum> AcLoftedSurfaceNormalType surfaceNormal
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartDraftAngle(
            [out,retval] <alias> ACAD_ANGLE* StartDraftAngle
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StartDraftAngle(
            [in] <alias> ACAD_ANGLE StartDraftAngle
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartDraftMagnitude(
            [out,retval] double* startDraftMag
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StartDraftMagnitude(
            [in] double startDraftMag
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndDraftAngle(
            [out,retval] <alias> ACAD_ANGLE* EndDraftAngle
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndDraftAngle(
            [in] <alias> ACAD_ANGLE EndDraftAngle
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndDraftMagnitude(
            [out,retval] double* endDraftMag
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndDraftMagnitude(
            [in] double endDraftMag
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Closed(
            [out,retval] bool* bClosed
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Closed(
            [in] bool bClosed
         );


==================================================================================

IDispatch IAcadLoftedSurface2;
IID = {9483F606-C600-4319-8631-9BEC1BC4AC0D}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartSmoothMagnitude(
            [out,retval] double* startSmoothMag
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StartSmoothMagnitude(
            [in] double startSmoothMag
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndSmoothMagnitude(
            [out,retval] double* endSmoothMag
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndSmoothMagnitude(
            [in] double endSmoothMag
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StartSmoothContinuity(
            [out,retval] int* StartSmoothContinuity
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StartSmoothContinuity(
            [in] int StartSmoothContinuity
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndSmoothContinuity(
            [out,retval] int* EndSmoothContinuity
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndSmoothContinuity(
            [in] int EndSmoothContinuity
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Periodic(
            [out,retval] bool* bPeriodic
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Periodic(
            [in] bool bPeriodic
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WireframeType(
            [out,retval] int* Type
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WireframeType(
            [in] <enum> AcWireframeType Type
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [out,retval] int* maintainAssoc
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [in] int maintainAssoc
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [out,retval] bool* bEnabled
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [in] bool bEnabled
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [out,retval] VARIANT* extDistances
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [in] VARIANT extDistances
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

IDispatch IAcadLoftedSurface3;
IID = {523EA2D7-88A4-4DDF-8A2B-E8ED41DBE570}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [out,retval] VARIANT* associative
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [in] VARIANT associative
         );


==================================================================================

coclass AcadLoftedSurface;
CLSID = {D3BB6333-B4CE-48DA-BF1B-198E9E8B95AF}; 

// Implemented interface: <IDispatch> IAcadLoftedSurface
// Implemented interface: <IDispatch> IAcadLoftedSurface2
// Implemented interface: <IDispatch> IAcadLoftedSurface3
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadSection;
CLSID = {85668C5B-36EE-4DBE-B4C6-A2B4D3F39164}; 

// Implemented interface: <IDispatch> IAcadSection
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadSectionManager;
CLSID = {CC734C6C-D4EE-4D24-B688-0DF99DDCCFA5}; 

// Implemented interface: <IDispatch> IAcadSectionManager
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadUnderlay;
IID = {A9B5B4BA-81F7-4F02-9CC0-19B524523DAA}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Contrast(
            [out,retval] int* Contrast
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Contrast(
            [in] int Contrast
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Fade(
            [out,retval] int* Fade
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Fade(
            [in] int Fade
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Position(
            [out,retval] VARIANT* pos
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Position(
            [in] VARIANT pos
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* rotAngle
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE rotAngle
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] double* Width
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] double Width
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] double* Height
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] double Height
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnderlayName(
            [out,retval] BSTR* Name
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnderlayName(
            [in] BSTR Name
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ItemName(
            [in] BSTR Name
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ItemName(
            [out,retval] BSTR* sheetName
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Monochrome(
            [out,retval] bool* bMono
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Monochrome(
            [in] bool bMono
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AdjustForBackground(
            [out,retval] bool* Value
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AdjustForBackground(
            [in] bool Value
         );

    21. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ClipBoundary(
            [in] VARIANT boundry
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ScaleFactor(
            [out,retval] <alias> ACAD_NOUNITS* ScaleFactor
         );

    23. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ScaleFactor(
            [in] <alias> ACAD_NOUNITS ScaleFactor
         );

    24. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT File(
            [out,retval] BSTR* Name
         );

    25. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT File(
            [in] BSTR Name
         );

    26. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnderlayVisibility(
            [out,retval] bool* fVisible
         );

    27. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnderlayVisibility(
            [in] bool fVisible
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ClippingEnabled(
            [out,retval] bool* kClip
         );

    29. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ClippingEnabled(
            [in] bool kClip
         );

    30. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UnderlayLayerOverrideApplied(
            [out,retval] int* bOverride
         );

    31. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UnderlayLayerOverrideApplied(
            [in] <enum> AcUnderlayLayerOverrideType bOverride
         );


==================================================================================

IDispatch IAcadDwfUnderlay;
IID = {22FE4523-B650-4DB4-AD11-933C9C5E56B1}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DWFFormat(
            [out,retval] BSTR* Name
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DWFFormat(
            [in] BSTR Name
         );


==================================================================================

coclass AcadDwfUnderlay;
CLSID = {7EC3558C-E1A0-4E0B-92BD-17CEA1902A6B}; 

// Implemented interface: <IDispatch> IAcadUnderlay
// Implemented interface: <IDispatch> IAcadDwfUnderlay
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadDgnUnderlay;
CLSID = {6FA2D697-24E2-46EF-941E-15D4019CDB8A}; 

// Implemented interface: <IDispatch> IAcadUnderlay
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadPdfUnderlay;
CLSID = {2F256D6B-9FF7-4062-B713-4DFDE28C4FC9}; 

// Implemented interface: <IDispatch> IAcadUnderlay
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadSubEntity;
CLSID = {7692C10F-3AA7-4F73-BE25-085A18A14066}; 

// Implemented interface: <IDispatch> IAcadSubEntity

==================================================================================

IDispatch IAcadSubEntSolidFace;
IID = {CBB27EFD-4292-4DFB-98F9-9593E3D7BC6C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Material(
            [out,retval] BSTR* Material
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Material(
            [in] BSTR Material
         );


==================================================================================

coclass AcadSubEntSolidFace;
CLSID = {6EA4F0E3-5198-43EB-90DD-A01C4808EC44}; 

// Implemented interface: <IDispatch> IAcadSubEntSolidFace

==================================================================================

IDispatch IAcadSubEntSolidEdge;
IID = {15CF0663-0E86-4628-B9FE-DED32A22FA10}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}


==================================================================================

coclass AcadSubEntSolidEdge;
CLSID = {6D445A1D-718B-4C13-86F8-F9541E20E0ED}; 

// Implemented interface: <IDispatch> IAcadSubEntSolidEdge

==================================================================================

IDispatch IAcadSubEntSolidVertex;
IID = {7DDA2E7F-17B8-468B-A8D6-3DE066B3CB4C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}


==================================================================================

coclass AcadSubEntSolidVertex;
CLSID = {A9C5C44C-E820-44EE-8FAA-D23F5D06CE80}; 

// Implemented interface: <IDispatch> IAcadSubEntSolidVertex

==================================================================================

IDispatch IAcadSubEntSolidNode;
IID = {2B120F0D-7F90-40E3-A91C-557129619D2D}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}


==================================================================================

coclass AcadSubEntSolidNode;
CLSID = {E6FCE1EB-59C7-409A-9DC3-0D4787F3D482}; 

// Implemented interface: <IDispatch> IAcadSubEntSolidNode

==================================================================================

IDispatch IAcadWipeout;
IID = {62B2E053-C836-4513-B07E-22C1F8E78236}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}


==================================================================================

IDispatch IAcadWipeout2;
IID = {58209C06-459C-4420-9B1C-875243317E84}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadWipeout;
CLSID = {264A30A0-3779-4244-858E-DF0BB31B525C}; 

// Implemented interface: <IDispatch> IAcadWipeout
// Implemented interface: <IDispatch> IAcadWipeout2

==================================================================================

IDispatch IAcadSubDMesh;
IID = {0198A43F-876E-418C-BFDD-841ED61B88E8}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Smoothness(
            [out,retval] int* level
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Smoothness(
            [in] int level
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* corners
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT corners
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [out,retval] VARIANT* pVal
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinate(
            [in] int Index, 
            [in] VARIANT Index
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VertexCount(
            [out,retval] int* Count
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FaceCount(
            [out,retval] int* Count
         );


==================================================================================

IDispatch IAcadSubDMesh2;
IID = {65D764C6-C6E2-412C-BAE1-28E93215A3D1}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadSubDMesh;
CLSID = {F1D4AB28-A403-4FFB-B73A-1F67DDBE696A}; 

// Implemented interface: <IDispatch> IAcadSubDMesh
// Implemented interface: <IDispatch> IAcadSubDMesh2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadSubDMeshFace;
IID = {B47B379F-4F9F-4347-BE75-BC062D812C99}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Material(
            [out,retval] BSTR* Material
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Material(
            [in] BSTR Material
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CreaseType(
            [out,retval] int* Type
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CreaseType(
            [in] <enum> AcMeshCreaseType Type
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CreaseLevel(
            [out,retval] double* level
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CreaseLevel(
            [in] double level
         );


==================================================================================

coclass AcadSubDMeshFace;
CLSID = {F2136C59-8155-45D9-B0FB-C5A8A884647A}; 

// Implemented interface: <IDispatch> IAcadSubDMeshFace
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadSubDMeshEdge;
IID = {3BD0F0E6-3766-4AAE-BD35-1FAC7D82215D}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CreaseType(
            [out,retval] int* Type
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CreaseType(
            [in] <enum> AcMeshCreaseType Type
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CreaseLevel(
            [out,retval] double* level
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CreaseLevel(
            [in] double level
         );


==================================================================================

coclass AcadSubDMeshEdge;
CLSID = {A0291F02-C52F-4521-925D-9BED6101D2B5}; 

// Implemented interface: <IDispatch> IAcadSubDMeshEdge
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadSubDMeshVertex;
IID = {8D839860-8124-4A1D-B215-CD7BE0CF7120}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Coordinates(
            [out,retval] VARIANT* coord
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Coordinates(
            [in] VARIANT coord
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CreaseType(
            [out,retval] int* Type
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CreaseType(
            [in] <enum> AcMeshCreaseType Type
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CreaseLevel(
            [out,retval] double* level
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CreaseLevel(
            [in] double level
         );


==================================================================================

coclass AcadSubDMeshVertex;
CLSID = {BA5E6315-1CCB-420A-89E7-B20A7CF9F822}; 

// Implemented interface: <IDispatch> IAcadSubDMeshVertex
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadNurbSurface;
IID = {DCC40699-46CE-4F09-AADF-1FA7750DF8EE}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CvHullDisplay(
            [out,retval] bool* Display
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CvHullDisplay(
            [in] bool Display
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WireframeType(
            [out,retval] int* Type
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WireframeType(
            [in] <enum> AcWireframeType Type
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [out,retval] int* maintainAssoc
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaintainAssociativity(
            [in] int maintainAssoc
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [out,retval] bool* bEnabled
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowAssociativity(
            [in] bool bEnabled
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [out,retval] VARIANT* extDistances
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EdgeExtensionDistances(
            [in] VARIANT extDistances
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

IDispatch IAcadNurbSurface2;
IID = {C72FF0CF-F6E2-411F-8686-0C19188AAAA8}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [out,retval] VARIANT* associative
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SurfTrimAssociativity(
            [in] VARIANT associative
         );


==================================================================================

coclass AcadNurbSurface;
CLSID = {FD81606F-CA56-41DB-8AA5-84B80FC0645B}; 

// Implemented interface: <IDispatch> IAcadNurbSurface
// Implemented interface: <IDispatch> IAcadNurbSurface2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadDimension;
CLSID = {3ACEB335-09B8-4843-BA8C-15036F91E555}; 

// Implemented interface: <IDispatch> IAcadDimension
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadDimAligned2;
IID = {7EDFB0D0-8CA4-4394-AA52-D4412F3FD34D}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadDimAligned;
CLSID = {5B1197B8-B852-4C5B-B9B0-B04D5D1A9086}; 

// Implemented interface: <IDispatch> IAcadDimAligned
// Implemented interface: <IDispatch> IAcadDimAligned2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadDimAngular2;
IID = {BA050BF9-0E35-4B78-BA45-873A817C48F9}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadDimAngular;
CLSID = {AD5078D0-C038-438A-8B42-B1F16A6FED4C}; 

// Implemented interface: <IDispatch> IAcadDimAngular
// Implemented interface: <IDispatch> IAcadDimAngular2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadDimDiametric2;
IID = {A1163328-CD71-41DF-B5BF-E72906461A59}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadDimDiametric;
CLSID = {B63A17A3-07C5-46F6-AB22-981EDFD875B8}; 

// Implemented interface: <IDispatch> IAcadDimDiametric
// Implemented interface: <IDispatch> IAcadDimDiametric2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadDimOrdinate2;
IID = {4610B4DA-C7D3-4024-B70F-7788A8023F02}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadDimOrdinate;
CLSID = {FA6D095A-A5A9-4C44-AA07-FEFC8B1D29CF}; 

// Implemented interface: <IDispatch> IAcadDimOrdinate
// Implemented interface: <IDispatch> IAcadDimOrdinate2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadDimRadial2;
IID = {92CE7B25-A4D2-4EB9-827C-0695A21A4F6F}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadDimRadial;
CLSID = {BA31C14D-F408-405B-928A-192DB56F8CCE}; 

// Implemented interface: <IDispatch> IAcadDimRadial
// Implemented interface: <IDispatch> IAcadDimRadial2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadDimRotated2;
IID = {3287652C-6802-4FF6-B1A1-31573BD7D8C3}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadDimRotated;
CLSID = {E2AEE1D6-7BBB-4D6A-9B96-D529D56E7CCD}; 

// Implemented interface: <IDispatch> IAcadDimRotated
// Implemented interface: <IDispatch> IAcadDimRotated2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadDim3PointAngular2;
IID = {2509B098-C401-4944-BF13-8413F92C20F8}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadDim3PointAngular;
CLSID = {37ACB9D6-9FA4-496E-A550-BA1B74C31E0A}; 

// Implemented interface: <IDispatch> IAcadDim3PointAngular
// Implemented interface: <IDispatch> IAcadDim3PointAngular2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadDimArcLength2;
IID = {4F83352C-5D4D-4CF1-8A8D-B508BCBD938E}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadDimArcLength;
CLSID = {13F1081A-13C7-4AFC-B9C2-56AE98FADD0C}; 

// Implemented interface: <IDispatch> IAcadDimArcLength
// Implemented interface: <IDispatch> IAcadDimArcLength2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadDimRadialLarge2;
IID = {E1A771A2-1D85-43A0-B4CA-9E98550A9561}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EntityTransparency(
            [out,retval] BSTR* Transparency
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EntityTransparency(
            [in] BSTR Transparency
         );


==================================================================================

coclass AcadDimRadialLarge;
CLSID = {1C9A43C5-E911-4B7B-BFA0-D4BD9F4B4CF0}; 

// Implemented interface: <IDispatch> IAcadDimRadialLarge
// Implemented interface: <IDispatch> IAcadDimRadialLarge2
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadBlock;
CLSID = {63F062F5-44BD-4C7D-A142-28CCE3EECEB8}; 

// Implemented interface: <IDispatch> IAcadBlock
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadModelSpace;
CLSID = {151FB9D2-38F4-456F-8720-97BBEBDB82A8}; 

// Implemented interface: <IDispatch> IAcadModelSpace
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadPaperSpace;
CLSID = {AF65484D-9BC9-4C36-A4E3-37BD3D726222}; 

// Implemented interface: <IDispatch> IAcadPaperSpace
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

IDispatch IAcadPointCloud;
IID = {16B74D4D-10B6-452E-A9A5-0DCC8A044BD2}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT InsertionPoint(
            [out,retval] VARIANT* EndPoint
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT InsertionPoint(
            [in] VARIANT EndPoint
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT scale(
            [out,retval] <alias> ACAD_NOUNITS* val
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT scale(
            [in] <alias> ACAD_NOUNITS val
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Rotation(
            [out,retval] <alias> ACAD_ANGLE* val
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Rotation(
            [in] <alias> ACAD_ANGLE val
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UseEntityColor(
            [out,retval] int* val
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UseEntityColor(
            [in] <enum> AcPointCloudColorType val
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Locked(
            [out,retval] bool* val
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Locked(
            [in] bool val
         );


==================================================================================

coclass AcadPointCloud;
CLSID = {AD939B01-9EE1-4747-85AD-8F548AA6EBAF}; 

// Implemented interface: <IDispatch> IAcadPointCloud
// Implemented interface: <Interface> IAcadObjectEvents

==================================================================================

coclass AcadFileDependency;
CLSID = {490BE6CE-A6B5-4A45-92CA-1DA237089AE6}; 

// Implemented interface: <IDispatch> IAcadFileDependency

==================================================================================

coclass AcadFileDependencies;
CLSID = {596CEF1D-2D7A-42FE-8FC4-76B087BCEBDE}; 

// Implemented interface: <IDispatch> IAcadFileDependencies

==================================================================================

coclass AcadSummaryInfo;
CLSID = {EE7164EF-162A-4E90-BC38-5EA01200CFF3}; 

// Implemented interface: <IDispatch> IAcadSummaryInfo

==================================================================================

coclass AcadDatabasePreferences;
CLSID = {DF0B47FD-EF47-42A5-8AF0-F61B04B0A9D8}; 

// Implemented interface: <IDispatch> IAcadDatabasePreferences

==================================================================================

coclass AcadDatabase;
CLSID = {41D36B39-B3AE-468D-8AB8-04CC1007E0F6}; 

// Implemented interface: <IDispatch> IAcadDatabase

==================================================================================

enum AcadSecurityParamsType;
{
  ACADSECURITYPARAMS_ENCRYPT_DATA = 1,
  ACADSECURITYPARAMS_ENCRYPT_PROPS = 2,
  ACADSECURITYPARAMS_SIGN_DATA = 16,
  ACADSECURITYPARAMS_ADD_TIMESTAMP = 32
};


==================================================================================

enum AcadSecurityParamsConstants;
{
  ACADSECURITYPARAMS_ALGID_RC4 = 26625
};


==================================================================================

IDispatch IAcadSecurityParams;
IID = {E9385F39-80AB-4DA9-8E6D-78842B8BED79}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Action(
            [in] int 
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Action(
            [out,retval] int* pOperations
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Password(
            [in] BSTR pOperations
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Password(
            [out,retval] BSTR* pSecret
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ProviderType(
            [in] int pSecret
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ProviderType(
            [out,retval] int* pProvType
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ProviderName(
            [in] BSTR pProvType
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ProviderName(
            [out,retval] BSTR* pProvName
         );

    9. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Algorithm(
            [in] int pProvName
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Algorithm(
            [out,retval] int* pAlgId
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT KeyLength(
            [in] int pAlgId
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT KeyLength(
            [out,retval] int* pKeyLen
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Subject(
            [in] BSTR pKeyLen
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Subject(
            [out,retval] BSTR* pCertSubject
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Issuer(
            [in] BSTR pCertSubject
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Issuer(
            [out,retval] BSTR* pCertIssuer
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SerialNumber(
            [in] BSTR pCertIssuer
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SerialNumber(
            [out,retval] BSTR* pSerialNum
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Comment(
            [in] BSTR pSerialNum
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Comment(
            [out,retval] BSTR* pText
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TimeServer(
            [in] BSTR pText
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TimeServer(
            [out,retval] BSTR* pTimeServerName
         );


==================================================================================

coclass AcadSecurityParams;
CLSID = {D572547B-8F57-45CB-8754-72B1606C5DAF}; 

// Implemented interface: <IDispatch> IAcadSecurityParams

==================================================================================

IDispatch IAcadLayerStateManager;
IID = {4648C336-6A3B-4C87-93F4-3F2ACD65E95E}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetDatabase(
            [in] <IDispatch> IAcadDatabase* iHostDb
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Mask(
            [in] BSTR bsName, 
            [in] <enum> AcLayerStateMask bsName
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Mask(
            [in] BSTR bsName, 
            [out,retval] int* eMask
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Save(
            [in] BSTR bsName, 
            [in] <enum> AcLayerStateMask eMask
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Restore(
            [in] BSTR bsName
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Delete(
            [in] BSTR bsName
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Rename(
            [in] BSTR bsName, 
            [in] BSTR bsNewName
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Import(
            [in] BSTR bsFilename
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Export(
            [in] BSTR bsName, 
            [in] BSTR bsFilename
         );


==================================================================================

coclass AcadLayerStateManager;
CLSID = {C287AE4D-E7AC-49D0-AC33-3E76B18FAA89}; 

// Implemented interface: <IDispatch> IAcadLayerStateManager

==================================================================================

IDispatch _DAcadApplicationEvents;
IID = {1F893620-C96D-4361-BBAF-A61D4144B7F8}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC DISPATCH;
         HRESULT SysVarChanged(
            [in] BSTR SysvarName, 
            [in] VARIANT newVal
         );

    2. 
STDCALL FUNC DISPATCH;
         HRESULT NewDrawing(
         );

    3. 
STDCALL FUNC DISPATCH;
         HRESULT AppActivate(
         );

    4. 
STDCALL FUNC DISPATCH;
         HRESULT AppDeactivate(
         );

    5. 
STDCALL FUNC DISPATCH;
         HRESULT WindowMovedOrResized(
            [in] int HWNDFrame, 
            [in] bool bMoved
         );

    6. 
STDCALL FUNC DISPATCH;
         HRESULT BeginModal(
         );

    7. 
STDCALL FUNC DISPATCH;
         HRESULT EndModal(
         );

    8. 
STDCALL FUNC DISPATCH;
         HRESULT BeginQuit(
            [in,out] bool* Cancel
         );

    9. 
STDCALL FUNC DISPATCH;
         HRESULT BeginFileDrop(
            [in] BSTR FileName, 
            [in,out] bool* Cancel
         );

    10. 
STDCALL FUNC DISPATCH;
         HRESULT ARXLoaded(
            [in] BSTR AppName
         );

    11. 
STDCALL FUNC DISPATCH;
         HRESULT ARXUnloaded(
            [in] BSTR AppName
         );

    12. 
STDCALL FUNC DISPATCH;
         HRESULT BeginPlot(
            [in] BSTR DrawingName
         );

    13. 
STDCALL FUNC DISPATCH;
         HRESULT EndPlot(
            [in] BSTR DrawingName
         );

    14. 
STDCALL FUNC DISPATCH;
         HRESULT BeginSave(
            [in] BSTR FileName
         );

    15. 
STDCALL FUNC DISPATCH;
         HRESULT EndSave(
            [in] BSTR FileName
         );

    16. 
STDCALL FUNC DISPATCH;
         HRESULT BeginOpen(
            [in,out] BSTR* FileName
         );

    17. 
STDCALL FUNC DISPATCH;
         HRESULT EndOpen(
            [in] BSTR FileName
         );

    18. 
STDCALL FUNC DISPATCH;
         HRESULT BeginCommand(
            [in] BSTR CommandName
         );

    19. 
STDCALL FUNC DISPATCH;
         HRESULT EndCommand(
            [in] BSTR CommandName
         );

    20. 
STDCALL FUNC DISPATCH;
         HRESULT BeginLisp(
            [in] BSTR FirstLine
         );

    21. 
STDCALL FUNC DISPATCH;
         HRESULT EndLisp(
         );

    22. 
STDCALL FUNC DISPATCH;
         HRESULT LispCancelled(
         );

    23. 
STDCALL FUNC DISPATCH;
         HRESULT WindowChanged(
            [in] <enum> AcWindowState WindowState
         );


==================================================================================

IDispatch IAcadDocument;
IID = {422850CF-66BE-47E4-9021-94869E3935A2}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Plot(
            [out,retval] 
** pPlot
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveLayer(
            [out,retval] <IDispatch> IAcadLayer** pActLayer
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveLayer(
            [in] <IDispatch> IAcadLayer* pActLayer
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveLinetype(
            [out,retval] <IDispatch> IAcadLineType** pActLinetype
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveLinetype(
            [in] <IDispatch> IAcadLineType* pActLinetype
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveDimStyle(
            [out,retval] <IDispatch> IAcadDimStyle** pActDimStyle
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveDimStyle(
            [in] <IDispatch> IAcadDimStyle* pActDimStyle
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveTextStyle(
            [out,retval] <IDispatch> IAcadTextStyle** pActTextStyle
         );

    9. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveTextStyle(
            [in] <IDispatch> IAcadTextStyle* pActTextStyle
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveUCS(
            [out,retval] <IDispatch> IAcadUCS** pActUCS
         );

    11. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveUCS(
            [in] <IDispatch> IAcadUCS* pActUCS
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveViewport(
            [out,retval] <IDispatch> IAcadViewport** pActView
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveViewport(
            [in] <IDispatch> IAcadViewport* pActView
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActivePViewport(
            [out,retval] <IDispatch> IAcadPViewport** pActView
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActivePViewport(
            [in] <IDispatch> IAcadPViewport* pActView
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveSpace(
            [out,retval] int* ActSpace
         );

    17. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveSpace(
            [in] <enum> AcActiveSpace ActSpace
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SelectionSets(
            [out,retval] 
** pSelSets
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveSelectionSet(
            [out,retval] 
** pSelSet
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FullName(
            [out,retval] BSTR* FullName
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* Name
         );

    22. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Path(
            [out,retval] BSTR* Path
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectSnapMode(
            [out,retval] bool* fSnapMode
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObjectSnapMode(
            [in] bool fSnapMode
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ReadOnly(
            [out,retval] bool* bReadOnly
         );

    26. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Saved(
            [out,retval] bool* bSaved
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MSpace(
            [out,retval] bool* Mode
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MSpace(
            [in] bool Mode
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Utility(
            [out,retval] 
** pUtil
         );

    30. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Open(
            [in] BSTR FullName, 
            [in,optional] VARIANT Password, 
            [out,retval] 
** pDocObj
         );

    31. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AuditInfo(
            [in] bool FixErr
         );

    32. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Import(
            [in] BSTR FileName, 
            [in] VARIANT InsertionPoint, 
            [in] double ScaleFactor, 
            [out,retval] idispatch* pObj
         );

    33. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Export(
            [in] BSTR FileName, 
            [in] BSTR Extension, 
            [in] 
* SelectionSet
         );

    34. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT New(
            [in] BSTR TemplateFileName, 
            [out,retval] 
** pDocObj
         );

    35. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Save(
         );

    36. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SaveAs(
            [in] BSTR FullFileName, 
            [in,optional] VARIANT SaveAsType, 
            [in,optional] VARIANT vSecurityParams
         );

    37. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Wblock(
            [in] BSTR FileName, 
            [in] 
* SelectionSet
         );

    38. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT PurgeAll(
         );

    39. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetVariable(
            [in] BSTR Name, 
            [out,retval] VARIANT* Value
         );

    40. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetVariable(
            [in] BSTR Name, 
            [in] VARIANT Value
         );

    41. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT LoadShapeFile(
            [in] BSTR FullName
         );

    42. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Regen(
            [in] <enum> AcRegenType WhichViewports
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PickfirstSelectionSet(
            [out,retval] 
** pSelSet
         );

    44. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Active(
            [out,retval] bool* pvbActive
         );

    45. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Activate(
         );

    46. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Close(
            [in,optional] VARIANT SaveChanges, 
            [in,optional] VARIANT FileName
         );

    47. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WindowState(
            [in] <enum> AcWindowState FileName
         );

    48. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WindowState(
            [out,retval] int* pWinState
         );

    49. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] int pWinState
         );

    50. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] int* pWidth
         );

    51. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] int pWidth
         );

    52. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] int* pHeight
         );

    53. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveLayout(
            [in] <IDispatch> IAcadLayout* pHeight
         );

    54. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveLayout(
            [out,retval] <IDispatch> IAcadLayout** pLayout
         );

    55. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SendCommand(
            [in] BSTR Command
         );

    56. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HWND(
            [out,retval] <alias> LONG_PTR* HWND
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WindowTitle(
            [out,retval] BSTR* Title
         );

    58. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Database(
            [out,retval] <IDispatch> IAcadDatabase** pDatabase
         );

    60. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT StartUndoMark(
         );

    61. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT EndUndoMark(
         );

    62. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveMaterial(
            [out,retval] <IDispatch> IAcadMaterial** pActMaterial
         );

    63. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveMaterial(
            [in] <IDispatch> IAcadMaterial* pActMaterial
         );

    64. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HWND32(
            [out,retval] int* HWND
         );


==================================================================================

IDispatch IAcadPlot;
IID = {F09EAE5B-8255-402A-B58E-77BF058717BF}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT QuietErrorMode(
            [out,retval] bool* bErrorMode
         );

    3. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT QuietErrorMode(
            [in] bool bErrorMode
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NumberOfCopies(
            [out,retval] int* numCopies
         );

    5. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT NumberOfCopies(
            [in] int numCopies
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BatchPlotProgress(
            [out,retval] bool* bProgressStatus
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BatchPlotProgress(
            [in] bool bProgressStatus
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DisplayPlotPreview(
            [in] <enum> AcPreviewMode Preview
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT PlotToFile(
            [in] BSTR plotFile, 
            [in,optional] VARIANT plotConfig, 
            [out,retval] bool* success
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT PlotToDevice(
            [in,optional] VARIANT plotConfig, 
            [out,retval] bool* success
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetLayoutsToPlot(
            [in] VARIANT layoutList
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT StartBatchMode(
            [in] int entryCount
         );


==================================================================================

IDispatch IAcadApplication;
IID = {2959C1CC-8577-4EDB-ADDC-6EBBAB147926}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Visible(
            [out,retval] bool* Visible
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Visible(
            [in] bool Visible
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* pAppName
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Caption(
            [out,retval] BSTR* bstrCaption
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveDocument(
            [out,retval] 
** pActiveDoc
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveDocument(
            [in] 
* pActiveDoc
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FullName(
            [out,retval] BSTR* FullName
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] int* Height
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Height(
            [in] int Height
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WindowLeft(
            [out,retval] int* left
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WindowLeft(
            [in] int left
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Path(
            [out,retval] BSTR* bstrPath
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LocaleId(
            [out,retval] int* lcid
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WindowTop(
            [out,retval] int* top
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WindowTop(
            [in] int top
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Version(
            [out,retval] BSTR* bstrVer
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] int* Width
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Width(
            [in] int Width
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Preferences(
            [out,retval] 
** pPreferences
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StatusId(
            [in] idispatch VportObj, 
            [out,retval] bool* bStatus
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ListArx(
            [out,retval] VARIANT* pVarListArray
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT LoadArx(
            [in] BSTR Name
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetInterfaceObject(
            [in] BSTR ProgID, 
            [out,retval] idispatch* pObj
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT UnloadArx(
            [in] BSTR Name
         );

    26. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Update(
         );

    27. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Quit(
         );

    28. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Zoom(
            [in] int Type, 
            [in] VARIANT* vParams
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT VBE(
            [out,retval] idispatch* pDispVBE
         );

    30. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MenuGroups(
            [out,retval] 
** pMenuGroups
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MenuBar(
            [out,retval] 
** pMenuBar
         );

    32. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT LoadDVB(
            [in] BSTR Name
         );

    33. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT UnloadDVB(
            [in] BSTR Name
         );

    34. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Documents(
            [out,retval] 
** pDocuments
         );

    35. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Eval(
            [in] BSTR Expression
         );

    36. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WindowState(
            [out,retval] int* eWinState
         );

    37. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WindowState(
            [in] <enum> AcWindowState eWinState
         );

    38. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RunMacro(
            [in] BSTR MacroPath
         );

    39. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ZoomExtents(
         );

    40. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ZoomAll(
         );

    41. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ZoomCenter(
            [in] VARIANT Center, 
            [in] double Magnify
         );

    42. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ZoomScaled(
            [in] double scale, 
            [in] <enum> AcZoomScaleType ScaleType
         );

    43. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ZoomWindow(
            [in] VARIANT LowerLeft, 
            [in] VARIANT UpperRight
         );

    44. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ZoomPickWindow(
         );

    45. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAcadState(
            [out,retval] 
** pVal
         );

    46. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ZoomPrevious(
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HWND(
            [out,retval] <alias> LONG_PTR* HWND
         );

    48. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HWND32(
            [out,retval] int* HWND
         );


==================================================================================

IDispatch IAcadPreferences;
IID = {A76274F1-0C61-4185-BCED-7C35C81EA4B9}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Files(
            [out,retval] 
** pObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Display(
            [out,retval] 
** pObj
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OpenSave(
            [out,retval] 
** pObj
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Output(
            [out,retval] 
** pObj
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT System(
            [out,retval] 
** pObj
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT User(
            [out,retval] 
** pObj
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Drafting(
            [out,retval] 
** pObj
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Selection(
            [out,retval] 
** pObj
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Profiles(
            [out,retval] 
** pObj
         );


==================================================================================

IDispatch IAcadPreferencesFiles;
IID = {E28C0150-D44F-4D4C-BEAB-1177E1814045}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SupportPath(
            [in] BSTR pAppObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SupportPath(
            [out,retval] BSTR* orient
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DriversPath(
            [in] BSTR orient
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DriversPath(
            [out,retval] BSTR* Path
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MenuFile(
            [in] BSTR Path
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MenuFile(
            [out,retval] BSTR* Path
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EnterpriseMenuFile(
            [in] BSTR Path
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EnterpriseMenuFile(
            [out,retval] BSTR* Path
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CustomIconPath(
            [in] BSTR Path
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CustomIconPath(
            [out,retval] BSTR* Path
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HelpFilePath(
            [in] BSTR Path
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HelpFilePath(
            [out,retval] BSTR* Path
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DefaultInternetURL(
            [in] BSTR Path
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DefaultInternetURL(
            [out,retval] BSTR* Path
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ConfigFile(
            [out,retval] BSTR* ConfigFile
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LicenseServer(
            [out,retval] BSTR* Path
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextEditor(
            [in] BSTR Path
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextEditor(
            [out,retval] BSTR* Path
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MainDictionary(
            [in] BSTR Path
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MainDictionary(
            [out,retval] BSTR* Path
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CustomDictionary(
            [in] BSTR Path
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CustomDictionary(
            [out,retval] BSTR* Path
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltFontFile(
            [in] BSTR Path
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltFontFile(
            [out,retval] BSTR* fontFile
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FontFileMap(
            [in] BSTR fontFile
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FontFileMap(
            [out,retval] BSTR* Path
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrintFile(
            [in] BSTR Path
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrintFile(
            [out,retval] BSTR* Path
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrintSpoolExecutable(
            [in] BSTR Path
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrintSpoolExecutable(
            [out,retval] BSTR* Path
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PostScriptPrologFile(
            [in] BSTR Path
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PostScriptPrologFile(
            [out,retval] BSTR* Path
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrintSpoolerPath(
            [in] BSTR Path
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrintSpoolerPath(
            [out,retval] BSTR* Path
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoSavePath(
            [in] BSTR Path
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoSavePath(
            [out,retval] BSTR* AutoSavePath
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TemplateDwgPath(
            [in] BSTR AutoSavePath
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TemplateDwgPath(
            [out,retval] BSTR* Path
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LogFilePath(
            [in] BSTR Path
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LogFilePath(
            [out,retval] BSTR* Path
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TempFilePath(
            [in] BSTR Path
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TempFilePath(
            [out,retval] BSTR* Path
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TempXrefPath(
            [in] BSTR Path
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TempXrefPath(
            [out,retval] BSTR* Path
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextureMapPath(
            [in] BSTR Path
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextureMapPath(
            [out,retval] BSTR* Path
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AltTabletMenuFile(
            [in] BSTR Path
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AltTabletMenuFile(
            [out,retval] BSTR* MenuFile
         );

    50. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetProjectFilePath(
            [in] BSTR ProjectName, 
            [in] BSTR ProjectFilePath
         );

    51. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetProjectFilePath(
            [in] BSTR ProjectName, 
            [out,retval] BSTR* Path
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrinterConfigPath(
            [in] BSTR Path
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrinterConfigPath(
            [out,retval] BSTR* Path
         );

    54. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrinterDescPath(
            [in] BSTR Path
         );

    55. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrinterDescPath(
            [out,retval] BSTR* Path
         );

    56. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrinterStyleSheetPath(
            [in] BSTR Path
         );

    57. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrinterStyleSheetPath(
            [out,retval] BSTR* Path
         );

    58. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT WorkspacePath(
            [in] BSTR Path
         );

    59. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT WorkspacePath(
            [out,retval] BSTR* Path
         );

    60. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ObjectARXPath(
            [in] BSTR Path
         );

    61. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ObjectARXPath(
            [out,retval] BSTR* Path
         );

    62. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ColorBookPath(
            [in] BSTR Path
         );

    63. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ColorBookPath(
            [out,retval] BSTR* Path
         );

    64. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ToolPalettePath(
            [in] BSTR Path
         );

    65. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ToolPalettePath(
            [out,retval] BSTR* Path
         );

    66. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT QNewTemplateFile(
            [in] BSTR Path
         );

    67. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT QNewTemplateFile(
            [out,retval] BSTR* templateFile
         );

    68. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotLogFilePath(
            [in] BSTR templateFile
         );

    69. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotLogFilePath(
            [out,retval] BSTR* templateFile
         );

    70. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PageSetupOverridesTemplateFile(
            [in] BSTR templateFile
         );

    71. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PageSetupOverridesTemplateFile(
            [out,retval] BSTR* templateFile
         );


==================================================================================

IDispatch IAcadPreferencesDisplay;
IID = {E8BA2C2B-E024-4445-8C45-3629C42E6500}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayoutDisplayMargins(
            [in] bool pAppObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayoutDisplayMargins(
            [out,retval] bool* Path
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayoutDisplayPaper(
            [in] bool Path
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayoutDisplayPaper(
            [out,retval] bool* Path
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayoutDisplayPaperShadow(
            [in] bool Path
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayoutDisplayPaperShadow(
            [out,retval] bool* Path
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayoutShowPlotSetup(
            [in] bool Path
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayoutShowPlotSetup(
            [out,retval] bool* Path
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayoutCreateViewport(
            [in] bool Path
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayoutCreateViewport(
            [out,retval] bool* Path
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DisplayScrollBars(
            [in] bool Path
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DisplayScrollBars(
            [out,retval] bool* Path
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DisplayScreenMenu(
            [in] bool Path
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DisplayScreenMenu(
            [out,retval] bool* Path
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CursorSize(
            [in] int Path
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CursorSize(
            [out,retval] int* Path
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DockedVisibleLines(
            [in] int Path
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DockedVisibleLines(
            [out,retval] int* Path
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowRasterImage(
            [in] bool Path
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowRasterImage(
            [out,retval] bool* Path
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GraphicsWinModelBackgrndColor(
            [in] <enum>  Path
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GraphicsWinModelBackgrndColor(
            [out,retval] <enum> * color
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ModelCrosshairColor(
            [in] <enum>  color
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ModelCrosshairColor(
            [out,retval] <enum> * crossHairColor
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GraphicsWinLayoutBackgrndColor(
            [in] <enum>  crossHairColor
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GraphicsWinLayoutBackgrndColor(
            [out,retval] <enum> * color
         );

    28. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextWinBackgrndColor(
            [in] <enum>  color
         );

    29. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextWinBackgrndColor(
            [out,retval] <enum> * Path
         );

    30. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextWinTextColor(
            [in] <enum>  Path
         );

    31. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextWinTextColor(
            [out,retval] <enum> * Path
         );

    32. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LayoutCrosshairColor(
            [in] <enum>  Path
         );

    33. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LayoutCrosshairColor(
            [out,retval] <enum> * crossHairColor
         );

    34. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoTrackingVecColor(
            [in] <enum>  crossHairColor
         );

    35. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoTrackingVecColor(
            [out,retval] <enum> * AutoTrackingVecColor
         );

    36. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextFont(
            [in] BSTR AutoTrackingVecColor
         );

    37. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextFont(
            [out,retval] BSTR* Path
         );

    38. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextFontStyle(
            [in] <enum> AcTextFontStyle Path
         );

    39. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextFontStyle(
            [out,retval] int* Path
         );

    40. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TextFontSize(
            [in] int Path
         );

    41. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TextFontSize(
            [out,retval] int* Path
         );

    42. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HistoryLines(
            [in] int Path
         );

    43. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HistoryLines(
            [out,retval] int* Path
         );

    44. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT MaxAutoCADWindow(
            [in] bool Path
         );

    45. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MaxAutoCADWindow(
            [out,retval] bool* Path
         );

    46. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DisplayLayoutTabs(
            [in] bool Path
         );

    47. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DisplayLayoutTabs(
            [out,retval] bool* Path
         );

    48. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ImageFrameHighlight(
            [in] bool Path
         );

    49. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ImageFrameHighlight(
            [out,retval] bool* Path
         );

    50. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TrueColorImages(
            [in] bool Path
         );

    51. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TrueColorImages(
            [out,retval] bool* Path
         );

    52. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT XRefFadeIntensity(
            [in] int Path
         );

    53. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT XRefFadeIntensity(
            [out,retval] int* Path
         );


==================================================================================

IDispatch IAcadPreferencesOpenSave;
IID = {7CFBEEB7-4B4B-4229-A448-E6D3F61C63D3}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SavePreviewThumbnail(
            [in] bool pAppObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SavePreviewThumbnail(
            [out,retval] bool* Path
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT IncrementalSavePercent(
            [in] int Path
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IncrementalSavePercent(
            [out,retval] int* Path
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoSaveInterval(
            [in] int Path
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoSaveInterval(
            [out,retval] int* Path
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CreateBackup(
            [in] bool Path
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CreateBackup(
            [out,retval] bool* CreateBackup
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FullCRCValidation(
            [in] bool CreateBackup
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FullCRCValidation(
            [out,retval] bool* Path
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LogFileOn(
            [in] bool Path
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LogFileOn(
            [out,retval] bool* Path
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TempFileExtension(
            [in] BSTR Path
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TempFileExtension(
            [out,retval] BSTR* Path
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT XrefDemandLoad(
            [in] <enum> AcXRefDemandLoad Path
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT XrefDemandLoad(
            [out,retval] int* Path
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DemandLoadARXApp(
            [in] <enum> AcARXDemandLoad Path
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DemandLoadARXApp(
            [out,retval] int* Path
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ProxyImage(
            [in] <enum> AcProxyImage Path
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ProxyImage(
            [out,retval] int* Path
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowProxyDialogBox(
            [in] bool Path
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowProxyDialogBox(
            [out,retval] bool* Path
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoAudit(
            [in] bool Path
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoAudit(
            [out,retval] bool* bAudit
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SaveAsType(
            [in] <enum> AcSaveAsType bAudit
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SaveAsType(
            [out,retval] int* Path
         );

    28. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MRUNumber(
            [out,retval] int* Path
         );


==================================================================================

IDispatch IAcadPreferencesOutput;
IID = {62E5B824-4CBD-409C-93CE-75CD119A54F6}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DefaultOutputDevice(
            [in] BSTR pAppObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DefaultOutputDevice(
            [out,retval] BSTR* Path
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrinterSpoolAlert(
            [in] <enum> AcPrinterSpoolAlert Path
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrinterSpoolAlert(
            [out,retval] int* Path
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PrinterPaperSizeAlert(
            [in] bool Path
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PrinterPaperSizeAlert(
            [out,retval] bool* Path
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotLegacy(
            [in] bool Path
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotLegacy(
            [out,retval] bool* Path
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT OLEQuality(
            [in] <enum> AcOleQuality Path
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OLEQuality(
            [out,retval] int* Path
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT UseLastPlotSettings(
            [in] bool Path
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT UseLastPlotSettings(
            [out,retval] bool* Path
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PlotPolicy(
            [in] <enum> AcPlotPolicy Path
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PlotPolicy(
            [out,retval] int* Path
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DefaultPlotStyleTable(
            [in] BSTR Path
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DefaultPlotStyleTable(
            [out,retval] BSTR* Path
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DefaultPlotStyleForObjects(
            [in] BSTR Path
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DefaultPlotStyleForObjects(
            [out,retval] BSTR* Path
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DefaultPlotStyleForLayer(
            [in] BSTR Path
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DefaultPlotStyleForLayer(
            [out,retval] BSTR* Path
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ContinuousPlotLog(
            [in] bool Path
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ContinuousPlotLog(
            [out,retval] bool* Path
         );

    24. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutomaticPlotLog(
            [in] bool Path
         );

    25. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutomaticPlotLog(
            [out,retval] bool* Path
         );

    26. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DefaultPlotToFilePath(
            [in] BSTR Path
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DefaultPlotToFilePath(
            [out,retval] BSTR* Path
         );


==================================================================================

IDispatch IAcadPreferencesSystem;
IID = {4345DD0C-8FC2-430C-90AD-4F209C6A9EEC}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SingleDocumentMode(
            [in] bool pAppObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SingleDocumentMode(
            [out,retval] bool* Path
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DisplayOLEScale(
            [in] bool Path
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DisplayOLEScale(
            [out,retval] bool* Path
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT StoreSQLIndex(
            [in] bool Path
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT StoreSQLIndex(
            [out,retval] bool* Path
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TablesReadOnly(
            [in] bool Path
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TablesReadOnly(
            [out,retval] bool* Path
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EnableStartupDialog(
            [in] bool Path
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EnableStartupDialog(
            [out,retval] bool* Path
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT BeepOnError(
            [in] bool Path
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT BeepOnError(
            [out,retval] bool* BeepOnError
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShowWarningMessages(
            [in] bool BeepOnError
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShowWarningMessages(
            [out,retval] bool* Path
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LoadAcadLspInAllDocuments(
            [in] bool Path
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LoadAcadLspInAllDocuments(
            [out,retval] bool* pALID
         );


==================================================================================

IDispatch IAcadPreferencesUser;
IID = {62814D2E-E5CA-4FAF-81BC-3E5697E5214D}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT KeyboardAccelerator(
            [in] <enum> AcKeyboardAccelerator pAppObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT KeyboardAccelerator(
            [out,retval] int* Path
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT KeyboardPriority(
            [in] <enum> AcKeyboardPriority Path
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT KeyboardPriority(
            [out,retval] int* Path
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HyperlinkDisplayCursor(
            [in] bool Path
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HyperlinkDisplayCursor(
            [out,retval] bool* Path
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ADCInsertUnitsDefaultSource(
            [in] <enum> AcInsertUnits Path
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ADCInsertUnitsDefaultSource(
            [out,retval] int* pIU
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ADCInsertUnitsDefaultTarget(
            [in] <enum> AcInsertUnits pIU
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ADCInsertUnitsDefaultTarget(
            [out,retval] int* pSUunits
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ShortCutMenuDisplay(
            [in] bool pSUunits
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShortCutMenuDisplay(
            [out,retval] bool* pSCM
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SCMDefaultMode(
            [in] <enum> AcDrawingAreaSCMDefault pSCM
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SCMDefaultMode(
            [out,retval] int* pSCM
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SCMEditMode(
            [in] <enum> AcDrawingAreaSCMEdit pSCM
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SCMEditMode(
            [out,retval] int* pSCM
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SCMCommandMode(
            [in] <enum> AcDrawingAreaSCMCommand pSCM
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SCMCommandMode(
            [out,retval] int* pSCM
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SCMTimeMode(
            [in] bool pSCM
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SCMTimeMode(
            [out,retval] bool* time
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT SCMTimeValue(
            [in] int time
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SCMTimeValue(
            [out,retval] int* time
         );


==================================================================================

IDispatch IAcadPreferencesDrafting;
IID = {14BF3C74-64A0-404E-B945-DAC52CD7D389}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoSnapMarker(
            [in] bool pAppObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoSnapMarker(
            [out,retval] bool* Path
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoSnapMagnet(
            [in] bool Path
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoSnapMagnet(
            [out,retval] bool* Path
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoSnapTooltip(
            [in] bool Path
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoSnapTooltip(
            [out,retval] bool* Path
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoSnapAperture(
            [in] bool Path
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoSnapAperture(
            [out,retval] bool* Path
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoSnapApertureSize(
            [in] int Path
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoSnapApertureSize(
            [out,retval] int* Path
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoSnapMarkerColor(
            [in] <enum> AcColor Path
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoSnapMarkerColor(
            [out,retval] int* Path
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoSnapMarkerSize(
            [in] int Path
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoSnapMarkerSize(
            [out,retval] int* Path
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PolarTrackingVector(
            [in] bool Path
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PolarTrackingVector(
            [out,retval] bool* Path
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FullScreenTrackingVector(
            [in] bool Path
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FullScreenTrackingVector(
            [out,retval] bool* Path
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AutoTrackTooltip(
            [in] bool Path
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AutoTrackTooltip(
            [out,retval] bool* Path
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT AlignmentPointAcquisition(
            [in] <enum> AcAlignmentPointAcquisition Path
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT AlignmentPointAcquisition(
            [out,retval] int* Path
         );


==================================================================================

IDispatch IAcadPreferencesSelection;
IID = {22DC7F22-1F0C-4678-9908-BB41FDECFFBE}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PickFirst(
            [in] bool pAppObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PickFirst(
            [out,retval] bool* Path
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PickAdd(
            [in] bool Path
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PickAdd(
            [out,retval] bool* Path
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PickDrag(
            [in] bool Path
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PickDrag(
            [out,retval] bool* Path
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PickAuto(
            [in] bool Path
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PickAuto(
            [out,retval] bool* Path
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PickBoxSize(
            [in] int Path
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PickBoxSize(
            [out,retval] int* Path
         );

    12. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DisplayGrips(
            [in] bool Path
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DisplayGrips(
            [out,retval] bool* Path
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT DisplayGripsWithinBlocks(
            [in] bool Path
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DisplayGripsWithinBlocks(
            [out,retval] bool* Path
         );

    16. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GripColorSelected(
            [in] <enum> AcColor Path
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GripColorSelected(
            [out,retval] int* Path
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GripColorUnselected(
            [in] <enum> AcColor Path
         );

    19. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GripColorUnselected(
            [out,retval] int* Path
         );

    20. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT GripSize(
            [in] int Path
         );

    21. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT GripSize(
            [out,retval] int* Path
         );

    22. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT PickGroup(
            [in] bool Path
         );

    23. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT PickGroup(
            [out,retval] bool* pick
         );


==================================================================================

IDispatch IAcadPreferencesProfiles;
IID = {A840DEC7-0E75-4E5E-AF8A-7E8F8D664876}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT ActiveProfile(
            [in] BSTR pAppObj
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ActiveProfile(
            [out,retval] BSTR* Path
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ImportProfile(
            [in] BSTR ProfileName, 
            [in] BSTR RegFile, 
            [in] bool IncludePathInfo
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ExportProfile(
            [in] BSTR ProfileName, 
            [in] BSTR RegFile
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DeleteProfile(
            [in] BSTR ProfileName
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ResetProfile(
            [in] BSTR Profile
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RenameProfile(
            [in] BSTR origProfileName, 
            [in] BSTR newProfileName
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CopyProfile(
            [in] BSTR oldProfileName, 
            [in] BSTR newProfileName
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAllProfileNames(
            [out] VARIANT* pNames
         );


==================================================================================

IDispatch IAcadMenuGroups;
IID = {B666B981-69C9-4108-912B-F5DEC87C7399}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pEnumVariant
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* Count
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Parent(
            [out,retval] 
** pParent
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Load(
            [in] BSTR MenuFileName, 
            [in,optional] VARIANT BaseMenu, 
            [out,retval] 
** pMenuGroup
         );


==================================================================================

IDispatch IAcadMenuGroup;
IID = {CDDCE693-8590-488D-9C58-F5FEF7411318}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Parent(
            [out,retval] 
** pParent
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* Name
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Type(
            [out,retval] int* menuType
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT MenuFileName(
            [out,retval] BSTR* Name
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Menus(
            [out,retval] 
** pMenus
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Toolbars(
            [out,retval] 
** pToolbars
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Unload(
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Save(
            [in] <enum> AcMenuFileType MenuFileType
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SaveAs(
            [in] BSTR MenuFileName, 
            [in] <enum> AcMenuFileType MenuFileType
         );


==================================================================================

IDispatch IAcadPopupMenus;
IID = {17325793-46A5-4490-8FDA-EB23D168F879}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pEnumVariant
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* Count
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Parent(
            [out,retval] 
** pParent
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR MenuName, 
            [out,retval] 
** pMenu
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT InsertMenuInMenuBar(
            [in] BSTR MenuName, 
            [in] VARIANT Index
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveMenuFromMenuBar(
            [in] VARIANT Index
         );


==================================================================================

IDispatch IAcadPopupMenu;
IID = {DF2318F3-CACD-4E12-A593-1CAAA896BE2B}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pEnumVariant
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* Count
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Parent(
            [out,retval] idispatch* pParent
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT NameNoMnemonic(
            [out,retval] BSTR* bstrName
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT ShortcutMenu(
            [out,retval] bool* bFlag
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT OnMenuBar(
            [out,retval] bool* bFlag
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddMenuItem(
            [in] VARIANT Index, 
            [in] BSTR Label, 
            [in] BSTR Macro, 
            [out,retval] 
** pItem
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddSubMenu(
            [in] VARIANT Index, 
            [in] BSTR Label, 
            [out,retval] 
** pMenu
         );

    13. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddSeparator(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    14. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT InsertInMenuBar(
            [in] VARIANT Index
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveFromMenuBar(
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TagString(
            [out,retval] BSTR* bstrTag
         );


==================================================================================

IDispatch IAcadPopupMenuItem;
IID = {E6174881-7ED5-4247-B84D-9AA7C85B7A5C}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Parent(
            [out,retval] 
** pParent
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Label(
            [out,retval] BSTR* bstrLabel
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Label(
            [in] BSTR bstrLabel
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TagString(
            [out,retval] BSTR* bstrTag
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TagString(
            [in] BSTR bstrTag
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Enable(
            [out,retval] bool* bFlag
         );

    8. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Enable(
            [in] bool bFlag
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Check(
            [out,retval] bool* bFlag
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Check(
            [in] bool bFlag
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Type(
            [out,retval] int* itemType
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT SubMenu(
            [out,retval] 
** pMenu
         );

    13. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Macro(
            [out,retval] BSTR* bstrMacro
         );

    14. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Macro(
            [in] BSTR bstrMacro
         );

    15. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Index(
            [out,retval] int* nIndex
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Caption(
            [out,retval] BSTR* bstrCaption
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HelpString(
            [out,retval] BSTR* bstrHelp
         );

    18. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HelpString(
            [in] BSTR bstrHelp
         );

    19. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Delete(
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT EndSubMenuLevel(
            [out,retval] int* level
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT EndSubMenuLevel(
            [in] int level
         );


==================================================================================

IDispatch IAcadToolbars;
IID = {34C02660-6050-4D40-AC67-49DBA254C174}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pEnumVariant
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* Count
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Parent(
            [out,retval] 
** pParent
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LargeButtons(
            [out,retval] bool* bFlag
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT LargeButtons(
            [in] bool bFlag
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR ToolbarName, 
            [out,retval] 
** pTlbar
         );


==================================================================================

IDispatch IAcadToolbar;
IID = {2CAF7C8E-2F1E-4F2C-8B58-30E68CD97E39}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pEnumVariant
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* Count
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Parent(
            [out,retval] idispatch* pParent
         );

    6. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    7. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Visible(
            [out,retval] bool* bFlag
         );

    9. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Visible(
            [in] bool bFlag
         );

    10. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT DockStatus(
            [out,retval] int* nStatus
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT LargeButtons(
            [out,retval] bool* bFlag
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT left(
            [out,retval] int* nLeft
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT left(
            [in] int nLeft
         );

    14. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT top(
            [out,retval] int* nTop
         );

    15. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT top(
            [in] int nTop
         );

    16. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Width(
            [out,retval] int* nWidth
         );

    17. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Height(
            [out,retval] int* nHeight
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT FloatingRows(
            [out,retval] int* nRows
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT FloatingRows(
            [in] int nRows
         );

    20. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HelpString(
            [out,retval] BSTR* bstrHelp
         );

    21. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HelpString(
            [in] BSTR bstrHelp
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddToolbarButton(
            [in] VARIANT Index, 
            [in] BSTR Name, 
            [in] BSTR HelpString, 
            [in] BSTR Macro, 
            [in,optional] VARIANT FlyoutButton, 
            [out,retval] 
** pItem
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddSeparator(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Dock(
            [in] <enum> AcToolbarDockStatus Side
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Float(
            [in] int top, 
            [in] int left, 
            [in] int NumberFloatRows
         );

    26. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Delete(
         );

    27. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TagString(
            [out,retval] BSTR* bstrTag
         );


==================================================================================

IDispatch IAcadToolbarItem;
IID = {75E861BA-3D6D-4D45-8D03-C78B679D0DB1}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Parent(
            [out,retval] 
** pParent
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    4. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Name(
            [in] BSTR bstrName
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT TagString(
            [out,retval] BSTR* bstrTag
         );

    6. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT TagString(
            [in] BSTR bstrTag
         );

    7. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Type(
            [out,retval] int* itemType
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Flyout(
            [out,retval] 
** pTlbar
         );

    9. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Macro(
            [out,retval] BSTR* bstrMacro
         );

    10. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT Macro(
            [in] BSTR bstrMacro
         );

    11. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Index(
            [out,retval] int* nIndex
         );

    12. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT HelpString(
            [out,retval] BSTR* bstrHelp
         );

    13. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT HelpString(
            [in] BSTR bstrHelp
         );

    14. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetBitmaps(
            [out] BSTR* SmallIconName, 
            [out] BSTR* LargeIconName
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SetBitmaps(
            [in] BSTR SmallIconName, 
            [in] BSTR LargeIconName
         );

    16. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AttachToolbarToFlyout(
            [in] BSTR MenuGroupName, 
            [in] BSTR ToolbarName
         );

    17. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Delete(
         );

    18. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT CommandDisplayName(
            [out,retval] BSTR* Name
         );

    19. 
STDCALL PROPERTYPUTREF PUREVIRTUAL;
         HRESULT CommandDisplayName(
            [in] BSTR Name
         );


==================================================================================

IDispatch IAcadMenuBar;
IID = {77958146-7275-4286-A26F-ED3DFA0DDF5B}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pEnumVariant
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* Count
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    5. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Parent(
            [out,retval] 
** pParent
         );


==================================================================================

IDispatch IAcadDocuments;
IID = {CCE7195F-7ED2-47F9-AB39-E1198C4075F9}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pEnumVariant
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* Count
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in,optional] VARIANT TemplateName, 
            [out,retval] 
** pDispDoc
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Open(
            [in] BSTR Name, 
            [in,optional] VARIANT ReadOnly, 
            [in,optional] VARIANT Password, 
            [out,retval] 
** pDispDoc
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Close(
         );


==================================================================================

IDispatch IAcadState;
IID = {F9229B07-3406-4370-9019-A6D8DC9F2A00}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT IsQuiescent(
            [out,retval] bool* pVal
         );


==================================================================================

IDispatch IAcadSelectionSets;
IID = {D5B88F52-2CF8-4295-8605-3DC29D854F5A}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] 
** pItem
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Add(
            [in] BSTR Name, 
            [out,retval] 
** pSet
         );


==================================================================================

IDispatch IAcadSelectionSet;
IID = {E09D8BD0-6A3F-4F6A-AA0B-A825FD3D4727}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Item(
            [in] VARIANT Index, 
            [out,retval] <IDispatch> IAcadEntity** pEntity
         );

    2. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Count(
            [out,retval] int* pVal
         );

    3. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT _NewEnum(
            [out,retval] IUnknown* pVal
         );

    4. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Name(
            [out,retval] BSTR* bstrName
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Highlight(
            [in] bool bFlag
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Erase(
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Update(
         );

    8. 
STDCALL PROPERTYGET PUREVIRTUAL;
         HRESULT Application(
            [out,retval] 
** pAppObj
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AddItems(
            [in] VARIANT pSelSet
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RemoveItems(
            [in] VARIANT Objects
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Clear(
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Select(
            [in] <enum> AcSelect Mode, 
            [in,optional] VARIANT Point1, 
            [in,optional] VARIANT Point2, 
            [in,optional] VARIANT FilterType, 
            [in,optional] VARIANT FilterData
         );

    13. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SelectAtPoint(
            [in] VARIANT Point, 
            [in,optional] VARIANT FilterType, 
            [in,optional] VARIANT FilterData
         );

    14. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SelectByPolygon(
            [in] <enum> AcSelect Mode, 
            [in] VARIANT PointsList, 
            [in,optional] VARIANT FilterType, 
            [in,optional] VARIANT FilterData
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SelectOnScreen(
            [in,optional] VARIANT FilterType, 
            [in,optional] VARIANT FilterData
         );

    16. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Delete(
         );


==================================================================================

IDispatch IAcadUtility;
IID = {10A619A1-A0FD-4063-905F-796327DE0062}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AngleToReal(
            [in] BSTR Angle, 
            [in] <enum> AcAngleUnits Unit, 
            [out,retval] double* Value
         );

    2. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AngleToString(
            [in] double Angle, 
            [in] <enum> AcAngleUnits Unit, 
            [in] int precision, 
            [out,retval] BSTR* bstrValue
         );

    3. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT DistanceToReal(
            [in] BSTR Distance, 
            [in] <enum> AcUnits Unit, 
            [out,retval] double* Value
         );

    4. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT RealToString(
            [in] double Value, 
            [in] <enum> AcUnits Unit, 
            [in] int precision, 
            [out,retval] BSTR* bstrValue
         );

    5. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT TranslateCoordinates(
            [in] VARIANT Point, 
            [in] <enum> AcCoordinateSystem FromCoordSystem, 
            [in] <enum> AcCoordinateSystem ToCoordSystem, 
            [in] int Displacement, 
            [in,optional] VARIANT OCSNormal, 
            [out,retval] VARIANT* transPt
         );

    6. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT InitializeUserInput(
            [in] int Bits, 
            [in,optional] VARIANT KeyWordList
         );

    7. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetInteger(
            [in,optional] VARIANT Prompt, 
            [out,retval] int* Value
         );

    8. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetReal(
            [in,optional] VARIANT Prompt, 
            [out,retval] double* Value
         );

    9. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetInput(
            [out,retval] BSTR* Value
         );

    10. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetKeyword(
            [in,optional] VARIANT Prompt, 
            [out,retval] BSTR* bstrKeyword
         );

    11. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetString(
            [in] int HasSpaces, 
            [in,optional] VARIANT Prompt, 
            [out,retval] BSTR* bstrValue
         );

    12. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetAngle(
            [in,optional] VARIANT Point, 
            [in,optional] VARIANT Prompt, 
            [out,retval] double* Angle
         );

    13. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT AngleFromXAxis(
            [in] VARIANT StartPoint, 
            [in] VARIANT EndPoint, 
            [out,retval] double* Angle
         );

    14. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetCorner(
            [in] VARIANT Point, 
            [in,optional] VARIANT Prompt, 
            [out,retval] VARIANT* corner
         );

    15. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetDistance(
            [in,optional] VARIANT Point, 
            [in,optional] VARIANT Prompt, 
            [out,retval] double* dist
         );

    16. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetOrientation(
            [in,optional] VARIANT Point, 
            [in,optional] VARIANT Prompt, 
            [out,retval] double* Angle
         );

    17. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetPoint(
            [in,optional] VARIANT Point, 
            [in,optional] VARIANT Prompt, 
            [out,retval] VARIANT* inputPoint
         );

    18. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT PolarPoint(
            [in] VARIANT Point, 
            [in] double Angle, 
            [in] double Distance, 
            [out,retval] VARIANT* inputPoint
         );

    19. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT CreateTypedArray(
            [out] VARIANT* varArr, 
            [in] int Type, 
            [in] SAFEARRAY inArgs
         );

    20. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetEntity(
            [out] idispatch* Object, 
            [out] VARIANT* PickedPoint, 
            [in,optional] VARIANT Prompt
         );

    21. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT Prompt(
            [in] BSTR Message
         );

    22. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetSubEntity(
            [out] idispatch* Object, 
            [out] VARIANT* PickedPoint, 
            [out] VARIANT* transMatrix, 
            [out] VARIANT* ContextData, 
            [in,optional] VARIANT Prompt
         );

    23. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT IsURL(
            [in] BSTR URL, 
            [out,retval] bool* IsValidURL
         );

    24. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetRemoteFile(
            [in] BSTR URL, 
            [out] BSTR* LocalFile, 
            [in] bool IgnoreCache
         );

    25. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT PutRemoteFile(
            [in] BSTR URL, 
            [in] BSTR LocalFile
         );

    26. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT IsRemoteFile(
            [in] BSTR LocalFile, 
            [out] BSTR* URL, 
            [out,retval] bool* IsDownloadedFile
         );

    27. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT LaunchBrowserDialog(
            [out] BSTR* SelectedURL, 
            [in] BSTR DialogTitle, 
            [in] BSTR OpenButtonCaption, 
            [in] BSTR StartPageURL, 
            [in] BSTR RegistryRootKey, 
            [in] bool OpenButtonAlwaysEnabled, 
            [out,retval] bool* success
         );

    28. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SendModelessOperationStart(
             BSTR Context
         );

    29. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT SendModelessOperationEnded(
             BSTR Context
         );

    30. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetSubEntity32(
            [out] idispatch* Object, 
            [out] VARIANT* PickedPoint, 
            [out] VARIANT* transMatrix, 
            [out] VARIANT* ContextData, 
            [in,optional] VARIANT Prompt
         );

    31. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT ObjectId32ToObjectIdString(
            [in] int ObjectID32, 
            [out,retval] BSTR* ObjectIdString
         );

    32. 
STDCALL FUNC PUREVIRTUAL;
         HRESULT GetObjectIdString(
            [in] idispatch Object, 
            [in] bool bHex, 
            [out,retval] BSTR* ObjectIdString
         );


==================================================================================

coclass AcadState;
CLSID = {0BD5991E-D430-4E80-9DEF-EAC7DDAA814D}; 

// Implemented interface: <IDispatch> IAcadState

==================================================================================

coclass AcadApplication;
CLSID = {6D7AE628-FF41-4CD3-91DD-34825BB1A251}; 

// Implemented interface: <IDispatch> IAcadApplication
// Implemented interface: <IDispatch> _DAcadApplicationEvents

==================================================================================

coclass AcadApplicationMinorVersion1; // AutoCAD Application Object
CLSID = {C92FB640-AD4D-498A-9979-A51A2540C977}; 

// Implemented interface: <IDispatch> IAcadApplication
// Implemented interface: <IDispatch> _DAcadApplicationEvents

==================================================================================

coclass AcadApplicationMinorVersion2; // AutoCAD Application Object
CLSID = {B77E471C-FBF3-4CB5-880F-D7528AD4B349}; 

// Implemented interface: <IDispatch> IAcadApplication
// Implemented interface: <IDispatch> _DAcadApplicationEvents

==================================================================================

coclass AcadSelectionSet;
CLSID = {486E3AB8-DD97-481A-9D93-4E3C34EBE55E}; 

// Implemented interface: <IDispatch> IAcadSelectionSet

==================================================================================

coclass AcadSelectionSets;
CLSID = {BE5F0E13-DB8F-4254-8C4F-EAADF1DF5564}; 

// Implemented interface: <IDispatch> IAcadSelectionSets

==================================================================================

coclass AcadPlot;
CLSID = {3054E464-D3BB-4DA0-B4C8-0763CE987A1D}; 

// Implemented interface: <IDispatch> IAcadPlot

==================================================================================

coclass AcadPreferences;
CLSID = {EB77D57A-ED34-4BC2-9559-85F01DB145D4}; 

// Implemented interface: <IDispatch> IAcadPreferences

==================================================================================

coclass AcadPreferencesDrafting;
CLSID = {62C0279E-E08B-46E5-87C4-F95CAFB1239C}; 

// Implemented interface: <IDispatch> IAcadPreferencesDrafting

==================================================================================

coclass AcadPreferencesDisplay;
CLSID = {48C014CC-96EB-4CFC-90CC-677CF018FDBB}; 

// Implemented interface: <IDispatch> IAcadPreferencesDisplay

==================================================================================

coclass AcadPreferencesFiles;
CLSID = {B31ADFCF-F54B-4F39-BE34-13D182C0C943}; 

// Implemented interface: <IDispatch> IAcadPreferencesFiles

==================================================================================

coclass AcadPreferencesOpenSave;
CLSID = {B264B245-299B-4BAF-BBC4-24748FBA61DF}; 

// Implemented interface: <IDispatch> IAcadPreferencesOpenSave

==================================================================================

coclass AcadPreferencesOutput;
CLSID = {1B8D2042-FD71-4832-BAA6-533C96A2D6B4}; 

// Implemented interface: <IDispatch> IAcadPreferencesOutput

==================================================================================

coclass AcadPreferencesProfiles;
CLSID = {5400F840-6A04-4858-8DAF-2352C9705415}; 

// Implemented interface: <IDispatch> IAcadPreferencesProfiles

==================================================================================

coclass AcadPreferencesSelection;
CLSID = {B652740D-987E-4BFD-B2B2-F7BF0507689E}; 

// Implemented interface: <IDispatch> IAcadPreferencesSelection

==================================================================================

coclass AcadPreferencesSystem;
CLSID = {65DCC115-6506-4582-B507-37DA985AB801}; 

// Implemented interface: <IDispatch> IAcadPreferencesSystem

==================================================================================

coclass AcadPreferencesUser;
CLSID = {7CD817EA-9644-4D7E-AF43-4C1B0C3FF049}; 

// Implemented interface: <IDispatch> IAcadPreferencesUser

==================================================================================

coclass AcadMenuGroups;
CLSID = {CC045948-7275-4707-83D3-7CD156DAE4F1}; 

// Implemented interface: <IDispatch> IAcadMenuGroups

==================================================================================

coclass AcadMenuGroup;
CLSID = {980EE9D6-3595-4ED6-B55C-4153B80ECA58}; 

// Implemented interface: <IDispatch> IAcadMenuGroup

==================================================================================

coclass AcadMenuBar;
CLSID = {15E407B0-0BFE-46A1-AF12-634B4E04E3E6}; 

// Implemented interface: <IDispatch> IAcadMenuBar

==================================================================================

coclass AcadPopupMenus;
CLSID = {18A47009-E044-4EC5-821C-E5FF96324532}; 

// Implemented interface: <IDispatch> IAcadPopupMenus

==================================================================================

coclass AcadPopupMenu;
CLSID = {6B6A05EA-F208-493C-B949-0599E45DB4F5}; 

// Implemented interface: <IDispatch> IAcadPopupMenu

==================================================================================

coclass AcadPopupMenuItem;
CLSID = {10E6F613-EAC0-4A52-BEDC-82B6CBEB0D87}; 

// Implemented interface: <IDispatch> IAcadPopupMenuItem

==================================================================================

coclass AcadUtility;
CLSID = {4C39570F-87D0-4BFC-8BDE-B9BC679CBD4C}; 

// Implemented interface: <IDispatch> IAcadUtility

==================================================================================

IDispatch _DAcadDocumentEvents;
IID = {9C85C44F-0615-4A20-B972-3ECA24269233}; 
// Inherits from:  IDispatch  {00020400-0000-0000-C000-000000000046}

    1. 
STDCALL FUNC DISPATCH;
         HRESULT BeginSave(
            [in] BSTR FileName
         );

    2. 
STDCALL FUNC DISPATCH;
         HRESULT EndSave(
            [in] BSTR FileName
         );

    3. 
STDCALL FUNC DISPATCH;
         HRESULT BeginCommand(
            [in] BSTR CommandName
         );

    4. 
STDCALL FUNC DISPATCH;
         HRESULT EndCommand(
            [in] BSTR CommandName
         );

    5. 
STDCALL FUNC DISPATCH;
         HRESULT BeginLisp(
            [in] BSTR FirstLine
         );

    6. 
STDCALL FUNC DISPATCH;
         HRESULT EndLisp(
         );

    7. 
STDCALL FUNC DISPATCH;
         HRESULT LispCancelled(
         );

    8. 
STDCALL FUNC DISPATCH;
         HRESULT SelectionChanged(
         );

    9. 
STDCALL FUNC DISPATCH;
         HRESULT Activate(
         );

    10. 
STDCALL FUNC DISPATCH;
         HRESULT Deactivate(
         );

    11. 
STDCALL FUNC DISPATCH;
         HRESULT BeginRightClick(
            [in] VARIANT PickPoint
         );

    12. 
STDCALL FUNC DISPATCH;
         HRESULT BeginShortcutMenuDefault(
            [out] 
** ShortcutMenu
         );

    13. 
STDCALL FUNC DISPATCH;
         HRESULT BeginShortcutMenuEdit(
            [out] 
** ShortcutMenu, 
            [out] 
** SelectionSet
         );

    14. 
STDCALL FUNC DISPATCH;
         HRESULT BeginShortcutMenuCommand(
            [out] 
** ShortcutMenu, 
            [in] BSTR Command
         );

    15. 
STDCALL FUNC DISPATCH;
         HRESULT BeginShortcutMenuGrip(
            [out] 
** ShortcutMenu
         );

    16. 
STDCALL FUNC DISPATCH;
         HRESULT BeginShortcutMenuOsnap(
            [out] 
** ShortcutMenu
         );

    17. 
STDCALL FUNC DISPATCH;
         HRESULT EndShortcutMenu(
            [out] 
** ShortcutMenu
         );

    18. 
STDCALL FUNC DISPATCH;
         HRESULT BeginDoubleClick(
            [in] VARIANT PickPoint
         );

    19. 
STDCALL FUNC DISPATCH;
         HRESULT ObjectAdded(
            [in] idispatch Object
         );

    20. 
STDCALL FUNC DISPATCH;
         HRESULT ObjectErased(
            [in] int ObjectID
         );

    21. 
STDCALL FUNC DISPATCH;
         HRESULT ObjectModified(
            [in] idispatch Object
         );

    22. 
STDCALL FUNC DISPATCH;
         HRESULT BeginPlot(
            [in] BSTR DrawingName
         );

    23. 
STDCALL FUNC DISPATCH;
         HRESULT EndPlot(
            [in] BSTR DrawingName
         );

    24. 
STDCALL FUNC DISPATCH;
         HRESULT WindowMovedOrResized(
            [in] int HWNDFrame, 
            [in] bool bMoved
         );

    25. 
STDCALL FUNC DISPATCH;
         HRESULT LayoutSwitched(
            [in] BSTR LayoutName
         );

    26. 
STDCALL FUNC DISPATCH;
         HRESULT WindowChanged(
            [in] <enum> AcWindowState WindowState
         );

    27. 
STDCALL FUNC DISPATCH;
         HRESULT BeginClose(
         );

    28. 
STDCALL FUNC DISPATCH;
         HRESULT BeginDocClose(
            [in,out] bool* Cancel
         );


==================================================================================

coclass AcadDocument;
CLSID = {D70E31AD-2614-49F2-B0FC-ACA781D81F3E}; 

// Implemented interface: <IDispatch> IAcadDocument
// Implemented interface: <IDispatch> _DAcadDocumentEvents

==================================================================================

coclass AcadDocuments;
CLSID = {17C81A1D-30F5-4E20-AE54-2D2B3F777824}; 

// Implemented interface: <IDispatch> IAcadDocuments

==================================================================================

coclass AcadToolbars;
CLSID = {4165D85E-2C8A-48CB-85F2-A0C16123853F}; 

// Implemented interface: <IDispatch> IAcadToolbars

==================================================================================

coclass AcadToolbar;
CLSID = {680E9BBD-B404-4729-9F86-CCF001206F64}; 

// Implemented interface: <IDispatch> IAcadToolbar

==================================================================================

coclass AcadToolbarItem;
CLSID = {209C9BE4-8976-4135-A0CD-13072965220D}; 

// Implemented interface: <IDispatch> IAcadToolbarItem

==================================================================================

