#include <array.au3>

$adapterInfo = _WMI_Win32_NetworkAdapterConfiguration()
_ArrayDisplay($adapterInfo)
; Generated by AutoIt Scriptomatic June 01, 2009

Func _WMI_Win32_NetworkAdapterConfiguration($AdapterName = "")
    ; Rajesh V R
    ; v 1.0 01 June 2009

       ; use the adapter name as seen in the network connections dialog...
    Const $wbemFlagReturnImmediately = 0x10
    Const $wbemFlagForwardOnly = 0x20
    Local $colNICs="", $NIC, $strQuery, $objWMIService

    $strQuery = "SELECT * FROM Win32_NetworkAdapterConfiguration"
    $objWMIService = ObjGet("winmgmts:\\.\root\CIMV2")
    $colNICs = $objWMIService.ExecQuery($strQuery, "WQL", $wbemFlagReturnImmediately + $wbemFlagForwardOnly)

    Local $retVal[1][1], $r, $c

    Local $output

    If IsObj($colNICs) Then
        For $NIC In $colNICs
            $r = UBound($retVal, 1)
            ReDim $retVal[$r + 1][61]

            $retVal[$r - 1][1] = $NIC.ArpAlwaysSourceRoute
            $retVal[$r - 1][2] = $NIC.ArpUseEtherSNAP
            $retVal[$r - 1][3] = $NIC.Caption
            $retVal[$r - 1][4] = $NIC.DatabasePath
            $retVal[$r - 1][5] = $NIC.DeadGWDetectEnabled
            $retVal[$r - 1][6] = $NIC.DefaultIPGateway(0)
            $retVal[$r - 1][7] = $NIC.DefaultTOS
            $retVal[$r - 1][8] = $NIC.DefaultTTL
            $retVal[$r - 1][9] = $NIC.Description
            $retVal[$r - 1][10] = $NIC.DHCPEnabled
            $retVal[$r - 1][11] = WMIDateStringToDate($NIC.DHCPLeaseExpires)
            $retVal[$r - 1][12] = WMIDateStringToDate($NIC.DHCPLeaseObtained)
            $retVal[$r - 1][13] = $NIC.DHCPServer
            $retVal[$r - 1][14] = $NIC.DNSDomain
            $retVal[$r - 1][16] = $NIC.DNSEnabledForWINSResolution
            $retVal[$r - 1][17] = $NIC.DNSHostName
            $retVal[$r - 1][18] = $NIC.DNSServerSearchOrder(0)
            $retVal[$r - 1][19] = $NIC.DomainDNSRegistrationEnabled
            $retVal[$r - 1][20] = $NIC.ForwardBufferMemory
            $retVal[$r - 1][21] = $NIC.FullDNSRegistrationEnabled
            $retVal[$r - 1][22] = $NIC.GatewayCostMetric(0)
            $retVal[$r - 1][23] = $NIC.IGMPLevel
            $retVal[$r - 1][24] = $NIC.Index
            $retVal[$r - 1][25] = $NIC.IPAddress(0)
            $retVal[$r - 1][26] = $NIC.IPConnectionMetric
            $retVal[$r - 1][27] = $NIC.IPEnabled
            $retVal[$r - 1][28] = $NIC.IPFilterSecurityEnabled
            $retVal[$r - 1][29] = $NIC.IPPortSecurityEnabled
            $retVal[$r - 1][30] = $NIC.IPSecPermitIPProtocols
            $retVal[$r - 1][31] = $NIC.IPSecPermitTCPPorts
            $retVal[$r - 1][32] = $NIC.IPSecPermitUDPPorts
            $retVal[$r - 1][33] = $NIC.IPSubnet
            $retVal[$r - 1][34] = $NIC.IPUseZeroBroadcast
            $retVal[$r - 1][35] = $NIC.IPXAddress
            $retVal[$r - 1][36] = $NIC.IPXEnabled
            $retVal[$r - 1][37] = $NIC.IPXFrameType(0)
            $retVal[$r - 1][38] = $NIC.IPXMediaType
            $retVal[$r - 1][39] = $NIC.IPXNetworkNumber(0)
            $retVal[$r - 1][40] = $NIC.IPXVirtualNetNumber
            $retVal[$r - 1][41] = $NIC.KeepAliveInterval
            $retVal[$r - 1][42] = $NIC.KeepAliveTime
            $retVal[$r - 1][43] = $NIC.MACAddress
            $retVal[$r - 1][44] = $NIC.MTU
            $retVal[$r - 1][45] = $NIC.NumForwardPackets
            $retVal[$r - 1][46] = $NIC.PMTUBHDetectEnabled
            $retVal[$r - 1][47] = $NIC.PMTUDiscoveryEnabled
            $retVal[$r - 1][48] = $NIC.ServiceName
            $retVal[$r - 1][49] = $NIC.SettingID
            $retVal[$r - 1][50] = $NIC.TcpipNetbiosOptions
            $retVal[$r - 1][51] = $NIC.TcpMaxConnectRetransmissions
            $retVal[$r - 1][52] = $NIC.TcpMaxDataRetransmissions
            $retVal[$r - 1][53] = $NIC.TcpNumConnections
            $retVal[$r - 1][54] = $NIC.TcpUseRFC1122UrgentPointer
            $retVal[$r - 1][55] = $NIC.TcpWindowSize
            $retVal[$r - 1][56] = $NIC.WINSEnableLMHostsLookup
            $retVal[$r - 1][57] = $NIC.WINSHostLookupFile
            $retVal[$r - 1][58] = $NIC.WINSPrimaryServer
            $retVal[$r - 1][59] = $NIC.WINSScopeID
            $retVal[$r - 1][60] = $NIC.WINSSecondaryServer

        Next
        ReDim $retVal[UBound($retVal,1)-1][61] ; remove the last blank row ...
    Else
        SetError(-1, "No WMI Objects Found for class: Win32_NetworkAdapterConfiguration", "")
    EndIf
    $objWMIService = ""
    $colNICs = ""
    $NIC = ""
    Return $retVal
EndFunc   ;==>_WMI_Win32_NetworkAdapterConfiguration

Func WMIDateStringToDate($dtmDate)
    Return (StringMid($dtmDate, 5, 2) & "/" & _
            StringMid($dtmDate, 7, 2) & "/" & StringLeft($dtmDate, 4) _
             & " " & StringMid($dtmDate, 9, 2) & ":" & StringMid($dtmDate, 11, 2) & ":" & StringMid($dtmDate, 13, 2))
EndFunc   ;==>WMIDateStringToDate