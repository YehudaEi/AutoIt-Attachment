; Script generated by AutoBuilder 0.6 Prototype

#include <GuiConstants.au3>


$Window=GuiCreate("Window Property Manager", 506, 310,-1, -1 , BitOR($WS_OVERLAPPEDWINDOW, $WS_CLIPSIBLINGS))

$List_Window = GuiCtrlCreateListView("Enabled|Visible|Status|Window Name   |Handle ", 10, 10, 386, 279)

$Menu_Context = GuiCtrlCreateContextMenu()
$MenuItem_Refresh = GuiCtrlCreateMenuitem ("Refresh",$Menu_Context)
$MenuItem_Reset = GuiCtrlCreateMenuitem ("Reset",$Menu_Context)
$MenuItem_Apply = GuiCtrlCreateMenuitem ("Apply",$Menu_Context)
GuiCtrlCreateMenuitem ("",$Menu_Context)
$MenuItem_About = GuiCtrlCreateMenuitem ("About",$Menu_Context)
$MenuItem_Help = GuiCtrlCreateMenuitem ("Help",$Menu_Context)
GuiCtrlCreateMenuitem ("",$Menu_Context)
$MenuItem_Exit = GuiCtrlCreateMenuitem ("Exit",$Menu_Context)

$Button_Refresh = GuiCtrlCreateButton("Refresh", 406, 10, 90, 20)
$Button_Reset = GuiCtrlCreateButton("Reset", 406, 222, 90, 20)
$Button_Apply = GuiCtrlCreateButton("Apply settings", 406, 244, 90, 20)
$Button_Exit = GuiCtrlCreateButton("Exit", 406, 266, 90, 20)

$Group_Attributes = GuiCtrlCreateGroup("Attributes", 406, 30, 90, 182)

$Checkbox_Visible = GuiCtrlCreateCheckbox("Visible", 416, 45, 70, 20)
GUICtrlSetState (-1,$GUI_CHECKED)
$Checkbox_Enabled = GuiCtrlCreateCheckbox("Enabled", 416, 65, 70, 20)
GUICtrlSetState (-1,$GUI_CHECKED)
$Checkbox_OnTop = GuiCtrlCreateCheckbox("On top", 416, 85, 70, 20)

$Radio_Max = GuiCtrlCreateRadio("Maximized", 416, 111, 70, 20)
GUICtrlSetState (-1,$GUI_CHECKED)
$Radio_Min = GuiCtrlCreateRadio("Minimized", 416, 131, 70, 20)
$Radio_Res = GuiCtrlCreateRadio("Restored", 416, 151, 70, 20)
$Label_1=GUICtrlCreateLabel("Transparency",416,176,70,20)
$Label_2=GUICtrlCreateLabel("—",505-94,191,10,20)
$Label_3=GUICtrlCreateLabel("+",578-94,191,10,20)
$Slider_Trans = GUICtrlCreateSlider(418, 191, 66,20,$TBS_NOTICKS)
GUICtrlSetLimit(-1,255,0)
GUICtrlSEtData(-1, 255)

$Label_status=GUICtrlCreateLabel (" Ready",0,292,346-80,18,BitOr($SS_SIMPLE,$SS_SUNKEN))
GUICtrlSetColor(-1,0x666666)
$Progress_status=GUICtrlCreateProgress (540-92-180,293,76+100,16)
GUICtrlSetColor(-1,0x666666)
$Label_color=GUICtrlCreateLabel (" Ready",540-94,292,60,18,BitOr($SS_SIMPLE,$SS_SUNKEN))
GUICtrlSetColor(-1,0x666666)

GUICtrlCreateLabel("",500-94,108,90,1)
GUICtrlSetBkColor(-1,0xD0D0BF)
GUICtrlCreateLabel("",500-94,172,90,1)
GUICtrlSetBkColor(-1,0xD0D0BF)

GuiSetState()

$iii = ""
$ii = 0
$i = 0
$Setstate = 1
$mpos = MouseGetPos()
$col = Hex(PixelGetColor($mpos[0],$mpos[1]),6)
$state = ""
$width = 600
$max = 0
$winh = 0
$windows = ""
$temp = ""
$temp2 = ""
$temp3 = ""
$WinAttrib = ""
$state = ""
$refreshstate = 0
Hotkeyset("{ESC}", "HotKeyFunc")

While 1
	$msg = GuiGetMsg()
	$pos = WinGetPos("Window Property Manager")
	If $col <> Hex(PixelGetColor($mpos[0],$mpos[1]),6) Then 
		GUICtrlSetData($Label_color,"0x" & Hex(PixelGetColor($mpos[0],$mpos[1]),6))
		$col = Hex(PixelGetColor($mpos[0],$mpos[1]),6)
	endif
	If $msg = $GUI_EVENT_CLOSE Or $msg = $Button_Exit Or $msg = $MenuItem_Exit Then Exit
	If $pos[3] <> 310 Then WinMove( "Window Property Manager", "", $pos[0], $pos[1], $pos[2], 310)
	If $msg = $MenuItem_About Then 
		$Setstate = 0
		Cntrlstate()
		SplashTextOn("Window Property Manager", "Created by: RadleyGH" & @CRLF & "Programming Language: Autoit v3" & @CRLF _
		& "Website: www.autoitscript.com" & @CRLF & @CRLF & "Special Thanks:" & @CRLF & "Jordan (Joscpe)" & @CRLF & _
		"Rage (Biohazzurd)" & @CRLF & @CRLF& "Version 1.1.3" & @CRLF& @CRLF & "Press Escape to exit",256,220,-1,-1,1)
		SleepFunc()
		SplashOff()
		$Setstate = 1
		Cntrlstate()
	Endif
	If $msg = $MenuItem_Help Then
		$Setstate = 0
		Cntrlstate()
		SplashTextOn("Window Property Manager", "Window Property Manager - Help" & @CRLF & @CRLF & 'Refresh: Update window list'  & @CRLF & _
		 "Properties: Allows to customize almost any window" & @CRLF & "Apply: Applies the window properties to selected window" & @CRLF & "Reset: Reloads current window attributes" & @CRLF & _
		"Enabled: Window must be enabled to interact with" & @CRLF & "Visible: Will appear in windows program bar" & @CRLF & "Restored: Will appear on the desktop"& @CRLF& @CRLF&"Press Escape to Exit",512,220,-1,-1,1)
		SleepFunc()
		SplashOff()
		$Setstate = 1
		Cntrlstate()
	Endif
	If $msg = $Button_Refresh Then
		ReloadWinList()
	Endif
	If $msg = $Button_Apply AND $refreshstate = 1 Then																;
		$state = WinGetState($windows[GUICtrlRead($List_Window)-31][0], "")											;
		If GUICtrlGetState($Checkbox_Enabled) = $GUI_CHECKED Then 													;
			WinSetState($windows[GUICtrlRead($List_Window)-31][0],"",@SW_ENABLE)									;
			msgbox(0,"test","true")																					;
		Else																										;
			WinSetState($windows[GUICtrlRead($List_Window)-31][0],"",@SW_DISABLE)									;
		Endif																										;
		If GUICtrlGetState($Checkbox_Visible) = $GUI_CHECKED Then 													;
			WinSetState($windows[GUICtrlRead($List_Window)-31][0],"",@SW_SHOW)										;
		Else																										;
			WinSetState($windows[GUICtrlRead($List_Window)-31][0],"",@SW_HIDE)										;
		Endif																										;
		If GUICtrlGetState($Checkbox_OnTop) = $GUI_CHECKED Then 													;
			WinSetOnTop($windows[GUICtrlRead($List_Window)-31][0],"",1)												;
		Else																										;
			WinSetOnTop($windows[GUICtrlRead($List_Window)-31][0],"",0)												;
		Endif																										;	
		If GUICtrlGetState($Slider_Trans) < 255 Then 																;
			WinSetTrans($windows[GUICtrlRead($List_Window)-31][0],"",GUICtrlRead($Slider_Trans))					;
		Endif																										;
		If GUICtrlGetState($Radio_Max) = $GUI_CHECKED Then 															;
			WinSetState($windows[GUICtrlRead($List_Window)-31][0],"",@SW_MAXIMIZE)									;
		Else																										;
			If GUICtrlGetState($Radio_Min) = $GUI_CHECKED Then 														;
				WinSetState($windows[GUICtrlRead($List_Window)-31][0],"",@SW_MINIMIZE)								;
			Else																									;
				WinSetState($windows[GUICtrlRead($List_Window)-31][0],"",@SW_RESTORE)								;
			Endif																									;
		Endif																										;
	Endif																											;
WEnd

Func SleepFunc() 
	For $i = 0 to 3000
		If $ii = 0 Then
		Sleep(10)
	Else
		$ii = 0
		$Setstate = 1
		Cntrlstate()
		Exitloop(1)
		Endif
	Next
EndFunc

Func HotKeyFunc()
	$ii = 1
Endfunc

Func Cntrlstate()
	If $Setstate = 1 Then
		GUICtrlSetState($List_Window,$GUI_ENABLE)
		GUICtrlSetState($Menu_Context,$GUI_ENABLE)
		GUICtrlSetState($MenuItem_Refresh,$GUI_ENABLE)
		GUICtrlSetState($MenuItem_Reset,$GUI_ENABLE)
		GUICtrlSetState($MenuItem_Apply,$GUI_ENABLE)
		GUICtrlSetState($MenuItem_About,$GUI_ENABLE)
		GUICtrlSetState($MenuItem_Help,$GUI_ENABLE)
		GUICtrlSetState($MenuItem_Exit,$GUI_ENABLE)
		GUICtrlSetState($Button_Refresh,$GUI_ENABLE)
		GUICtrlSetState($Button_Apply,$GUI_ENABLE)
		GUICtrlSetState($Button_Reset,$GUI_ENABLE)
		GUICtrlSetState($Button_Exit,$GUI_ENABLE)
		GUICtrlSetState($Group_Attributes,$GUI_ENABLE)
		GUICtrlSetState($Checkbox_Visible,$GUI_ENABLE)
		GUICtrlSetState($Checkbox_Enabled,$GUI_ENABLE)
		GUICtrlSetState($Checkbox_OnTop,$GUI_ENABLE)
		GUICtrlSetState($Radio_Max,$GUI_ENABLE)
		GUICtrlSetState($Radio_Min,$GUI_ENABLE)
		GUICtrlSetState($Radio_Res,$GUI_ENABLE)
		GUICtrlSetState($Slider_Trans,$GUI_ENABLE)
		GUICtrlSetState($Label_1,$GUI_ENABLE)
		GUICtrlSetState($Label_2,$GUI_ENABLE)
		GUICtrlSetState($Label_3,$GUI_ENABLE)
		GUICtrlSetState($Label_status,$GUI_ENABLE)
		GUICtrlSetState($Label_color,$GUI_ENABLE)
		GUICtrlSetState($Progress_status,$GUI_ENABLE)
	Else
		GUICtrlSetState($List_Window,$GUI_DISABLE)
		GUICtrlSetState($Menu_Context,$GUI_DISABLE)
		GUICtrlSetState($MenuItem_Refresh,$GUI_DISABLE)
		GUICtrlSetState($MenuItem_Reset,$GUI_DISABLE)
		GUICtrlSetState($MenuItem_Apply,$GUI_DISABLE)
		GUICtrlSetState($MenuItem_About,$GUI_DISABLE)
		GUICtrlSetState($MenuItem_Help,$GUI_DISABLE)
		GUICtrlSetState($MenuItem_Exit,$GUI_DISABLE)
		GUICtrlSetState($Button_Refresh,$GUI_DISABLE)
		GUICtrlSetState($Button_Reset,$GUI_DISABLE)
		GUICtrlSetState($Button_Apply,$GUI_DISABLE)
		GUICtrlSetState($Button_Exit,$GUI_DISABLE)
		GUICtrlSetState($Group_Attributes,$GUI_DISABLE)
		GUICtrlSetState($Checkbox_Visible,$GUI_DISABLE)
		GUICtrlSetState($Checkbox_Enabled,$GUI_DISABLE)
		GUICtrlSetState($Checkbox_OnTop,$GUI_DISABLE)
		GUICtrlSetState($Radio_Max,$GUI_DISABLE)
		GUICtrlSetState($Radio_Min,$GUI_DISABLE)
		GUICtrlSetState($Radio_Res,$GUI_DISABLE)
		GUICtrlSetState($Slider_Trans,$GUI_DISABLE)
		GUICtrlSetState($Label_1,$GUI_DISABLE)
		GUICtrlSetState($Label_2,$GUI_DISABLE)
		GUICtrlSetState($Label_3,$GUI_DISABLE)
		GUICtrlSetState($Label_status,$GUI_DISABLE)
		GUICtrlSetState($Label_color,$GUI_DISABLE)
		GUICtrlSetState($Progress_status,$GUI_DISABLE)
	EndIf
Endfunc

Func ReloadWinList()
	$Setstate = 0
	Cntrlstate()
	$temp = WinList()
	GUICtrlSetData($Progress_status,0)
	GUICtrlSetData($Label_status," Generating list of windows ...")
	sleep(300)
	Dim $temp2[$temp[0][0]]
	Dim $temp3[$temp[0][0]]
	$ii = 1
	For $i = 1 to $temp[0][0]
		If $temp[$i][0] <> "" and $temp[$i][0] <> " " and $temp[$i][0] <> "Window Property Manager" Then
			$ii = $ii + 1
			$temp2[$ii] = $temp[$i][0]
			$temp3[$ii] = $temp[$i][1]
		Endif
	Next
	Dim $windows[$ii][2]
	$windows[0][0] = $ii-1
	$windows[0][1] = $temp[0][0]-$ii-1
	$iii = 100 / $windows[0][0]
	DIm $WinAttrib[$windows[0][0]][3]
	For $i=1 to $windows[0][0]
		sleep(random(5,26))
		GUICtrlSetData($Progress_status,$i*$iii)
		GUICtrlSetData($Label_status," Obtaining data: " & $temp2[$i] & "  ...")
		$windows[$i][0] = $temp2[$i]
		$windows[$i][1] = $temp3[$i]
		$state = WinGetState($windows[$i][0], "")
			If BitAnd($state, 4) Then
				$WinAttrib[$i-1][0] = "True"
			Else
				$WinAttrib[$i-1][0] = "False"
			EndIf
			If BitAnd($state, 2) Then
				$WinAttrib[$i-1][1] = "True"
			Else
				$WinAttrib[$i-1][1] = "False"
			EndIf
			If BitAnd($state, 16) Then
				$WinAttrib[$i-1][2] = "Minimized"
			Else
				If BitAnd($state, 32) Then
					$WinAttrib[$i-1][2] = "Maximized"
				Else
					$WinAttrib[$i-1][2] = "Restored"
				EndIf
			EndIf
		If $windows[$i][0] <> "0" Then $winitem = GUICtrlCreateListViewItem($WinAttrib[$i-1][0] &"|"& $WinAttrib[$i-1][1] &"|"& $WinAttrib[$i-1][2] &"|"& $windows[$i][0] &"|"& $windows[$i][1],$List_Window)
	Next
	GUICtrlSetData($Label_status," Ready")
	$refreshstate = 1
	$Setstate = 1
	Cntrlstate()
	;$window = GuiCtrlCreateListViewItem("Enabled|Visible|Status|Window Name   |Handle ", 10, 10, 386, 279)
EndFunc